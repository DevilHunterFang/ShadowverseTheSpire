package shadowverse;

import basemod.BaseMod;
import basemod.ReflectionHacks;
import basemod.helpers.RelicType;
import basemod.interfaces.*;
import shadowverse.cards.Status.*;
import shadowverseCharbosses.bosses.KMR.KMR;
import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.graphics.Color;
import com.evacipated.cardcrawl.modthespire.lib.SpireConfig;
import com.evacipated.cardcrawl.modthespire.lib.SpireInitializer;
import com.google.gson.Gson;
import com.megacrit.cardcrawl.audio.Sfx;
import com.megacrit.cardcrawl.audio.SoundMaster;
import com.megacrit.cardcrawl.cards.AbstractCard;
import com.megacrit.cardcrawl.core.CardCrawlGame;
import com.megacrit.cardcrawl.core.Settings;
import com.megacrit.cardcrawl.dungeons.*;
import com.megacrit.cardcrawl.helpers.CardHelper;
import com.megacrit.cardcrawl.localization.*;
import com.megacrit.cardcrawl.monsters.MonsterInfo;
import com.megacrit.cardcrawl.ui.panels.EnergyPanel;
import com.megacrit.cardcrawl.vfx.ThoughtBubble;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import shadowverse.cards.Basic.*;
import shadowverse.cards.Common.*;
import shadowverse.cards.Curse.*;
import shadowverse.cards.Uncommon.LuminousMage;
import shadowverse.cards.Neutral.*;
import shadowverse.cards.Rare.*;
import shadowverse.cards.Temp.Mysteria;
import shadowverse.cards.Temp.*;
import shadowverse.cards.Uncommon.*;
import shadowverse.characters.*;
import shadowverse.events.*;
import shadowverse.monsters.*;
import shadowverse.patch.CharacterSelectScreenPatches;
import shadowverse.potions.*;
import shadowverse.relics.*;

import java.nio.charset.StandardCharsets;
import java.util.*;

import static com.badlogic.gdx.graphics.Color.YELLOW;


@SpireInitializer
public class Shadowverse implements PostInitializeSubscriber, EditCardsSubscriber, EditStringsSubscriber, EditKeywordsSubscriber, EditCharactersSubscriber, EditRelicsSubscriber {
    public static final Color WITCH_BLUE = CardHelper.getColor(46, 71, 81);
    public static final Color ELF_GREEN = CardHelper.getColor(197, 220, 88);
    public static final Color NECRO_PURPLE = CardHelper.getColor(71, 26, 106);
    public static final Color VAMPIRE_SCARLET = CardHelper.getColor(107, 50, 55);
    public static final Color NEMESIS_SKY = CardHelper.getColor(18, 108, 146);
    public static final Color ROYAL_YELLOW = CardHelper.getColor(152, 156, 1);
    public static final Color BISHOP_WHITE = CardHelper.getColor(239, 236, 186);
    public static final Logger logger = LogManager.getLogger(Shadowverse.class.getName());
    public static Properties ShadowverseDefaults = new Properties();
    public static Map<String, String> tempmusic = new HashMap<>();

    public static boolean Enhance(int EH) {
        boolean res = false;
        if (EnergyPanel.getCurrentEnergy() >= EH) {
            res = true;
        }
        return res;
    }


    public static boolean Accelerate(AbstractCard card) {
        boolean res = false;
        if (EnergyPanel.getCurrentEnergy() < card.cost) {
            res = true;
        }
        return res;
    }

    public static boolean canSpawnAmuletOrb() {
        if (AbstractDungeon.player.hasEmptyOrb() || (AbstractDungeon.player.masterMaxOrbs == 0 && AbstractDungeon.player.maxOrbs == 0))
            return true;
        UIStrings UI_STRINGS = CardCrawlGame.languagePack.getUIString("shadowverse:AmuletText");
        AbstractDungeon.effectList.add(new ThoughtBubble(AbstractDungeon.player.dialogX, AbstractDungeon.player.dialogY, 2.0F, UI_STRINGS.TEXT[0], true));
        return false;
    }

    public Shadowverse() {
        logger.info("Subscribing");
        BaseMod.subscribe((ISubscriber) this);
        BaseMod.addColor(Witchcraft.Enums.COLOR_BLUE, WITCH_BLUE, WITCH_BLUE, WITCH_BLUE, WITCH_BLUE, WITCH_BLUE, WITCH_BLUE, WITCH_BLUE, "img/512card/bg_attack_default_gray.png", "img/512card/bg_skill_default_gray.png", "img/512card/bg_power_default_gray.png", "img/512card/card_default_gray_orb.png", "img/1024card/bg_attack_default_gray.png", "img/1024card/bg_skill_default_gray.png", "img/1024card/bg_power_default_gray.png", "img/1024card/card_default_gray_orb.png", "img/512card/card_small_orb.png");
        BaseMod.addColor(Elf.Enums.COLOR_GREEN, ELF_GREEN, ELF_GREEN, ELF_GREEN, ELF_GREEN, ELF_GREEN, ELF_GREEN, ELF_GREEN, "img/512elf/bg_attack_default_gray.png", "img/512elf/bg_skill_default_gray.png", "img/512elf/bg_power_default_gray.png", "img/512elf/card_default_gray_orb.png", "img/1024elf/bg_attack_default_gray.png", "img/1024elf/bg_skill_default_gray.png", "img/1024elf/bg_power_default_gray.png", "img/1024elf/card_default_gray_orb.png", "img/512elf/card_small_orb.png");
        BaseMod.addColor(Necromancer.Enums.COLOR_PURPLE, NECRO_PURPLE, NECRO_PURPLE, NECRO_PURPLE, NECRO_PURPLE, NECRO_PURPLE, NECRO_PURPLE, NECRO_PURPLE, "img/512necro/bg_attack_default_gray.png", "img/512necro/bg_skill_default_gray.png", "img/512necro/bg_power_default_gray.png", "img/512necro/card_default_gray_orb.png", "img/1024necro/bg_attack_default_gray.png", "img/1024necro/bg_skill_default_gray.png", "img/1024necro/bg_power_default_gray.png", "img/1024necro/card_default_gray_orb.png", "img/512necro/card_small_orb.png");
        BaseMod.addColor(Vampire.Enums.COLOR_SCARLET, VAMPIRE_SCARLET, VAMPIRE_SCARLET, VAMPIRE_SCARLET, VAMPIRE_SCARLET, VAMPIRE_SCARLET, VAMPIRE_SCARLET, VAMPIRE_SCARLET, "img/512vamp/bg_attack_default_gray.png", "img/512vamp/bg_skill_default_gray.png", "img/512vamp/bg_power_default_gray.png", "img/512vamp/card_default_gray_orb.png", "img/1024vamp/bg_attack_default_gray.png", "img/1024vamp/bg_skill_default_gray.png", "img/1024vamp/bg_power_default_gray.png", "img/1024vamp/card_default_gray_orb.png", "img/512vamp/card_small_orb.png");
        BaseMod.addColor(Nemesis.Enums.COLOR_SKY, NEMESIS_SKY, NEMESIS_SKY, NEMESIS_SKY, NEMESIS_SKY, NEMESIS_SKY, NEMESIS_SKY, NEMESIS_SKY, "img/512nemesis/bg_attack_default_gray.png", "img/512nemesis/bg_skill_default_gray.png", "img/512nemesis/bg_power_default_gray.png", "img/512nemesis/card_default_gray_orb.png", "img/1024nemesis/bg_attack_default_gray.png", "img/1024nemesis/bg_skill_default_gray.png", "img/1024nemesis/bg_power_default_gray.png", "img/1024nemesis/card_default_gray_orb.png", "img/512nemesis/card_small_orb.png");
        BaseMod.addColor(Royal.Enums.COLOR_YELLOW, ROYAL_YELLOW, ROYAL_YELLOW, ROYAL_YELLOW, ROYAL_YELLOW, ROYAL_YELLOW, ROYAL_YELLOW, ROYAL_YELLOW, "img/512royal/bg_attack_default_gray.png", "img/512royal/bg_skill_default_gray.png", "img/512royal/bg_power_default_gray.png", "img/512royal/card_default_gray_orb.png", "img/1024royal/bg_attack_default_gray.png", "img/1024royal/bg_skill_default_gray.png", "img/1024royal/bg_power_default_gray.png", "img/1024royal/card_default_gray_orb.png", "img/512royal/card_small_orb.png");
        BaseMod.addColor(Bishop.Enums.COLOR_WHITE, BISHOP_WHITE, BISHOP_WHITE, BISHOP_WHITE, BISHOP_WHITE, BISHOP_WHITE, BISHOP_WHITE, BISHOP_WHITE, "img/512bishop/bg_attack_default_gray.png", "img/512bishop/bg_skill_default_gray.png", "img/512bishop/bg_power_default_gray.png", "img/512bishop/card_default_gray_orb.png", "img/1024bishop/bg_attack_default_gray.png", "img/1024bishop/bg_skill_default_gray.png", "img/1024bishop/bg_power_default_gray.png", "img/1024bishop/card_default_gray_orb.png", "img/512bishop/card_small_orb.png");
        logger.info("Success subscribe");
    }

    public static void initialize() {
        logger.info("Initializing");
        Shadowverse shadowverse = new Shadowverse();
        logger.info("Initialization success");
    }

    private static String loadJson(String jsonPath) {
        return Gdx.files.internal(jsonPath).readString(String.valueOf(StandardCharsets.UTF_8));
    }

    public void receiveEditKeywords() {
        logger.info("Adding Keywords");
        String keywordsPath = "localization/keywords-" + Settings.language + ".json";
        Gson gson = new Gson();
        Keywords keywords = (Keywords) gson.fromJson(loadJson(keywordsPath), Keywords.class);
        Keyword[] var4 = keywords.keywords;
        int var5 = var4.length;
        for (int var6 = 0; var6 < var5; var6++) {
            Keyword key = var4[var6];
            logger.info("Loading keyword : " + key.NAMES[0]);
            BaseMod.addKeyword(key.NAMES, key.DESCRIPTION);
        }
        logger.info("Keywords setting finished.");
    }

    private HashMap<String, Sfx> getSoundsMap() {
        return (HashMap<String, Sfx>) ReflectionHacks.getPrivate(CardCrawlGame.sound, SoundMaster.class, "map");
    }

    public void receivePostInitialize() {
        loadSettings();
        BaseMod.addEvent(PinyaEvent.ID, PinyaEvent.class);
        BaseMod.addEvent(GemFortune.ID, GemFortune.class, TheCity.ID);
        BaseMod.addEvent(Crossover.ID, Crossover.class);
        BaseMod.addEvent(NaturalMachine.ID, NaturalMachine.class, Exordium.ID);
        BaseMod.addEvent(SellCard.ID, SellCard.class, TheCity.ID);
        BaseMod.addMonster(Belphomet.ID, Belphomet::new);
        BaseMod.addMonster(Iceschillendrig.ID, Iceschillendrig::new);
        BaseMod.addMonster(VincentBOSS.ID, VincentBOSS::new);
        BaseMod.addMonster(Lelouch.ID, () -> new Lelouch());
        BaseMod.addMonster(KMR.ID, KMR::new);
        BaseMod.addMonster(Naht.ID, Naht::new);
        BaseMod.addMonster(shadowverseCharbosses.bosses.Urias.Urias.ID, shadowverseCharbosses.bosses.Urias.Urias::new);
        BaseMod.addEvent(LelouchCollaboration.ID, LelouchCollaboration.class, TheBeyond.ID);
        BaseMod.addBoss(TheEnding.ID, KMR.ID, "img/monsters/UI/KMR.png", "img/monsters/UI/KMR_Outline.png");
        BaseMod.addBoss(TheEnding.ID, KMR.ID, "img/monsters/UI/KMR.png", "img/monsters/UI/KMR_Outline.png");
        BaseMod.addBoss(TheEnding.ID, KMR.ID, "img/monsters/UI/KMR.png", "img/monsters/UI/KMR_Outline.png");
        BaseMod.addBoss(TheBeyond.ID, Iceschillendrig.ID, "img/monsters/UI/IC.png", "img/monsters/UI/IC_Outline.png");
        BaseMod.addBoss(TheBeyond.ID, Belphomet.ID, "img/monsters/UI/Belphomet.png", "img/monsters/UI/Belphomet_Outline.png");
        BaseMod.addBoss(TheBeyond.ID, VincentBOSS.ID, "img/monsters/UI/VincentBOSS.png", "img/monsters/UI/VincentBOSS_Outline.png");
        BaseMod.addBoss(TheBeyond.ID, Naht.ID, "img/monsters/UI/Naht.png", "img/monsters/UI/Naht_Outline.png");
        BaseMod.addBoss(TheCity.ID, shadowverseCharbosses.bosses.Urias.Urias.ID,"img/monsters/UI/Urias.png", "img/monsters/UI/Urias_Outline.png");
        BaseMod.addMonster(Megaera.ID, () -> new Megaera());
        BaseMod.addEliteEncounter(TheBeyond.ID, new MonsterInfo(Megaera.ID, 1.5F));
        BaseMod.addMonster(Tisiphone.ID, () -> new Tisiphone());
        BaseMod.addEliteEncounter(TheBeyond.ID, new MonsterInfo(Tisiphone.ID, 1.5F));
        BaseMod.addMonster(Alector.ID, () -> new Alector());
        BaseMod.addEliteEncounter(TheBeyond.ID, new MonsterInfo(Alector.ID, 1.5F));
        BaseMod.addPotion(SatanPotion.class, Color.CYAN, Color.RED, Color.BLACK, SatanPotion.POTION_ID);
        BaseMod.addPotion(ElfPotion.class, Color.GREEN, Color.LIME, Color.GOLD, ElfPotion.POTION_ID, Elf.Enums.Elf);
        BaseMod.addPotion(BoostPotion.class, Color.BLUE, Color.SKY, Color.SKY, BoostPotion.POTION_ID, Witchcraft.Enums.WITCHCRAFT);
        BaseMod.addPotion(EarthPotion.class, Color.MAROON, Color.BROWN, Color.BROWN, EarthPotion.POTION_ID, Witchcraft.Enums.WITCHCRAFT);
        BaseMod.addPotion(KeepPotion.class, Color.PURPLE, Color.VIOLET, Color.VIOLET, KeepPotion.POTION_ID, Witchcraft.Enums.WITCHCRAFT);
        BaseMod.addPotion(CemeteryPotion.class, Color.WHITE, Color.PURPLE, Color.PURPLE, CemeteryPotion.POTION_ID, Necromancer.Enums.Necromancer);
        BaseMod.addPotion(ReanimatePotion.class, Color.DARK_GRAY, Color.BLACK, Color.PURPLE, ReanimatePotion.POTION_ID, Necromancer.Enums.Necromancer);
        BaseMod.addPotion(RosePotion.class, Color.MAGENTA, Color.RED, Color.MAGENTA, RosePotion.POTION_ID, Elf.Enums.Elf);
        BaseMod.addPotion(NaterranPotion.class, Color.FOREST, Color.BROWN, Color.FOREST, NaterranPotion.POTION_ID);
        BaseMod.addPotion(BatPotion.class, Color.SCARLET, Color.BLACK, Color.SCARLET, BatPotion.POTION_ID, Vampire.Enums.Vampire);
        BaseMod.addPotion(EpitaphPotion.class, Color.SCARLET, Color.GOLDENROD, Color.SCARLET, EpitaphPotion.POTION_ID, Vampire.Enums.Vampire);
        BaseMod.addPotion(ArtifactPotion.class, Color.CYAN, Color.CLEAR, Color.CYAN, RosePotion.POTION_ID, Nemesis.Enums.Nemesis);
        BaseMod.addPotion(RevisedPotion.class, Color.BROWN, Color.BROWN, Color.BROWN, RevisedPotion.POTION_ID, Nemesis.Enums.Nemesis);
        BaseMod.addPotion(BuffPotion.class, Color.RED, Color.RED, YELLOW, BuffPotion.POTION_ID, Royal.Enums.Royal);
        BaseMod.addPotion(EvolutionPotion.class, Color.YELLOW, Color.YELLOW, null, EvolutionPotion.POTION_ID, Royal.Enums.Royal);
        BaseMod.addPotion(MinionPotion.class, Color.YELLOW, Color.WHITE, null, MinionPotion.POTION_ID, Royal.Enums.Royal);
        BaseMod.addPotion(ReduceCountDownPotion.class, Color.WHITE, Color.GOLD, Color.WHITE, ReduceCountDownPotion.POTION_ID, Bishop.Enums.Bishop);
        BaseMod.addPotion(IndulgencePotion.class, Color.DARK_GRAY, Color.FIREBRICK, null, IndulgencePotion.POTION_ID, Bishop.Enums.Bishop);
        BaseMod.addPotion(SacredHealingPotion.class, Color.WHITE, Color.GOLD, null, SacredHealingPotion.POTION_ID, Bishop.Enums.Bishop);
        tempmusic.put("GrandBattle","sounds/GrandBattle.mp3");
        tempmusic.put("Aiolon","sounds/Aiolon.mp3");
        tempmusic.put("StormOverRivayle","sounds/StormOverRivayle.mp3");
        tempmusic.put("IceschillendrigBgm","sounds/IschellendrigBgm.mp3");
        tempmusic.put("UriasBgm","sounds/UriasBgm.mp3");
        HashMap<String, Sfx> reflectedMap = getSoundsMap();
        reflectedMap.put("spell_boost", new Sfx("sounds/spell_boost2.wav"));
        reflectedMap.put("EarthEssence", new Sfx("sounds/EarthEssence.wav"));
        reflectedMap.put("witch_selected", new Sfx("sounds/witch_selected.wav"));
        reflectedMap.put("OmenOfTruth", new Sfx("sounds/OmenOfTruth.wav"));
        reflectedMap.put("DimensionalWitch", new Sfx("sounds/DimensionalWitch.wav"));
        reflectedMap.put("DimensionShift", new Sfx("sounds/DimensionShift.wav"));
        reflectedMap.put("ZealotOfTruth", new Sfx("sounds/ZealotOfTruth.wav"));
        reflectedMap.put("MysticSeeker", new Sfx("sounds/MysticSeeker.wav"));
        reflectedMap.put("EdictOfTruth", new Sfx("sounds/EdictOfTruth.wav"));
        reflectedMap.put("Lou", new Sfx("sounds/Lou.wav"));
        reflectedMap.put("TruthsAdjudication", new Sfx("sounds/TruthsAdjudication.wav"));
        reflectedMap.put("MasterMageLevi", new Sfx("sounds/MasterMageLevi.wav"));
        reflectedMap.put("PiousInstructor", new Sfx("sounds/PiousInstructor.wav"));
        reflectedMap.put("PiousInstructorPower", new Sfx("sounds/PiousInstructorPower.wav"));
        reflectedMap.put("Clarke", new Sfx("sounds/Clarke.wav"));
        reflectedMap.put("Clarke_Accelerate", new Sfx("sounds/Clarke_Accelerate.wav"));
        reflectedMap.put("Faust", new Sfx("sounds/Faust.wav"));
        reflectedMap.put("FaustPower", new Sfx("sounds/FaustPower.wav"));
        reflectedMap.put("Magisa", new Sfx("sounds/Magisa.wav"));
        reflectedMap.put("Chaos", new Sfx("sounds/Chaos.wav"));
        reflectedMap.put("Runie", new Sfx("sounds/Runie.wav"));
        reflectedMap.put("ForbiddenDarkMage", new Sfx("sounds/ForbiddenDarkMage.wav"));
        reflectedMap.put("DarkMagePower", new Sfx("sounds/DarkMagePower.wav"));
        reflectedMap.put("JetBroomWitch", new Sfx("sounds/JetBroomWitch.wav"));
        reflectedMap.put("TetrasMettle", new Sfx("sounds/TetrasMettle.wav"));
        reflectedMap.put("IsabellesConjuration", new Sfx("sounds/IsabellesConjuration.wav"));
        reflectedMap.put("SorceryInSolidarity", new Sfx("sounds/SorceryInSolidarity.wav"));
        reflectedMap.put("MechabookSorcerer", new Sfx("sounds/MechabookSorcerer.wav"));
        reflectedMap.put("SonicFour", new Sfx("sounds/SonicFour.wav"));
        reflectedMap.put("Tetra", new Sfx("sounds/Tetra.wav"));
        reflectedMap.put("MechastaffSorcerer", new Sfx("sounds/MechastaffSorcerer.wav"));
        reflectedMap.put("ArsMagna", new Sfx("sounds/ArsMagna.wav"));
        reflectedMap.put("Cagliostro1", new Sfx("sounds/Cagliostro1.wav"));
        reflectedMap.put("Cagliostro2", new Sfx("sounds/Cagliostro2.wav"));
        reflectedMap.put("Awakened", new Sfx("sounds/Awakened.wav"));
        reflectedMap.put("ErasmusPower", new Sfx("sounds/ErasmusPower.wav"));
        reflectedMap.put("Erasmus", new Sfx("sounds/Erasmus.wav"));
        reflectedMap.put("Oz", new Sfx("sounds/Oz.wav"));
        reflectedMap.put("OzPower", new Sfx("sounds/OzPower.wav"));
        reflectedMap.put("Geoelementist", new Sfx("sounds/Geoelementist.wav"));
        reflectedMap.put("Stormelementalist", new Sfx("sounds/Stormelementalist.wav"));
        reflectedMap.put("Pyromancer", new Sfx("sounds/Pyromancer.wav"));
        reflectedMap.put("Riley", new Sfx("sounds/Riley.wav"));
        reflectedMap.put("DualAngle", new Sfx("sounds/DualAngle.wav"));
        reflectedMap.put("Ghios", new Sfx("sounds/Ghios.wav"));
        reflectedMap.put("OmenOfOne", new Sfx("sounds/OmenOfOne.wav"));
        reflectedMap.put("Mysteria", new Sfx("sounds/Mysteria.wav"));
        reflectedMap.put("EarthFall", new Sfx("sounds/EarthFall.wav"));
        reflectedMap.put("InfernalSurge", new Sfx("sounds/InfernalSurge.wav"));
        reflectedMap.put("InfernalGaze", new Sfx("sounds/InfernalGaze.wav"));
        reflectedMap.put("HeavenFall", new Sfx("sounds/HeavenFall.wav"));
        reflectedMap.put("Flamelord", new Sfx("sounds/Flamelord.wav"));
        reflectedMap.put("ViciousCommander", new Sfx("sounds/ViciousCommander.wav"));
        reflectedMap.put("WrathfulIcefiend", new Sfx("sounds/WrathfulIcefiend.wav"));
        reflectedMap.put("HellBeast", new Sfx("sounds/HellBeast.wav"));
        reflectedMap.put("Satan", new Sfx("sounds/Satan.wav"));
        reflectedMap.put("Satan_Accelerate", new Sfx("sounds/Satan_Accelerate.wav"));
        reflectedMap.put("EmbodimentOfCocytus", new Sfx("sounds/EmbodimentOfCocytus.wav"));
        reflectedMap.put("Eleanor", new Sfx("sounds/Eleanor.wav"));
        reflectedMap.put("JudgmentWord", new Sfx("sounds/JudgmentWord.wav"));
        reflectedMap.put("Vincent", new Sfx("sounds/Vincent.wav"));
        reflectedMap.put("GrimoireSorcerer", new Sfx("sounds/GrimoireSorcerer.wav"));
        reflectedMap.put("Aeroelementalist", new Sfx("sounds/Aeroelementalist.wav"));
        reflectedMap.put("Zeus", new Sfx("sounds/Zeus.wav"));
        reflectedMap.put("StarBright", new Sfx("sounds/StarBright.wav"));
        reflectedMap.put("TheWorld", new Sfx("sounds/TheWorld.wav"));
        reflectedMap.put("TheWorld_I", new Sfx("sounds/TheWorld_I.wav"));
        reflectedMap.put("Grimnir", new Sfx("sounds/Grimnir.wav"));
        reflectedMap.put("SlashOfOne", new Sfx("sounds/SlashOfOne.wav"));
        reflectedMap.put("SilentRider", new Sfx("sounds/SilentRider.wav"));
        reflectedMap.put("Servant", new Sfx("sounds/Servant.wav"));
        reflectedMap.put("OldSatan", new Sfx("sounds/OldSatan.wav"));
        reflectedMap.put("BellAngle", new Sfx("sounds/BellAngle.wav"));
        reflectedMap.put("Ignorant", new Sfx("sounds/Ignorant.wav"));
        reflectedMap.put("Omniscient", new Sfx("sounds/Omniscient.wav"));
        reflectedMap.put("TheFool", new Sfx("sounds/TheFool.wav"));
        reflectedMap.put("Mother", new Sfx("sounds/Mother.wav"));
        reflectedMap.put("Flame", new Sfx("sounds/Flame.wav"));
        reflectedMap.put("Glass", new Sfx("sounds/Glass.wav"));
        reflectedMap.put("FlameNGlass", new Sfx("sounds/FlameNGlass.wav"));
        reflectedMap.put("FlameNGlassPower", new Sfx("sounds/FlameNGlassPower.wav"));
        reflectedMap.put("LegendaryFighter", new Sfx("sounds/LegendaryFighter.wav"));
        reflectedMap.put("LegendaryFighterPower", new Sfx("sounds/LegendaryFighterPower.wav"));
        reflectedMap.put("LegendaryFighterA", new Sfx("sounds/LegendaryFighterA.wav"));
        reflectedMap.put("Gabriel", new Sfx("sounds/Gabriel.wav"));
        reflectedMap.put("Kuon", new Sfx("sounds/Kuon.wav"));
        reflectedMap.put("KuonA", new Sfx("sounds/KuonA.wav"));
        reflectedMap.put("XCW_Hurt", new Sfx("sounds/XCW_Hurt.wav"));
        reflectedMap.put("Owen", new Sfx("sounds/Owen.wav"));
        reflectedMap.put("Grea", new Sfx("sounds/Grea.wav"));
        reflectedMap.put("Ember", new Sfx("sounds/Ember.wav"));
        reflectedMap.put("Inferno", new Sfx("sounds/Inferno.wav"));
        reflectedMap.put("Anne", new Sfx("sounds/Anne.wav"));
        reflectedMap.put("AnnesSorcery", new Sfx("sounds/AnnesSorcery.wav"));
        reflectedMap.put("Miranda", new Sfx("sounds/Miranda.wav"));
        reflectedMap.put("XCW_Hurt2", new Sfx("sounds/XCW_Hurt2.wav"));
        reflectedMap.put("XCW_Hurt3", new Sfx("sounds/XCW_Hurt3.wav"));
        reflectedMap.put("XCW_Hurt4", new Sfx("sounds/XCW_Hurt4.wav"));
        reflectedMap.put("BlackPinya", new Sfx("sounds/BlackPinya.wav"));
        reflectedMap.put("Maiser", new Sfx("sounds/Maiser.wav"));
        reflectedMap.put("RapidFire", new Sfx("sounds/RapidFire.wav"));
        reflectedMap.put("Belphomet2", new Sfx("sounds/Belphomet2.wav"));
        reflectedMap.put("Belphomet3", new Sfx("sounds/Belphomet3.wav"));
        reflectedMap.put("Belphomet4", new Sfx("sounds/Belphomet4.wav"));
        reflectedMap.put("Belphomet5", new Sfx("sounds/Belphomet5.wav"));
        reflectedMap.put("Belphomet6", new Sfx("sounds/Belphomet6.wav"));
        reflectedMap.put("IC1", new Sfx("sounds/IC1.wav"));
        reflectedMap.put("IC2", new Sfx("sounds/IC2.wav"));
        reflectedMap.put("IC3", new Sfx("sounds/IC3.wav"));
        reflectedMap.put("IC4", new Sfx("sounds/IC4.wav"));
        reflectedMap.put("IC5", new Sfx("sounds/IC5.wav"));
        reflectedMap.put("MagiTrain", new Sfx("sounds/MagiTrain.wav"));
        reflectedMap.put("Arisa_Selected", new Sfx("sounds/Arisa_Selected.wav"));
        reflectedMap.put("Arisa_Hurt", new Sfx("sounds/Arisa_Hurt.wav"));
        reflectedMap.put("Arisa_Hurt2", new Sfx("sounds/Arisa_Hurt2.wav"));
        reflectedMap.put("Arisa_Hurt3", new Sfx("sounds/Arisa_Hurt3.wav"));
        reflectedMap.put("Arisa_Hurt4", new Sfx("sounds/Arisa_Hurt4.wav"));
        reflectedMap.put("Fairy", new Sfx("sounds/Fairy.wav"));
        reflectedMap.put("FairyWhisperer", new Sfx("sounds/FairyWhisperer.wav"));
        reflectedMap.put("SylvanJustice", new Sfx("sounds/SylvanJustice.wav"));
        reflectedMap.put("NaturesGuidance", new Sfx("sounds/NaturesGuidance.wav"));
        reflectedMap.put("WhirlwindRhinoceroach", new Sfx("sounds/WhirlwindRhinoceroach.wav"));
        reflectedMap.put("Rhinoceroach", new Sfx("sounds/Rhinoceroach.wav"));
        reflectedMap.put("WardOfUnkilling", new Sfx("sounds/WardOfUnkilling.wav"));
        reflectedMap.put("OmenOfUnkilling", new Sfx("sounds/OmenOfUnkilling.wav"));
        reflectedMap.put("AriasWhirlwind", new Sfx("sounds/AriasWhirlwind.wav"));
        reflectedMap.put("Bayle", new Sfx("sounds/Bayle.wav"));
        reflectedMap.put("Hero", new Sfx("sounds/Hero.wav"));
        reflectedMap.put("WindFall", new Sfx("sounds/WindFall.wav"));
        reflectedMap.put("ElfGuard", new Sfx("sounds/ElfGuard.wav"));
        reflectedMap.put("Aria", new Sfx("sounds/Aria.wav"));
        reflectedMap.put("GuardOfMachinatree", new Sfx("sounds/GuardOfMachinatree.wav"));
        reflectedMap.put("Damian", new Sfx("sounds/Damian.wav"));
        reflectedMap.put("MachineClaw", new Sfx("sounds/MachineClaw.wav"));
        reflectedMap.put("IronglideElf", new Sfx("sounds/IronglideElf.wav"));
        reflectedMap.put("Cassiopeia", new Sfx("sounds/Cassiopeia.wav"));
        reflectedMap.put("Loxis", new Sfx("sounds/Loxis.wav"));
        reflectedMap.put("LoxisPower1", new Sfx("sounds/LoxisPower1.wav"));
        reflectedMap.put("LoxisPower2", new Sfx("sounds/LoxisPower2.wav"));
        reflectedMap.put("Packing", new Sfx("sounds/Packing.wav"));
        reflectedMap.put("Ladica", new Sfx("sounds/Ladica.wav"));
        reflectedMap.put("TreacherousReversal", new Sfx("sounds/TreacherousReversal.wav"));
        reflectedMap.put("TheHanged1", new Sfx("sounds/TheHanged1.wav"));
        reflectedMap.put("TheHanged2", new Sfx("sounds/TheHanged2.wav"));
        reflectedMap.put("Verdant", new Sfx("sounds/Verdant.wav"));
        reflectedMap.put("WindFairy", new Sfx("sounds/WindFairy.wav"));
        reflectedMap.put("ServantOfUnkilling", new Sfx("sounds/ServantOfUnkilling.wav"));
        reflectedMap.put("MarkOfUnkilling", new Sfx("sounds/MarkOfUnkilling.wav"));
        reflectedMap.put("ZealotOfUnkilling", new Sfx("sounds/ZealotOfUnkilling.wav"));
        reflectedMap.put("VarmintHunter", new Sfx("sounds/VarmintHunter.wav"));
        reflectedMap.put("VarmintHunterPower", new Sfx("sounds/VarmintHunterPower.wav"));
        reflectedMap.put("Beast", new Sfx("sounds/Beast.wav"));
        reflectedMap.put("Beauty", new Sfx("sounds/Beauty.wav"));
        reflectedMap.put("Sekka", new Sfx("sounds/Sekka.wav"));
        reflectedMap.put("ResolveOfSekka", new Sfx("sounds/ResolveOfSekka.wav"));
        reflectedMap.put("ForestFairy", new Sfx("sounds/ForestFairy.wav"));
        reflectedMap.put("ForestFairyPower", new Sfx("sounds/ForestFairyPower.wav"));
        reflectedMap.put("Lisa", new Sfx("sounds/Lisa.wav"));
        reflectedMap.put("GreenWoodGuardian", new Sfx("sounds/GreenWoodGuardian.wav"));
        reflectedMap.put("WoodlandCleaver", new Sfx("sounds/WoodlandCleaver.wav"));
        reflectedMap.put("GreenbrierElf", new Sfx("sounds/GreenbrierElf.wav"));
        reflectedMap.put("Lymaga", new Sfx("sounds/Lymaga.wav"));
        reflectedMap.put("Lymaga_Acc", new Sfx("sounds/Lymaga_Acc.wav"));
        reflectedMap.put("WildwoodMatriarch", new Sfx("sounds/WildwoodMatriarch.wav"));
        reflectedMap.put("Aerin", new Sfx("sounds/Aerin.wav"));
        reflectedMap.put("Metera", new Sfx("sounds/Metera.wav"));
        reflectedMap.put("Rino", new Sfx("sounds/Rino.wav"));
        reflectedMap.put("Rino_UB", new Sfx("sounds/Rino_UB.wav"));
        reflectedMap.put("Kokkoro", new Sfx("sounds/Kokkoro.wav"));
        reflectedMap.put("Kokkoro_UB", new Sfx("sounds/Kokkoro_UB.wav"));
        reflectedMap.put("Amataz", new Sfx("sounds/Amataz.wav"));
        reflectedMap.put("DivineSmithing", new Sfx("sounds/DivineSmithing.wav"));
        reflectedMap.put("Cleft", new Sfx("sounds/Cleft.wav"));
        reflectedMap.put("Lycoris", new Sfx("sounds/Lycoris.wav"));
        reflectedMap.put("RoseQueen", new Sfx("sounds/RoseQueen.wav"));
        reflectedMap.put("PameraPower", new Sfx("sounds/PameraPower.wav"));
        reflectedMap.put("Pamera", new Sfx("sounds/Pamera.wav"));
        reflectedMap.put("Korwa", new Sfx("sounds/Korwa.wav"));
        reflectedMap.put("Fil", new Sfx("sounds/Fil.wav"));
        reflectedMap.put("Megaera_PREP", new Sfx("sounds/Megaera_PREP.wav"));
        reflectedMap.put("Megaera_D1", new Sfx("sounds/Megaera_D1.wav"));
        reflectedMap.put("Megaera_D2", new Sfx("sounds/Megaera_D2.wav"));
        reflectedMap.put("Tisiphone_SLASH", new Sfx("sounds/Tisiphone_SLASH.wav"));
        reflectedMap.put("Tisiphone_D1", new Sfx("sounds/Tisiphone_D1.wav"));
        reflectedMap.put("Tisiphone_D2", new Sfx("sounds/Tisiphone_D2.wav"));
        reflectedMap.put("Vincent_A1", new Sfx("sounds/Vincent_A1.wav"));
        reflectedMap.put("Vincent_A2", new Sfx("sounds/Vincent_A2.wav"));
        reflectedMap.put("Vincent_A3", new Sfx("sounds/Vincent_A3.wav"));
        reflectedMap.put("Vincent_A4", new Sfx("sounds/Vincent_A4.wav"));
        reflectedMap.put("Vincent_E1", new Sfx("sounds/Vincent_E1.wav"));
        reflectedMap.put("Vincent_E3", new Sfx("sounds/Vincent_E3.wav"));
        reflectedMap.put("CalamityMode", new Sfx("sounds/CalamityMode.wav"));
        reflectedMap.put("CalamityEnd", new Sfx("sounds/CalamityEnd.wav"));
        reflectedMap.put("NewGrea", new Sfx("sounds/NewGrea.wav"));
        reflectedMap.put("NewEmber", new Sfx("sounds/NewEmber.wav"));
        reflectedMap.put("NewAnne", new Sfx("sounds/NewAnne.wav"));
        reflectedMap.put("ExceedBurst", new Sfx("sounds/ExceedBurst.wav"));
        reflectedMap.put("Alector_PREP", new Sfx("sounds/Alector_PREP.wav"));
        reflectedMap.put("Alector_D1", new Sfx("sounds/Alector_D1.wav"));
        reflectedMap.put("Alector_D2", new Sfx("sounds/Alector_D2.wav"));
        reflectedMap.put("Lelouch_GEASS", new Sfx("sounds/Lelouch_GEASS.wav"));
        reflectedMap.put("Lelouch_Checkmate", new Sfx("sounds/Lelouch_Checkmate.wav"));
        reflectedMap.put("FatalOrder", new Sfx("sounds/FatalOrder.wav"));
        reflectedMap.put("Suzaku_SLASH", new Sfx("sounds/Suzaku_SLASH.wav"));
        reflectedMap.put("Suzaku_BEAM", new Sfx("sounds/Suzaku_BEAM.wav"));
        reflectedMap.put("Suzaku_CURSE", new Sfx("sounds/Suzaku_CURSE.wav"));
        reflectedMap.put("Necro_Selected", new Sfx("sounds/Necro_Selected.wav"));
        reflectedMap.put("Necro_Hurt", new Sfx("sounds/Necro_Hurt.wav"));
        reflectedMap.put("Necro_Hurt2", new Sfx("sounds/Necro_Hurt2.wav"));
        reflectedMap.put("Necro_Hurt3", new Sfx("sounds/Necro_Hurt3.wav"));
        reflectedMap.put("Necro_Hurt4", new Sfx("sounds/Necro_Hurt4.wav"));
        reflectedMap.put("UndyingResentment", new Sfx("sounds/UndyingResentment.wav"));
        reflectedMap.put("Mordecai", new Sfx("sounds/Mordecai.wav"));
        reflectedMap.put("Minthe", new Sfx("sounds/Minthe.wav"));
        reflectedMap.put("Fafnir", new Sfx("sounds/Fafnir.wav"));
        reflectedMap.put("ApostleOfSilence", new Sfx("sounds/ApostleOfSilence.wav"));
        reflectedMap.put("DiscipleOfSilence", new Sfx("sounds/DiscipleOfSilence.wav"));
        reflectedMap.put("Litch", new Sfx("sounds/Litch.wav"));
        reflectedMap.put("Ceres", new Sfx("sounds/Ceres.wav"));
        reflectedMap.put("EternalVow", new Sfx("sounds/EternalVow.wav"));
        reflectedMap.put("Hector", new Sfx("sounds/Hector.wav"));
        reflectedMap.put("Lubelle", new Sfx("sounds/Lubelle.wav"));
        reflectedMap.put("LubellePower", new Sfx("sounds/LubellePower.wav"));
        reflectedMap.put("Thoth", new Sfx("sounds/Thoth.wav"));
        reflectedMap.put("GhostRider", new Sfx("sounds/GhostRider.wav"));
        reflectedMap.put("Ceridwen", new Sfx("sounds/Ceridwen.wav"));
        reflectedMap.put("TheLovers", new Sfx("sounds/TheLovers.wav"));
        reflectedMap.put("TheLoversEH", new Sfx("sounds/TheLoversEH.wav"));
        reflectedMap.put("SpiritCurator", new Sfx("sounds/SpiritCurator.wav"));
        reflectedMap.put("ForbiddenArt", new Sfx("sounds/ForbiddenArt.wav"));
        reflectedMap.put("Nicola", new Sfx("sounds/Nicola.wav"));
        reflectedMap.put("Chris", new Sfx("sounds/Chris.wav"));
        reflectedMap.put("SoulStrike", new Sfx("sounds/SoulStrike.wav"));
        reflectedMap.put("Kagero", new Sfx("sounds/Kagero.wav"));
        reflectedMap.put("WightKing", new Sfx("sounds/WightKing.wav"));
        reflectedMap.put("Wight", new Sfx("sounds/Wight.wav"));
        reflectedMap.put("ImmortalThane", new Sfx("sounds/ImmortalThane.wav"));
        reflectedMap.put("NecroAssassin", new Sfx("sounds/NecroAssassin.wav"));
        reflectedMap.put("Nephthys", new Sfx("sounds/Nephthys.wav"));
        reflectedMap.put("CarnivalNecromancer", new Sfx("sounds/CarnivalNecromancer.wav"));
        reflectedMap.put("CarnivalNecromancer_EH", new Sfx("sounds/CarnivalNecromancer_EH.wav"));
        reflectedMap.put("CarnivalNecromancerPower", new Sfx("sounds/CarnivalNecromancerPower.wav"));
        reflectedMap.put("DeadMetalStar", new Sfx("sounds/DeadMetalStar.wav"));
        reflectedMap.put("DeadMetalStar_Acc", new Sfx("sounds/DeadMetalStar_Acc.wav"));
        reflectedMap.put("BoneDominator", new Sfx("sounds/BoneDominator.wav"));
        reflectedMap.put("BoneDominator_Acc", new Sfx("sounds/BoneDominator_Acc.wav"));
        reflectedMap.put("LadyGray", new Sfx("sounds/LadyGray.wav"));
        reflectedMap.put("IrongearCorpsman", new Sfx("sounds/IrongearCorpsman.wav"));
        reflectedMap.put("ForbiddenAndBalance", new Sfx("sounds/ForbiddenAndBalance.wav"));
        reflectedMap.put("Arcus", new Sfx("sounds/Arcus.wav"));
        reflectedMap.put("Manmaru1", new Sfx("sounds/Manmaru1.wav"));
        reflectedMap.put("GenerateNine", new Sfx("sounds/GenerateNine.wav"));
        reflectedMap.put("GenerateNine_EH", new Sfx("sounds/GenerateNine_EH.wav"));
        reflectedMap.put("Aenea", new Sfx("sounds/Aenea.wav"));
        reflectedMap.put("AeneaPower", new Sfx("sounds/AeneaPower.wav"));
        reflectedMap.put("OmenOfSilence", new Sfx("sounds/OmenOfSilence.wav"));
        reflectedMap.put("Gremory", new Sfx("sounds/Gremory.wav"));
        reflectedMap.put("Aisha", new Sfx("sounds/Aisha.wav"));
        reflectedMap.put("Hades", new Sfx("sounds/Hades.wav"));
        reflectedMap.put("Hades_Acc", new Sfx("sounds/Hades_Acc.wav"));
        reflectedMap.put("Mimi", new Sfx("sounds/Mimi.wav"));
        reflectedMap.put("Koko", new Sfx("sounds/Koko.wav"));
        reflectedMap.put("Cerberus", new Sfx("sounds/Cerberus.wav"));
        reflectedMap.put("Cerberus2", new Sfx("sounds/Cerberus2.wav"));
        reflectedMap.put("AttendentOfNight", new Sfx("sounds/AttendentOfNight.wav"));
        reflectedMap.put("Orthrus", new Sfx("sounds/Orthrus.wav"));
        reflectedMap.put("Miyako", new Sfx("sounds/Miyako.wav"));
        reflectedMap.put("Miyako_UB", new Sfx("sounds/Miyako_UB.wav"));
        reflectedMap.put("Pudding", new Sfx("sounds/Pudding.wav"));
        reflectedMap.put("LunaGame", new Sfx("sounds/LunaGame.wav"));
        reflectedMap.put("AeneaFriendship", new Sfx("sounds/AeneaFriendship.wav"));
        reflectedMap.put("FriendsForever", new Sfx("sounds/FriendsForever.wav"));
        reflectedMap.put("SonataOfSilence", new Sfx("sounds/SonataOfSilence.wav"));
        reflectedMap.put("SoulTaker", new Sfx("sounds/SoulTaker.wav"));
        reflectedMap.put("Ginsetsu", new Sfx("sounds/Ginsetsu.wav"));
        reflectedMap.put("Ferry", new Sfx("sounds/Ferry.wav"));
        reflectedMap.put("StormArrow", new Sfx("sounds/StormArrow.wav"));
        reflectedMap.put("GaleArrow", new Sfx("sounds/GaleArrow.wav"));
        reflectedMap.put("ArisaArrow", new Sfx("sounds/ArisaArrow.wav"));
        reflectedMap.put("ArrowPower", new Sfx("sounds/ArrowPower.wav"));
        reflectedMap.put("ArisaPower", new Sfx("sounds/ArisaPower.wav"));
        reflectedMap.put("Arisa", new Sfx("sounds/Arisa.wav"));
        reflectedMap.put("NecroTemptation", new Sfx("sounds/NecroTemptation.wav"));
        reflectedMap.put("LunaDoll", new Sfx("sounds/LunaDoll.wav"));
        reflectedMap.put("Luna", new Sfx("sounds/Luna.wav"));
        reflectedMap.put("UltimateMagic", new Sfx("sounds/UltimateMagic.wav"));
        reflectedMap.put("UnionMagic", new Sfx("sounds/UnionMagic.wav"));
        reflectedMap.put("Isabelle", new Sfx("sounds/Isabelle.wav"));
        reflectedMap.put("Vampire_Selected", new Sfx("sounds/Vampire_Selected.wav"));
        reflectedMap.put("Vampire_Hurt", new Sfx("sounds/Vampire_Hurt.wav"));
        reflectedMap.put("Vampire_Hurt2", new Sfx("sounds/Vampire_Hurt2.wav"));
        reflectedMap.put("Vampire_Hurt3", new Sfx("sounds/Vampire_Hurt3.wav"));
        reflectedMap.put("Vampire_Hurt4", new Sfx("sounds/Vampire_Hurt4.wav"));
        reflectedMap.put("DarkGeneral", new Sfx("sounds/DarkGeneral.wav"));
        reflectedMap.put("SpiderWebImp", new Sfx("sounds/SpiderWebImp.wav"));
        reflectedMap.put("DemonicAssault", new Sfx("sounds/DemonicAssault.wav"));
        reflectedMap.put("HellSpearWarrior", new Sfx("sounds/HellSpearWarrior.wav"));
        reflectedMap.put("MoonriseWerewolf", new Sfx("sounds/MoonriseWerewolf.wav"));
        reflectedMap.put("MoonriseWerewolf_EH", new Sfx("sounds/MoonriseWerewolf_EH.wav"));
        reflectedMap.put("UriasRevelry", new Sfx("sounds/UriasRevelry.wav"));
        reflectedMap.put("MonoResolve", new Sfx("sounds/MonoResolve.wav"));
        reflectedMap.put("GarnetWaltz", new Sfx("sounds/GarnetWaltz.wav"));
        reflectedMap.put("Shemyaza", new Sfx("sounds/Shemyaza.wav"));
        reflectedMap.put("Belphegor", new Sfx("sounds/Belphegor.wav"));
        reflectedMap.put("SexyVampire", new Sfx("sounds/SexyVampire.wav"));
        reflectedMap.put("SadisticDemon", new Sfx("sounds/SadisticDemon.wav"));
        reflectedMap.put("SadisticDemonPower", new Sfx("sounds/SadisticDemonPower.wav"));
        reflectedMap.put("SadisticHeal", new Sfx("sounds/SadisticHeal.wav"));
        reflectedMap.put("SadisticDamage", new Sfx("sounds/SadisticDamage.wav"));
        reflectedMap.put("ApostleOfLust", new Sfx("sounds/ApostleOfLust.wav"));
        reflectedMap.put("Baal", new Sfx("sounds/Baal.wav"));
        reflectedMap.put("BearBerserk", new Sfx("sounds/BearBerserk.wav"));
        reflectedMap.put("BeastEmpress", new Sfx("sounds/BeastEmpress.wav"));
        reflectedMap.put("WingsOfLust", new Sfx("sounds/WingsOfLust.wav"));
        reflectedMap.put("Emeralda", new Sfx("sounds/Emeralda.wav"));
        reflectedMap.put("Azazel", new Sfx("sounds/Azazel.wav"));
        reflectedMap.put("Yurius", new Sfx("sounds/Yurius.wav"));
        reflectedMap.put("YuriusPower", new Sfx("sounds/YuriusPower.wav"));
        reflectedMap.put("MechashotDevil", new Sfx("sounds/MechashotDevil.wav"));
        reflectedMap.put("MechaforgeDevil", new Sfx("sounds/MechaforgeDevil.wav"));
        reflectedMap.put("Mono", new Sfx("sounds/Mono.wav"));
        reflectedMap.put("Mono_Unlock", new Sfx("sounds/Mono_Unlock.wav"));
        reflectedMap.put("FirstOne", new Sfx("sounds/FirstOne.wav"));
        reflectedMap.put("Slayn", new Sfx("sounds/Slayn.wav"));
        reflectedMap.put("Neun", new Sfx("sounds/Neun.wav"));
        reflectedMap.put("NeunPower", new Sfx("sounds/NeunPower.wav"));
        reflectedMap.put("Aluzard", new Sfx("sounds/Aluzard.wav"));
        reflectedMap.put("BloodArts", new Sfx("sounds/BloodArts.wav"));
        reflectedMap.put("RageCommander", new Sfx("sounds/RageCommander.wav"));
        reflectedMap.put("Flauros", new Sfx("sounds/Flauros.wav"));
        reflectedMap.put("DevilOfVengeance", new Sfx("sounds/DevilOfVengeance.wav"));
        reflectedMap.put("OmenOfLust", new Sfx("sounds/OmenOfLust.wav"));
        reflectedMap.put("OmenOfLustPower", new Sfx("sounds/OmenOfLustPower.wav"));
        reflectedMap.put("ServantOfLust", new Sfx("sounds/ServantOfLust.wav"));
        reflectedMap.put("TheBerserker", new Sfx("sounds/TheBerserker.wav"));
        reflectedMap.put("TheBerserker2", new Sfx("sounds/TheBerserker2.wav"));
        reflectedMap.put("Urias", new Sfx("sounds/Urias.wav"));
        reflectedMap.put("TerrorNight", new Sfx("sounds/TerrorNight.wav"));
        reflectedMap.put("NightmareTime", new Sfx("sounds/NightmareTime.wav"));
        reflectedMap.put("BloodyNail", new Sfx("sounds/BloodyNail.wav"));
        reflectedMap.put("DreadAura", new Sfx("sounds/DreadAura.wav"));
        reflectedMap.put("Veight", new Sfx("sounds/Veight.wav"));
        reflectedMap.put("Vanpi", new Sfx("sounds/Vanpi.wav"));
        reflectedMap.put("Vanpi1", new Sfx("sounds/Vanpi1.wav"));
        reflectedMap.put("Vanpi2", new Sfx("sounds/Vanpi2.wav"));
        reflectedMap.put("Volteo", new Sfx("sounds/Volteo.wav"));
        reflectedMap.put("ShowdownDemon", new Sfx("sounds/ShowdownDemon.wav"));
        reflectedMap.put("ShadowDevil", new Sfx("sounds/ShadowDevil.wav"));
        reflectedMap.put("MaskedMayhem", new Sfx("sounds/MaskedMayhem.wav"));
        reflectedMap.put("Ayre", new Sfx("sounds/Ayre.wav"));
        reflectedMap.put("Lucius", new Sfx("sounds/Lucius.wav"));
        reflectedMap.put("Lucius_EH", new Sfx("sounds/Lucius_EH.wav"));
        reflectedMap.put("ArkDaemon", new Sfx("sounds/ArkDaemon.wav"));
        reflectedMap.put("Archdemon", new Sfx("sounds/Archdemon.wav"));
        reflectedMap.put("Archdemon_Acc", new Sfx("sounds/Archdemon_Acc.wav"));
        reflectedMap.put("ArchdemonPower", new Sfx("sounds/ArchdemonPower.wav"));
        reflectedMap.put("Lilim", new Sfx("sounds/Lilim.wav"));
        reflectedMap.put("BelphometCard", new Sfx("sounds/BelphometCard.wav"));
        reflectedMap.put("AlectorCard", new Sfx("sounds/AlectorCard.wav"));
        reflectedMap.put("TisiphoneCard", new Sfx("sounds/TisiphoneCard.wav"));
        reflectedMap.put("MegaeraCard", new Sfx("sounds/MegaeraCard.wav"));
        reflectedMap.put("UltimateCreator", new Sfx("sounds/UltimateCreator.wav"));
        reflectedMap.put("NeoTisiphone", new Sfx("sounds/NeoTisiphone.wav"));
        reflectedMap.put("NeoAlector", new Sfx("sounds/NeoAlector.wav"));
        reflectedMap.put("NeoMegaera", new Sfx("sounds/NeoMegaera.wav"));
        reflectedMap.put("CrimsonWar", new Sfx("sounds/CrimsonWar.wav"));
        reflectedMap.put("DimensionalWitch2", new Sfx("sounds/DimensionalWitch2.wav"));
        reflectedMap.put("Runie2", new Sfx("sounds/Runie2.wav"));
        reflectedMap.put("ProphecyOfBoons", new Sfx("sounds/ProphecyOfBoons.wav"));
        reflectedMap.put("ProphecyOfDoom", new Sfx("sounds/ProphecyOfDoom.wav"));
        reflectedMap.put("LadicaEmbrace", new Sfx("sounds/LadicaEmbrace.wav"));
        reflectedMap.put("Ladica2", new Sfx("sounds/Ladica2.wav"));
        reflectedMap.put("EternalPotion", new Sfx("sounds/EternalPotion.wav"));
        reflectedMap.put("InstantPotion", new Sfx("sounds/InstantPotion.wav"));
        reflectedMap.put("Ceridwen2", new Sfx("sounds/Ceridwen2.wav"));
        reflectedMap.put("ImmoralDesire", new Sfx("sounds/ImmoralDesire.wav"));
        reflectedMap.put("Ceres2", new Sfx("sounds/Ceres2.wav"));
        reflectedMap.put("Kyouka", new Sfx("sounds/Kyouka.wav"));
        reflectedMap.put("Kyouka_UB", new Sfx("sounds/Kyouka_UB.wav"));
        reflectedMap.put("Irya_UB", new Sfx("sounds/Irya_UB.wav"));
        reflectedMap.put("Irya", new Sfx("sounds/Irya.wav"));
        reflectedMap.put("FaustPower2", new Sfx("sounds/FaustPower2.wav"));
        reflectedMap.put("FaustPower3", new Sfx("sounds/FaustPower3.wav"));
        reflectedMap.put("Faust2", new Sfx("sounds/Faust2.wav"));
        reflectedMap.put("Nicola2", new Sfx("sounds/Nicola2.wav"));
        reflectedMap.put("Nicola3", new Sfx("sounds/Nicola3.wav"));
        reflectedMap.put("Mono2", new Sfx("sounds/Mono2.wav"));
        reflectedMap.put("MonoPower", new Sfx("sounds/MonoPower.wav"));
        reflectedMap.put("Tetra3", new Sfx("sounds/Tetra3.wav"));
        reflectedMap.put("Tetra2", new Sfx("sounds/Tetra2.wav"));
        reflectedMap.put("Resonance", new Sfx("sounds/Resonance.wav"));
        reflectedMap.put("Nemesis_Selected", new Sfx("sounds/Nemesis_Selected.wav"));
        reflectedMap.put("Nemesis_Hurt", new Sfx("sounds/Nemesis_Hurt.wav"));
        reflectedMap.put("Nemesis_Hurt2", new Sfx("sounds/Nemesis_Hurt2.wav"));
        reflectedMap.put("Nemesis_Hurt3", new Sfx("sounds/Nemesis_Hurt3.wav"));
        reflectedMap.put("Nemesis_Hurt4", new Sfx("sounds/Nemesis_Hurt4.wav"));
        reflectedMap.put("Icarus", new Sfx("sounds/Icarus.wav"));
        reflectedMap.put("RoboticUser", new Sfx("sounds/RoboticUser.wav"));
        reflectedMap.put("DeusExMachina", new Sfx("sounds/DeusExMachina.wav"));
        reflectedMap.put("NewOrder", new Sfx("sounds/NewOrder.wav"));
        reflectedMap.put("Tolerance", new Sfx("sounds/Tolerance.wav"));
        reflectedMap.put("Enforcer", new Sfx("sounds/Enforcer.wav"));
        reflectedMap.put("MegaEnforcer", new Sfx("sounds/MegaEnforcer.wav"));
        reflectedMap.put("MagnaGiant", new Sfx("sounds/MagnaGiant.wav"));
        reflectedMap.put("MagnaGiant_Acc", new Sfx("sounds/MagnaGiant_Acc.wav"));
        reflectedMap.put("MagnaZero", new Sfx("sounds/MagnaZero.wav"));
        reflectedMap.put("Yuwan", new Sfx("sounds/Yuwan.wav"));
        reflectedMap.put("YuwanPower", new Sfx("sounds/YuwanPower.wav"));
        reflectedMap.put("Paracelsus", new Sfx("sounds/Paracelsus.wav"));
        reflectedMap.put("InfinityPuppeteer", new Sfx("sounds/InfinityPuppeteer.wav"));
        reflectedMap.put("OmenOfDestruction", new Sfx("sounds/OmenOfDestruction.wav"));
        reflectedMap.put("WhiteArtifact", new Sfx("sounds/WhiteArtifact.wav"));
        reflectedMap.put("BlackArtifact", new Sfx("sounds/BlackArtifact.wav"));
        reflectedMap.put("Licht", new Sfx("sounds/Licht.wav"));
        reflectedMap.put("LichtPower", new Sfx("sounds/LichtPower.wav"));
        reflectedMap.put("IronStaffMechanic", new Sfx("sounds/IronStaffMechanic.wav"));
        reflectedMap.put("YuwanFury", new Sfx("sounds/YuwanFury.wav"));
        reflectedMap.put("RebelAgainstFate", new Sfx("sounds/RebelAgainstFate.wav"));
        reflectedMap.put("PurgationBlade", new Sfx("sounds/PurgationBlade.wav"));
        reflectedMap.put("Maisha", new Sfx("sounds/Maisha.wav"));
        reflectedMap.put("DeviceTuner", new Sfx("sounds/DeviceTuner.wav"));
        reflectedMap.put("ApostleOfDestruction", new Sfx("sounds/ApostleOfDestruction.wav"));
        reflectedMap.put("DiscipleOfDestruction", new Sfx("sounds/DiscipleOfDestruction.wav"));
        reflectedMap.put("StringMaster", new Sfx("sounds/StringMaster.wav"));
        reflectedMap.put("StringMasterPower", new Sfx("sounds/StringMasterPower.wav"));
        reflectedMap.put("KnowerOfHistory", new Sfx("sounds/KnowerOfHistory.wav"));
        reflectedMap.put("GadgetUser", new Sfx("sounds/GadgetUser.wav"));
        reflectedMap.put("Karula", new Sfx("sounds/Karula.wav"));
        reflectedMap.put("KarulaPower", new Sfx("sounds/KarulaPower.wav"));
        reflectedMap.put("Orchid1", new Sfx("sounds/Orchid1.wav"));
        reflectedMap.put("Orchid1Effect", new Sfx("sounds/Orchid1Effect.wav"));
        reflectedMap.put("Orchid2", new Sfx("sounds/Orchid2.wav"));
        reflectedMap.put("Orchid", new Sfx("sounds/Orchid.wav"));
        reflectedMap.put("OrchidNeo", new Sfx("sounds/OrchidNeo.wav"));
        reflectedMap.put("UnnamedDetermination", new Sfx("sounds/UnnamedDetermination.wav"));
        reflectedMap.put("Noa", new Sfx("sounds/Noa.wav"));
        reflectedMap.put("MindDivider", new Sfx("sounds/MindDivider.wav"));
        reflectedMap.put("Ines", new Sfx("sounds/Ines.wav"));
        reflectedMap.put("InesPower", new Sfx("sounds/InesPower.wav"));
        reflectedMap.put("DollsOwner", new Sfx("sounds/DollsOwner.wav"));
        reflectedMap.put("DestructionRefrain", new Sfx("sounds/DestructionRefrain.wav"));
        reflectedMap.put("Modest", new Sfx("sounds/Modest.wav"));
        reflectedMap.put("Ralmia", new Sfx("sounds/Ralmia.wav"));
        reflectedMap.put("Ralmia_EH", new Sfx("sounds/Ralmia_EH.wav"));
        reflectedMap.put("OmniscientKaiser", new Sfx("sounds/OmniscientKaiser.wav"));
        reflectedMap.put("OmniscientKaiser_Acc", new Sfx("sounds/OmniscientKaiser_Acc.wav"));
        reflectedMap.put("Spine", new Sfx("sounds/Spine.wav"));
        reflectedMap.put("Spine2", new Sfx("sounds/Spine2.wav"));
        reflectedMap.put("SpinePower", new Sfx("sounds/SpinePower.wav"));
        reflectedMap.put("Spine2_Acc", new Sfx("sounds/Spine2_Acc.wav"));
        reflectedMap.put("Miriam", new Sfx("sounds/Miriam.wav"));
        reflectedMap.put("MiriamPower", new Sfx("sounds/MiriamPower.wav"));
        reflectedMap.put("Miriam_Acc", new Sfx("sounds/Miriam_Acc.wav"));
        reflectedMap.put("CannonHermitCrab", new Sfx("sounds/CannonHermitCrab.wav"));
        reflectedMap.put("ServantOfDarkness", new Sfx("sounds/ServantOfDarkness.wav"));
        reflectedMap.put("Zwei", new Sfx("sounds/Zwei.wav"));
        reflectedMap.put("Zwei2", new Sfx("sounds/Zwei2.wav"));
        reflectedMap.put("Zwei2_Acc", new Sfx("sounds/Zwei2_Acc.wav"));
        reflectedMap.put("VoidRealize", new Sfx("sounds/VoidRealize.wav"));
        reflectedMap.put("Illganeau", new Sfx("sounds/Illganeau.wav"));
        reflectedMap.put("NightVampire", new Sfx("sounds/NightVampire.wav"));
        reflectedMap.put("NightVampirePower", new Sfx("sounds/NightVampirePower.wav"));
        reflectedMap.put("TheWheelOfFortune", new Sfx("sounds/TheWheelOfFortune.wav"));
        reflectedMap.put("TheWheelOfFortune2", new Sfx("sounds/TheWheelOfFortune2.wav"));
        reflectedMap.put("TheWheelOfFortunePower", new Sfx("sounds/TheWheelOfFortunePower.wav"));
        reflectedMap.put("Odin", new Sfx("sounds/Odin.wav"));
        reflectedMap.put("RadiantAngel", new Sfx("sounds/RadiantAngel.wav"));
        reflectedMap.put("PriestOfTheCudgel", new Sfx("sounds/PriestOfTheCudgel.wav"));
        reflectedMap.put("ArdentSister", new Sfx("sounds/ArdentSister.wav"));
        reflectedMap.put("DarkPriest", new Sfx("sounds/DarkPriest.wav"));
        reflectedMap.put("Lucifer", new Sfx("sounds/Lucifer.wav"));
        reflectedMap.put("Lucifer2", new Sfx("sounds/Lucifer2.wav"));
        reflectedMap.put("AbsoluteOne", new Sfx("sounds/AbsoluteOne.wav"));
        reflectedMap.put("MoonAlmiraj", new Sfx("sounds/MoonAlmiraj.wav"));
        reflectedMap.put("KMR1", new Sfx("sounds/KMR1.wav"));
        reflectedMap.put("KMR2", new Sfx("sounds/KMR2.wav"));
        reflectedMap.put("KMR3", new Sfx("sounds/KMR3.wav"));
        reflectedMap.put("Rowen", new Sfx("sounds/Rowen.wav"));
        reflectedMap.put("SevensForceSorcerer", new Sfx("sounds/SevensForceSorcerer.wav"));
        reflectedMap.put("SevensForceSorcererEff", new Sfx("sounds/SevensForceSorcererEff.wav"));
        reflectedMap.put("ShiningValkyrie", new Sfx("sounds/ShiningValkyrie.wav"));
        reflectedMap.put("DeadSoulTaker", new Sfx("sounds/DeadSoulTaker.wav"));
        reflectedMap.put("AbyssDoomLord", new Sfx("sounds/AbyssDoomLord.wav"));
        reflectedMap.put("SpineLucille", new Sfx("sounds/SpineLucille.wav"));
        reflectedMap.put("Royal_Hurt", new Sfx("sounds/Royal_Hurt.wav"));
        reflectedMap.put("Royal_Hurt1", new Sfx("sounds/Royal_Hurt1.wav"));
        reflectedMap.put("Royal_Hurt2", new Sfx("sounds/Royal_Hurt2.wav"));
        reflectedMap.put("Royal_Hurt3", new Sfx("sounds/Royal_Hurt3.wav"));
        reflectedMap.put("Royal_Hurt4", new Sfx("sounds/Royal_Hurt4.wav"));
        reflectedMap.put("Royal_Selected", new Sfx("sounds/Royal_Selected.wav"));
        reflectedMap.put("CannonHermitCrabOrb", new Sfx("sounds/CannonHermitCrabOrb.wav"));
        reflectedMap.put("CannonHermitCrabOrb_Atk", new Sfx("sounds/CannonHermitCrabOrb_Atk.wav"));
        reflectedMap.put("FrontguardGeneral", new Sfx("sounds/FrontguardGeneral.wav"));
        reflectedMap.put("FrontguardGeneral_Atk", new Sfx("sounds/FrontguardGeneral_Atk.wav"));
        reflectedMap.put("HeavyKnight", new Sfx("sounds/HeavyKnight.wav"));
        reflectedMap.put("HeavyKnight_Atk", new Sfx("sounds/HeavyKnight_Atk.wav"));
        reflectedMap.put("Knight", new Sfx("sounds/Knight.wav"));
        reflectedMap.put("Knight_Atk", new Sfx("sounds/Knight_Atk.wav"));
        reflectedMap.put("QueenHemera", new Sfx("sounds/QueenHemera.wav"));
        reflectedMap.put("QueenHemera_Atk", new Sfx("sounds/QueenHemera_Atk.wav"));
        reflectedMap.put("QueenMagnus", new Sfx("sounds/QueenMagnus.wav"));
        reflectedMap.put("QueenMagnus_Atk", new Sfx("sounds/QueenMagnus_Atk.wav"));
        reflectedMap.put("Quickblader", new Sfx("sounds/Quickblader.wav"));
        reflectedMap.put("Quickblader_Atk", new Sfx("sounds/Quickblader_Atk.wav"));
        reflectedMap.put("ShieldGuardian", new Sfx("sounds/ShieldGuardian.wav"));
        reflectedMap.put("ShieldGuardian_Atk", new Sfx("sounds/ShieldGuardian_Atk.wav"));
        reflectedMap.put("SteelcladKnight", new Sfx("sounds/SteelcladKnight.wav"));
        reflectedMap.put("SteelcladKnight_Atk", new Sfx("sounds/SteelcladKnight_Atk.wav"));
        reflectedMap.put("Alyaska", new Sfx("sounds/Alyaska.wav"));
        reflectedMap.put("Alyaska_Eff", new Sfx("sounds/Alyaska_Eff.wav"));
        reflectedMap.put("Alyaska_Ev", new Sfx("sounds/Alyaska_Ev.wav"));
        reflectedMap.put("ApostleOfUsurpation", new Sfx("sounds/ApostleOfUsurpation.wav"));
        reflectedMap.put("ApostleOfUsurpation_Pow", new Sfx("sounds/ApostleOfUsurpation_Pow.wav"));
        reflectedMap.put("BayleonsCommand", new Sfx("sounds/BayleonsCommand.wav"));
        reflectedMap.put("BrothersUnited", new Sfx("sounds/BrothersUnited.wav"));
        reflectedMap.put("CatAdmiral", new Sfx("sounds/CatAdmiral.wav"));
        reflectedMap.put("CatAdmiral_Ev", new Sfx("sounds/CatAdmiral_Ev.wav"));
        reflectedMap.put("Charlotta", new Sfx("sounds/Charlotta.wav"));
        reflectedMap.put("Charlotta_Ev", new Sfx("sounds/Charlotta_Ev.wav"));
        reflectedMap.put("DanceOfUsurpation", new Sfx("sounds/DanceOfUsurpation.wav"));
        reflectedMap.put("DiscipleOfUsurpation", new Sfx("sounds/DiscipleOfUsurpation.wav"));
        reflectedMap.put("DiscipleOfUsurpation_Pow", new Sfx("sounds/DiscipleOfUsurpation_Pow.wav"));
        reflectedMap.put("DualbladeKnight", new Sfx("sounds/DualbladeKnight.wav"));
        reflectedMap.put("DualbladeKnight_Ev", new Sfx("sounds/DualbladeKnight_Ev.wav"));
        reflectedMap.put("Eahta", new Sfx("sounds/Eahta.wav"));
        reflectedMap.put("Eahta_SA", new Sfx("sounds/Eahta_SA.wav"));
        reflectedMap.put("Eahta_SSA", new Sfx("sounds/Eahta_SSA.wav"));
        reflectedMap.put("EmpressOfSerenity", new Sfx("sounds/EmpressOfSerenity.wav"));
        reflectedMap.put("EmpressOfSerenity_Eh", new Sfx("sounds/EmpressOfSerenity_Eh.wav"));
        reflectedMap.put("EnragedGeneral", new Sfx("sounds/EnragedGeneral.wav"));
        reflectedMap.put("ErikasSleight", new Sfx("sounds/ErikasSleight.wav"));
        reflectedMap.put("ExterminusWeapon", new Sfx("sounds/ExterminusWeapon.wav"));
        reflectedMap.put("FloralFencer", new Sfx("sounds/FloralFencer.wav"));
        reflectedMap.put("FloralFencer_Ev", new Sfx("sounds/FloralFencer_Ev.wav"));
        reflectedMap.put("FlyingMessengerSquirrel", new Sfx("sounds/FlyingMessengerSquirrel.wav"));
        reflectedMap.put("FortressStrategist", new Sfx("sounds/FortressStrategist.wav"));
        reflectedMap.put("FortressStrategist_Pow", new Sfx("sounds/FortressStrategist_Pow.wav"));
        reflectedMap.put("FrenziedCorpsmaster", new Sfx("sounds/FrenziedCorpsmaster.wav"));
        reflectedMap.put("FrenziedCorpsmaster_Acc", new Sfx("sounds/FrenziedCorpsmaster_Acc.wav"));
        reflectedMap.put("FrontlineInstructor", new Sfx("sounds/FrontlineInstructor.wav"));
        reflectedMap.put("HonorableThief", new Sfx("sounds/HonorableThief.wav"));
        reflectedMap.put("LuminousMage", new Sfx("sounds/LuminousMage.wav"));
        reflectedMap.put("LuxbladeArriet", new Sfx("sounds/LuxbladeArriet.wav"));
        reflectedMap.put("Mars", new Sfx("sounds/Mars.wav"));
        reflectedMap.put("Mars_Pow", new Sfx("sounds/Mars_Pow.wav"));
        reflectedMap.put("Mirin", new Sfx("sounds/Mirin.wav"));
        reflectedMap.put("Mirin_SA", new Sfx("sounds/Mirin_SA.wav"));
        reflectedMap.put("Mirin_SSA", new Sfx("sounds/Mirin_SSA.wav"));
        reflectedMap.put("MistolinaBayleon", new Sfx("sounds/MistolinaBayleon.wav"));
        reflectedMap.put("MistolinasSwordplay", new Sfx("sounds/MistolinasSwordplay.wav"));
        reflectedMap.put("OathlessKnight", new Sfx("sounds/OathlessKnight.wav"));
        reflectedMap.put("Octrice", new Sfx("sounds/Octrice.wav"));
        reflectedMap.put("Octrice_Ev", new Sfx("sounds/Octrice_Ev.wav"));
        reflectedMap.put("PrudentGeneral", new Sfx("sounds/PrudentGeneral.wav"));
        reflectedMap.put("PrudentGeneral_Ev", new Sfx("sounds/PrudentGeneral_Ev.wav"));
        reflectedMap.put("RadicalGunslinger", new Sfx("sounds/RadicalGunslinger.wav"));
        reflectedMap.put("RadicalGunslinger_Ev", new Sfx("sounds/RadicalGunslinger_Ev.wav"));
        reflectedMap.put("SageCommander", new Sfx("sounds/SageCommander.wav"));
        reflectedMap.put("Seofon", new Sfx("sounds/Seofon.wav"));
        reflectedMap.put("Seofon_SA", new Sfx("sounds/Seofon_SA.wav"));
        reflectedMap.put("Seofon_SSA", new Sfx("sounds/Seofon_SSA.wav"));
        reflectedMap.put("Sera", new Sfx("sounds/Sera.wav"));
        reflectedMap.put("Sera_Ev", new Sfx("sounds/Sera_Ev.wav"));
        reflectedMap.put("StrikeproneGuardian", new Sfx("sounds/StrikeproneGuardian.wav"));
        reflectedMap.put("StrokeOfConviction", new Sfx("sounds/StrokeOfConviction.wav"));
        reflectedMap.put("SunnyDayEncounter", new Sfx("sounds/SunnyDayEncounter.wav"));
        reflectedMap.put("UsurpingSpineblade", new Sfx("sounds/UsurpingSpineblade.wav"));
        reflectedMap.put("WarriorWing", new Sfx("sounds/WarriorWing.wav"));
        reflectedMap.put("WarriorWing_Ev", new Sfx("sounds/WarriorWing_Ev.wav"));
        reflectedMap.put("WhitePaladin", new Sfx("sounds/WhitePaladin.wav"));
        reflectedMap.put("Albert", new Sfx("sounds/Albert.wav"));
        reflectedMap.put("Alwida", new Sfx("sounds/Alwida.wav"));
        reflectedMap.put("Alwida_Pow", new Sfx("sounds/Alwida_Pow.wav"));
        reflectedMap.put("Cybercannoneer", new Sfx("sounds/Cybercannoneer.wav"));
        reflectedMap.put("Grayson", new Sfx("sounds/Grayson.wav"));
        reflectedMap.put("Jeno", new Sfx("sounds/Jeno.wav"));
        reflectedMap.put("Johann", new Sfx("sounds/Johann.wav"));
        reflectedMap.put("Latham", new Sfx("sounds/Latham.wav"));
        reflectedMap.put("LevinArcher", new Sfx("sounds/LevinArcher.wav"));
        reflectedMap.put("LevinArcher_Ev", new Sfx("sounds/LevinArcher_Ev.wav"));
        reflectedMap.put("LevinBeastmaster", new Sfx("sounds/LevinBeastmaster.wav"));
        reflectedMap.put("LevinBeastmaster_Ev", new Sfx("sounds/LevinBeastmaster_Ev.wav"));
        reflectedMap.put("LevinScholar", new Sfx("sounds/LevinScholar.wav"));
        reflectedMap.put("Lounes", new Sfx("sounds/Lounes.wav"));
        reflectedMap.put("Lounes_Eh", new Sfx("sounds/Lounes_Eh.wav"));
        reflectedMap.put("Mena", new Sfx("sounds/Mena.wav"));
        reflectedMap.put("Mina", new Sfx("sounds/Mina.wav"));
        reflectedMap.put("Mona", new Sfx("sounds/Mona.wav"));
        reflectedMap.put("Mena_Ev", new Sfx("sounds/Mena_Ev.wav"));
        reflectedMap.put("Mina_Ev", new Sfx("sounds/Mina_Ev.wav"));
        reflectedMap.put("Mona_Ev", new Sfx("sounds/Mona_Ev.wav"));
        reflectedMap.put("Nahtnaught", new Sfx("sounds/Nahtnaught.wav"));
        reflectedMap.put("Patrick", new Sfx("sounds/Patrick.wav"));
        reflectedMap.put("Pirate", new Sfx("sounds/Pirate.wav"));
        reflectedMap.put("Pirate_Atk", new Sfx("sounds/Pirate_Atk.wav"));
        reflectedMap.put("StampedingFortress", new Sfx("sounds/StampedingFortress.wav"));
        reflectedMap.put("Viking", new Sfx("sounds/Viking.wav"));
        reflectedMap.put("Viking_Atk", new Sfx("sounds/Viking_Atk.wav"));
        reflectedMap.put("WhiteTiger", new Sfx("sounds/WhiteTiger.wav"));
        reflectedMap.put("Nahtnaught_Eh", new Sfx("sounds/Nahtnaught_Eh.wav"));
        reflectedMap.put("TyrantsOrder", new Sfx("sounds/TyrantsOrder.wav"));
        reflectedMap.put("Jeno_Co", new Sfx("sounds/Jeno_Co.wav"));
        reflectedMap.put("LevinBeastmaster_Co", new Sfx("sounds/LevinBeastmaster_Co.wav"));
        reflectedMap.put("LevinScholar_Co", new Sfx("sounds/LevinScholar_Co.wav"));
        reflectedMap.put("Lounes_Co", new Sfx("sounds/Lounes_Co.wav"));
        reflectedMap.put("Mena_Co", new Sfx("sounds/Mena_Co.wav"));
        reflectedMap.put("Mina_Co", new Sfx("sounds/Mina_Co.wav"));
        reflectedMap.put("Mona_Co", new Sfx("sounds/Mona_Co.wav"));
        reflectedMap.put("Royal_Evolve0", new Sfx("sounds/Royal_Evolve0.wav"));
        reflectedMap.put("Royal_Evolve1", new Sfx("sounds/Royal_Evolve1.wav"));
        reflectedMap.put("Royal_Evolve2", new Sfx("sounds/Royal_Evolve2.wav"));
        reflectedMap.put("Elf_Evolve0", new Sfx("sounds/Elf_Evolve0.wav"));
        reflectedMap.put("Elf_Evolve1", new Sfx("sounds/Elf_Evolve1.wav"));
        reflectedMap.put("Elf_Evolve2", new Sfx("sounds/Elf_Evolve2.wav"));
        reflectedMap.put("Necromancer_Evolve0", new Sfx("sounds/Necromancer_Evolve0.wav"));
        reflectedMap.put("Necromancer_Evolve1", new Sfx("sounds/Necromancer_Evolve1.wav"));
        reflectedMap.put("Necromancer_Evolve2", new Sfx("sounds/Necromancer_Evolve2.wav"));
        reflectedMap.put("Nemesis_Evolve0", new Sfx("sounds/Nemesis_Evolve0.wav"));
        reflectedMap.put("Nemesis_Evolve1", new Sfx("sounds/Nemesis_Evolve1.wav"));
        reflectedMap.put("Nemesis_Evolve2", new Sfx("sounds/Nemesis_Evolve2.wav"));
        reflectedMap.put("Vampire_Evolve0", new Sfx("sounds/Vampire_Evolve0.wav"));
        reflectedMap.put("Vampire_Evolve1", new Sfx("sounds/Vampire_Evolve1.wav"));
        reflectedMap.put("Vampire_Evolve2", new Sfx("sounds/Vampire_Evolve2.wav"));
        reflectedMap.put("Witchcraft_Evolve0", new Sfx("sounds/Witchcraft_Evolve0.wav"));
        reflectedMap.put("Witchcraft_Evolve1", new Sfx("sounds/Witchcraft_Evolve1.wav"));
        reflectedMap.put("Witchcraft_Evolve2", new Sfx("sounds/Witchcraft_Evolve2.wav"));
        reflectedMap.put("Alexander", new Sfx("sounds/Alexander.wav"));
        reflectedMap.put("CaptainWalfrid", new Sfx("sounds/CaptainWalfrid.wav"));
        reflectedMap.put("Garven", new Sfx("sounds/Garven.wav"));
        reflectedMap.put("Kagemitsu", new Sfx("sounds/Kagemitsu.wav"));
        reflectedMap.put("Leonidas", new Sfx("sounds/Leonidas.wav"));
        reflectedMap.put("Reinhardt", new Sfx("sounds/Reinhardt.wav"));
        reflectedMap.put("Reinhardt_Pow", new Sfx("sounds/Reinhardt_Pow.wav"));
        reflectedMap.put("YuriusLevinDuke", new Sfx("sounds/YuriusLevinDuke.wav"));
        reflectedMap.put("YuriusLevinDuke_Co", new Sfx("sounds/YuriusLevinDuke_Co.wav"));
        reflectedMap.put("FatalSpellbomb", new Sfx("sounds/FatalSpellbomb.wav"));
        reflectedMap.put("HolyPurebomb", new Sfx("sounds/HolyPurebomb.wav"));
        reflectedMap.put("Valse", new Sfx("sounds/Valse.wav"));
        reflectedMap.put("Bishop_Selected", new Sfx("sounds/Bishop_Selected.wav"));
        reflectedMap.put("Bishop_Hurt", new Sfx("sounds/Bishop_Hurt.wav"));
        reflectedMap.put("Bishop_Hurt2", new Sfx("sounds/Bishop_Hurt2.wav"));
        reflectedMap.put("Bishop_Hurt3", new Sfx("sounds/Bishop_Hurt3.wav"));
        reflectedMap.put("Bishop_Hurt4", new Sfx("sounds/Bishop_Hurt4.wav"));
        reflectedMap.put("Royal_Victory", new Sfx("sounds/Royal_Victory.wav"));
        reflectedMap.put("DreadHound", new Sfx("sounds/DreadHound.wav"));
        reflectedMap.put("Ernesta", new Sfx("sounds/Ernesta.wav"));
        reflectedMap.put("Ernesta_Ev", new Sfx("sounds/Ernesta_Ev.wav"));
        reflectedMap.put("Ilmisuna", new Sfx("sounds/Ilmisuna.wav"));
        reflectedMap.put("Ilmisuna_Ev", new Sfx("sounds/Ilmisuna_Ev.wav"));
        reflectedMap.put("MasterDealer", new Sfx("sounds/MasterDealer.wav"));
        reflectedMap.put("GuildAssembly", new Sfx("sounds/GuildAssembly.wav"));
        reflectedMap.put("Cernunnos", new Sfx("sounds/Cernunnos.wav"));
        reflectedMap.put("HolyEnchanter", new Sfx("sounds/HolyEnchanter.wav"));
        reflectedMap.put("PunishmentSniper", new Sfx("sounds/PunishmentSniper.wav"));
        reflectedMap.put("SeraphLapis", new Sfx("sounds/SeraphLapis.wav"));
        reflectedMap.put("Ra", new Sfx("sounds/Ra.wav"));
        reflectedMap.put("OmenOfRepose", new Sfx("sounds/OmenOfRepose.wav"));
        reflectedMap.put("Agnes", new Sfx("sounds/Agnes.wav"));
        reflectedMap.put("Elana", new Sfx("sounds/Elana.wav"));
        reflectedMap.put("IronknuckleNun", new Sfx("sounds/IronknuckleNun.wav"));
        reflectedMap.put("HolyHector", new Sfx("sounds/HolyHector.wav"));
        reflectedMap.put("Abdiel", new Sfx("sounds/Abdiel.wav"));
        reflectedMap.put("Wilbert", new Sfx("sounds/Wilbert.wav"));
        reflectedMap.put("Anvelt", new Sfx("sounds/Anvelt.wav"));
        reflectedMap.put("Anvelt_Acc", new Sfx("sounds/Anvelt_Acc.wav"));
        reflectedMap.put("DirtyPriest", new Sfx("sounds/DirtyPriest.wav"));
        reflectedMap.put("DirtyPriest_Acc", new Sfx("sounds/DirtyPriest_Acc.wav"));
        reflectedMap.put("RobowingPrecant", new Sfx("sounds/RobowingPrecant.wav"));
        reflectedMap.put("HeavenlyKnight", new Sfx("sounds/HeavenlyKnight.wav"));
        reflectedMap.put("Charaton", new Sfx("sounds/Charaton.wav"));
        reflectedMap.put("SkullFane", new Sfx("sounds/SkullFane.wav"));
        reflectedMap.put("HereticPriest", new Sfx("sounds/HereticPriest.wav"));
        reflectedMap.put("UnlikelyFellowship", new Sfx("sounds/UnlikelyFellowship.wav"));
        reflectedMap.put("Selena", new Sfx("sounds/Selena.wav"));
        reflectedMap.put("HeavenFire", new Sfx("sounds/HeavenFire.wav"));
        reflectedMap.put("RobowhipReverend", new Sfx("sounds/RobowhipReverend.wav"));
        reflectedMap.put("RobowhipReverendPower", new Sfx("sounds/RobowhipReverendPower.wav"));
        reflectedMap.put("HeavenlyAegis", new Sfx("sounds/HeavenlyAegis.wav"));
        reflectedMap.put("Limonia", new Sfx("sounds/Limonia.wav"));
        reflectedMap.put("SalvationLimonia", new Sfx("sounds/SalvationLimonia.wav"));
        reflectedMap.put("Vice", new Sfx("sounds/Vice.wav"));
        reflectedMap.put("VicePower", new Sfx("sounds/VicePower.wav"));
        reflectedMap.put("KLT", new Sfx("sounds/KLT.wav"));
        reflectedMap.put("DDK", new Sfx("sounds/DDK.wav"));
        reflectedMap.put("TheUntrueGod", new Sfx("sounds/TheUntrueGod.wav"));
        reflectedMap.put("MarkUnleashed", new Sfx("sounds/MarkUnleashed.wav"));
        reflectedMap.put("MarkOfBalance", new Sfx("sounds/MarkOfBalance.wav"));
        reflectedMap.put("Marlone", new Sfx("sounds/Marlone.wav"));
        reflectedMap.put("Marlone2", new Sfx("sounds/Marlone2.wav"));
        reflectedMap.put("PrismSwing", new Sfx("sounds/PrismSwing.wav"));
        reflectedMap.put("PeaceWeaver", new Sfx("sounds/PeaceWeaver.wav"));
        reflectedMap.put("Munyaru", new Sfx("sounds/Munyaru.wav"));
        reflectedMap.put("SneakAttack", new Sfx("sounds/SneakAttack.wav"));
        reflectedMap.put("MunyaruRaid", new Sfx("sounds/MunyaruRaid.wav"));
        reflectedMap.put("ErisPrayer", new Sfx("sounds/ErisPrayer.wav"));
        reflectedMap.put("MajorPrayers", new Sfx("sounds/MajorPrayers.wav"));
        reflectedMap.put("RealmOfRepose", new Sfx("sounds/RealmOfRepose.wav"));
        reflectedMap.put("Jatelant", new Sfx("sounds/Jatelant.wav"));
        reflectedMap.put("TheStrength", new Sfx("sounds/TheStrength.wav"));
        reflectedMap.put("TheStrength_Acc", new Sfx("sounds/TheStrength_Acc.wav"));
        reflectedMap.put("QueenOfHope", new Sfx("sounds/QueenOfHope.wav"));
        reflectedMap.put("QueenOfHopePower", new Sfx("sounds/QueenOfHopePower.wav"));
        reflectedMap.put("Muse", new Sfx("sounds/Muse.wav"));
        reflectedMap.put("MusePrincess", new Sfx("sounds/MusePrincess.wav"));
        reflectedMap.put("MusePrincess_EH", new Sfx("sounds/MusePrincess_EH.wav"));
        reflectedMap.put("MusePrincessPower", new Sfx("sounds/MusePrincessPower.wav"));
        reflectedMap.put("PrimalShipwright", new Sfx("sounds/PrimalShipwright.wav"));
        reflectedMap.put("PrimalShipwright_Acc", new Sfx("sounds/Primalshipwright_Acc.wav"));
        reflectedMap.put("Garuda", new Sfx("sounds/Garuda.wav"));
        reflectedMap.put("Garuda2", new Sfx("sounds/Garuda2.wav"));
        reflectedMap.put("Garuda2Power", new Sfx("sounds/Garuda2Power.wav"));
        reflectedMap.put("Garuda2_Acc", new Sfx("sounds/Garuda2_Acc.wav"));
        reflectedMap.put("Garuda3", new Sfx("sounds/Garuda3.wav"));
        reflectedMap.put("Jeanne", new Sfx("sounds/Jeanne.wav"));
        reflectedMap.put("Jeanne2", new Sfx("sounds/Jeanne2.wav"));
        reflectedMap.put("Jeanne3", new Sfx("sounds/Jeanne3.wav"));
        reflectedMap.put("Jeanne4", new Sfx("sounds/Jeanne4.wav"));
        reflectedMap.put("Jeanne5", new Sfx("sounds/Jeanne5.wav"));
        reflectedMap.put("Eris", new Sfx("sounds/Eris.wav"));
        reflectedMap.put("RelicSphere", new Sfx("sounds/RelicSphere.wav"));
        reflectedMap.put("RelicPrism", new Sfx("sounds/RelicPrism.wav"));
        reflectedMap.put("RelicTorus", new Sfx("sounds/RelicTorus.wav"));
        reflectedMap.put("RelicPlaton", new Sfx("sounds/RelicPlaton.wav"));
        reflectedMap.put("Saren", new Sfx("sounds/Saren.wav"));
        reflectedMap.put("Saren_UB", new Sfx("sounds/Saren_UB.wav"));
        reflectedMap.put("Lorena", new Sfx("sounds/Lorena.wav"));
        reflectedMap.put("Lorena2", new Sfx("sounds/Lorena2.wav"));
        reflectedMap.put("LorenaWater", new Sfx("sounds/LorenaWater.wav"));
        reflectedMap.put("LorenaPunch", new Sfx("sounds/LorenaPunch.wav"));
        reflectedMap.put("ImperialSaint", new Sfx("sounds/ImperialSaint.wav"));
        reflectedMap.put("Valdain", new Sfx("sounds/Valdain.wav"));
        reflectedMap.put("ShadowCorrosion", new Sfx("sounds/ShadowCorrosion.wav"));
        reflectedMap.put("Sukuna", new Sfx("sounds/Sukuna.wav"));
        reflectedMap.put("Walfrid", new Sfx("sounds/Walfrid.wav"));
        reflectedMap.put("Leod", new Sfx("sounds/Leod.wav"));
        reflectedMap.put("Assassin", new Sfx("sounds/Assassin.wav"));
        reflectedMap.put("VeiledReckoning", new Sfx("sounds/VeiledReckoning.wav"));
        reflectedMap.put("Leod2", new Sfx("sounds/Leod2.wav"));
        reflectedMap.put("Leod2Power", new Sfx("sounds/Leod2Power.wav"));
        reflectedMap.put("ShinobiTanuki", new Sfx("sounds/ShinobiTanuki.wav"));
        reflectedMap.put("Tsubaki", new Sfx("sounds/Tsubaki.wav"));
        reflectedMap.put("BladeDance", new Sfx("sounds/BladeDance.wav"));
        reflectedMap.put("BladeDance_EH", new Sfx("sounds/BladeDance_EH.wav"));
        reflectedMap.put("ShadowedMemories", new Sfx("sounds/ShadowedMemories.wav"));
        reflectedMap.put("Kuon2", new Sfx("sounds/Kuon2.wav"));
        reflectedMap.put("Ralmia2", new Sfx("sounds/Ralmia2.wav"));
        reflectedMap.put("Wilbert2", new Sfx("sounds/Wilbert2.wav"));
        reflectedMap.put("Amataz2", new Sfx("sounds/Amataz2.wav"));
        reflectedMap.put("RejuvenatingResurrection", new Sfx("sounds/RejuvenatingResurrection.wav"));
        reflectedMap.put("MasterCook", new Sfx("sounds/MasterCook.wav"));
        reflectedMap.put("OmnifacedArchdemon", new Sfx("sounds/OmnifacedArchdemon.wav"));
        reflectedMap.put("EvilEyeDemon", new Sfx("sounds/EvilEyeDemon.wav"));
        reflectedMap.put("EvilEyeDemon_Acc", new Sfx("sounds/EvilEyeDemon_Acc.wav"));
        reflectedMap.put("PhantomBloomPredator", new Sfx("sounds/PhantomBloomPredator.wav"));
        reflectedMap.put("Alberta", new Sfx("sounds/Alberta.wav"));
        reflectedMap.put("AlbertaPower", new Sfx("sounds/AlbertaPower.wav"));
        reflectedMap.put("Shiro", new Sfx("sounds/Shiro.wav"));
        reflectedMap.put("TheChariot", new Sfx("sounds/TheChariot.wav"));
        reflectedMap.put("TheChariotPower", new Sfx("sounds/TheChariotPower.wav"));
        reflectedMap.put("TheChariot_I", new Sfx("sounds/TheChariot_I.wav"));
        reflectedMap.put("TheChariot_IPower", new Sfx("sounds/TheChariot_IPower.wav"));
        reflectedMap.put("EvidenceOfOne", new Sfx("sounds/EvidenceOfOne.wav"));
        reflectedMap.put("RearriveOne", new Sfx("sounds/RearriveOne.wav"));
        reflectedMap.put("ReturningMelody", new Sfx("sounds/ReturningMelody.wav"));
        reflectedMap.put("SoloOfMelody", new Sfx("sounds/SoloOfMelody.wav"));
        reflectedMap.put("WhiteArtifact2", new Sfx("sounds/WhiteArtifact2.wav"));
        reflectedMap.put("BlackArtifact2", new Sfx("sounds/BlackArtifact2.wav"));
        reflectedMap.put("ExpandingScreaming", new Sfx("sounds/ExpandingScreaming.wav"));
        reflectedMap.put("ResentfulScreaming", new Sfx("sounds/ResentfulScreaming.wav"));
        reflectedMap.put("EternalDispair", new Sfx("sounds/EternalDispair.wav"));
        reflectedMap.put("FlowOfDispair", new Sfx("sounds/FlowOfDispair.wav"));
        reflectedMap.put("CorruptionOfUnkilling", new Sfx("sounds/CorruptionOfUnkilling.wav"));
        reflectedMap.put("ShootOfUnkilling", new Sfx("sounds/ShootOfUnkilling.wav"));
        reflectedMap.put("ShootOfUnkilling_EH", new Sfx("sounds/ShootOfUnkilling_EH.wav"));
        reflectedMap.put("LoathingDesire", new Sfx("sounds/LoathingDesire.wav"));
        reflectedMap.put("WingsOfDesire", new Sfx("sounds/WingsOfDesire.wav"));
        reflectedMap.put("WingsOfDesire_EH", new Sfx("sounds/WingsOfDesire_EH.wav"));
        reflectedMap.put("UnleashTruth", new Sfx("sounds/UnleashTruth.wav"));
        reflectedMap.put("PerjuryOfTruth", new Sfx("sounds/PerjuryOfTruth.wav"));
        reflectedMap.put("UltimateHollow", new Sfx("sounds/UltimateHollow.wav"));
        reflectedMap.put("LightOfHollow", new Sfx("sounds/LightOfHollow.wav"));
        reflectedMap.put("OmenOfOne2", new Sfx("sounds/OmenOfOne2.wav"));
        reflectedMap.put("OmenOfDestruction2", new Sfx("sounds/OmenOfDestruction2.wav"));
        reflectedMap.put("OmenOfSilence2", new Sfx("sounds/OmenOfSilence2.wav"));
        reflectedMap.put("OmenOfRepose2", new Sfx("sounds/OmenOfRepose2.wav"));
        reflectedMap.put("OmenOfUnkilling2", new Sfx("sounds/OmenOfUnkilling2.wav"));
        reflectedMap.put("OmenOfLust2", new Sfx("sounds/OmenOfLust2.wav"));
        reflectedMap.put("LustfulDesire", new Sfx("sounds/LustfulDesire.wav"));
        reflectedMap.put("OmenOfTruth2", new Sfx("sounds/OmenOfTruth2.wav"));
        reflectedMap.put("Octrice2", new Sfx("sounds/Octrice2.wav"));
        reflectedMap.put("OmenOfCraving", new Sfx("sounds/OmenOfCraving.wav"));
        reflectedMap.put("OmenOfCraving2", new Sfx("sounds/OmenOfCraving2.wav"));
        reflectedMap.put("RavenousSweetness", new Sfx("sounds/RavenousSweetness.wav"));
        reflectedMap.put("BirthOfRavenous", new Sfx("sounds/BirthOfRavenous.wav"));
        reflectedMap.put("AdherentOfDesire", new Sfx("sounds/AdherentOfDesire.wav"));
        reflectedMap.put("AdherentOfScream", new Sfx("sounds/AdherentOfScream.wav"));
        reflectedMap.put("AdherentOfElimination", new Sfx("sounds/AdherentOfElimination.wav"));
        reflectedMap.put("AdherentOfElimination_Eff", new Sfx("sounds/AdherentOfElimination_Eff.wav"));
        reflectedMap.put("AdherentOfMelody", new Sfx("sounds/AdherentOfMelody.wav"));
        reflectedMap.put("AdherentOfHollow", new Sfx("sounds/AdherentOfHollow.wav"));
        reflectedMap.put("AdherentOfHollow_Eff", new Sfx("sounds/AdherentOfHollow_Eff.wav"));
        reflectedMap.put("AdherentOfHollow_Ev", new Sfx("sounds/AdherentOfHollow_Ev.wav"));
        reflectedMap.put("AdherentOfDispair", new Sfx("sounds/AdherentOfDispair.wav"));
        reflectedMap.put("AdherentOfDispairPower", new Sfx("sounds/AdherentOfDispairPower.wav"));
        reflectedMap.put("AdherentOfAnnihilationPower", new Sfx("sounds/AdherentOfAnnihilationPower.wav"));
        reflectedMap.put("AdherentOfAnnihilation", new Sfx("sounds/AdherentOfAnnihilation.wav"));
        reflectedMap.put("Albert2", new Sfx("sounds/Albert2.wav"));
        reflectedMap.put("Albert2_EH", new Sfx("sounds/Albert2_EH.wav"));
        reflectedMap.put("Valdain2", new Sfx("sounds/Valdain2.wav"));
        reflectedMap.put("Kyaru_Select", new Sfx("sounds/Kyaru_Select.wav"));
        reflectedMap.put("Kyaru_Hurt", new Sfx("sounds/Kyaru_Hurt.wav"));
        reflectedMap.put("Kyaru_Hurt2", new Sfx("sounds/Kyaru_Hurt2.wav"));
        reflectedMap.put("Kyaru_Hurt3", new Sfx("sounds/Kyaru_Hurt3.wav"));
        reflectedMap.put("Kyaru_Hurt4", new Sfx("sounds/Kyaru_Hurt4.wav"));
        reflectedMap.put("Kokkoro_Hurt", new Sfx("sounds/Kokkoro_Hurt.wav"));
        reflectedMap.put("Kokkoro_Hurt2", new Sfx("sounds/Kokkoro_Hurt2.wav"));
        reflectedMap.put("Kokkoro_Hurt3", new Sfx("sounds/Kokkoro_Hurt3.wav"));
        reflectedMap.put("Kokkoro_Hurt4", new Sfx("sounds/Kokkoro_Hurt4.wav"));
        reflectedMap.put("Kokkoro_Select", new Sfx("sounds/Kokkoro_Select.wav"));
        reflectedMap.put("Miyako_Hurt", new Sfx("sounds/Miyako_Hurt.wav"));
        reflectedMap.put("Miyako_Hurt2", new Sfx("sounds/Miyako_Hurt2.wav"));
        reflectedMap.put("Miyako_Hurt3", new Sfx("sounds/Miyako_Hurt3.wav"));
        reflectedMap.put("Miyako_Hurt4", new Sfx("sounds/Miyako_Hurt4.wav"));
        reflectedMap.put("Miyako_Select", new Sfx("sounds/Miyako_Select.wav"));
        reflectedMap.put("Shizuru_Hurt", new Sfx("sounds/Shizuru_Hurt.wav"));
        reflectedMap.put("Shizuru_Hurt2", new Sfx("sounds/Shizuru_Hurt2.wav"));
        reflectedMap.put("Shizuru_Hurt3", new Sfx("sounds/Shizuru_Hurt3.wav"));
        reflectedMap.put("Shizuru_Hurt4", new Sfx("sounds/Shizuru_Hurt4.wav"));
        reflectedMap.put("Shizuru_Select", new Sfx("sounds/Shizuru_Select.wav"));
        reflectedMap.put("Anne_Hurt", new Sfx("sounds/Anne_Hurt.wav"));
        reflectedMap.put("Anne_Hurt2", new Sfx("sounds/Anne_Hurt2.wav"));
        reflectedMap.put("Anne_Hurt3", new Sfx("sounds/Anne_Hurt3.wav"));
        reflectedMap.put("Anne_Hurt4", new Sfx("sounds/Anne_Hurt4.wav"));
        reflectedMap.put("Anne_Select", new Sfx("sounds/Anne_Select.wav"));
        reflectedMap.put("Io_Select", new Sfx("sounds/Io_Select.wav"));
        reflectedMap.put("Io_Hurt", new Sfx("sounds/Io_Hurt.wav"));
        reflectedMap.put("Io_Hurt2", new Sfx("sounds/Io_Hurt2.wav"));
        reflectedMap.put("Io_Hurt3", new Sfx("sounds/Io_Hurt3.wav"));
        reflectedMap.put("Io_Hurt4", new Sfx("sounds/Io_Hurt4.wav"));
        reflectedMap.put("Yukari_Select", new Sfx("sounds/Yukari_Select.wav"));
        reflectedMap.put("Yukari_Hurt", new Sfx("sounds/Yukari_Hurt.wav"));
        reflectedMap.put("Yukari_Hurt2", new Sfx("sounds/Yukari_Hurt2.wav"));
        reflectedMap.put("Yukari_Hurt3", new Sfx("sounds/Yukari_Hurt3.wav"));
        reflectedMap.put("Yukari_Hurt4", new Sfx("sounds/Yukari_Hurt4.wav"));
        reflectedMap.put("Ralmia_Hurt", new Sfx("sounds/Ralmia_Hurt.wav"));
        reflectedMap.put("Ralmia_Hurt2", new Sfx("sounds/Ralmia_Hurt2.wav"));
        reflectedMap.put("Ralmia_Hurt3", new Sfx("sounds/Ralmia_Hurt3.wav"));
        reflectedMap.put("Ralmia_Hurt4", new Sfx("sounds/Ralmia_Hurt4.wav"));
        reflectedMap.put("Ralmia_Select", new Sfx("sounds/Ralmia_Select.wav"));
        reflectedMap.put("HalloweenXCW_Hurt", new Sfx("sounds/HalloweenXCW_Hurt.wav"));
        reflectedMap.put("HalloweenXCW_Hurt2", new Sfx("sounds/HalloweenXCW_Hurt2.wav"));
        reflectedMap.put("HalloweenXCW_Hurt3", new Sfx("sounds/HalloweenXCW_Hurt3.wav"));
        reflectedMap.put("HalloweenXCW_Select", new Sfx("sounds/HalloweenXCW_Select.wav"));
        reflectedMap.put("Saren_Summer_Hurt", new Sfx("sounds/Saren_Summer_Hurt.wav"));
        reflectedMap.put("Saren_Summer_Hurt2", new Sfx("sounds/Saren_Summer_Hurt2.wav"));
        reflectedMap.put("Saren_Summer_Hurt3", new Sfx("sounds/Saren_Summer_Hurt3.wav"));
        reflectedMap.put("Saren_Summer_Select", new Sfx("sounds/Saren_Summer_Select.wav"));
        reflectedMap.put("Shinobu_Hurt", new Sfx("sounds/Shinobu_Hurt.wav"));
        reflectedMap.put("Shinobu_Hurt2", new Sfx("sounds/Shinobu_Hurt2.wav"));
        reflectedMap.put("Shinobu_Hurt3", new Sfx("sounds/Shinobu_Hurt3.wav"));
        reflectedMap.put("Shinobu_Hurt4", new Sfx("sounds/Shinobu_Hurt4.wav"));
        reflectedMap.put("Shinobu_Select", new Sfx("sounds/Shinobu_Select.wav"));
        reflectedMap.put("Skullfather", new Sfx("sounds/Skullfather.wav"));
        reflectedMap.put("Erika", new Sfx("sounds/Erika.wav"));
        reflectedMap.put("Erika_Eff", new Sfx("sounds/Erika_Eff.wav"));
        reflectedMap.put("SecretSkill", new Sfx("sounds/SecretSkill.wav"));
        reflectedMap.put("SecretSkill_Eff", new Sfx("sounds/SecretSkill_Eff.wav"));
        reflectedMap.put("OtherworldGatekeeper", new Sfx("sounds/OtherworldGatekeeper.wav"));
        reflectedMap.put("Ginsetsu2_Eff", new Sfx("sounds/Ginsetsu2_Eff.wav"));
        reflectedMap.put("Ginsetsu2", new Sfx("sounds/Ginsetsu2.wav"));
        reflectedMap.put("PrinceCatacomb", new Sfx("sounds/PrinceCatacomb.wav"));
        reflectedMap.put("DesperadosShot", new Sfx("sounds/DesperadosShot.wav"));
        reflectedMap.put("Spector", new Sfx("sounds/Spector.wav"));
        reflectedMap.put("HonoredFrontguardGeneral", new Sfx("sounds/HonoredFrontguardGeneral.wav"));
        reflectedMap.put("Athos", new Sfx("sounds/Athos.wav"));
        reflectedMap.put("AthosPower", new Sfx("sounds/AthosPower.wav"));
        reflectedMap.put("Aramis", new Sfx("sounds/Aramis.wav"));
        reflectedMap.put("AramisPower", new Sfx("sounds/AramisPower.wav"));
        reflectedMap.put("Porthos", new Sfx("sounds/Porthos.wav"));
        reflectedMap.put("PorthosPower", new Sfx("sounds/PorthosPower.wav"));
        reflectedMap.put("DArtagnan", new Sfx("sounds/DArtagnan.wav"));
        reflectedMap.put("MusketeersVow", new Sfx("sounds/MusketeersVow.wav"));
        reflectedMap.put("MusketeersVow_EH", new Sfx("sounds/MusketeersVow_EH.wav"));
        reflectedMap.put("Naht_A0", new Sfx("sounds/Naht_A0.wav"));
        reflectedMap.put("Naht_A1", new Sfx("sounds/Naht_A1.wav"));
        reflectedMap.put("Naht_A2", new Sfx("sounds/Naht_A2.wav"));
        reflectedMap.put("Naht_A3", new Sfx("sounds/Naht_A3.wav"));
        reflectedMap.put("Naht_A4", new Sfx("sounds/Naht_A4.wav"));
        reflectedMap.put("Naht_A5", new Sfx("sounds/Naht_A5.wav"));
        reflectedMap.put("Naht_C", new Sfx("sounds/Naht_C.wav"));
        reflectedMap.put("Naht_D1", new Sfx("sounds/Naht_D1.wav"));
        reflectedMap.put("Naht_D2", new Sfx("sounds/Naht_D2.wav"));
        reflectedMap.put("Naht_D3", new Sfx("sounds/Naht_D3.wav"));
        reflectedMap.put("Naht_D4", new Sfx("sounds/Naht_D4.wav"));
        reflectedMap.put("Naht_D5", new Sfx("sounds/Naht_D5.wav"));
        reflectedMap.put("Naht_P1", new Sfx("sounds/Naht_P1.wav"));
        reflectedMap.put("Naht_P2", new Sfx("sounds/Naht_P2.wav"));
        reflectedMap.put("Naht_P3", new Sfx("sounds/Naht_P3.wav"));
        reflectedMap.put("IC_Stage2", new Sfx("sounds/IC_Stage2.wav"));
        reflectedMap.put("IC_Stage2_A1", new Sfx("sounds/IC_Stage2_A1.wav"));
        reflectedMap.put("IC_Stage2_A2", new Sfx("sounds/IC_Stage2_A2.wav"));
        reflectedMap.put("IC_Stage2_A3", new Sfx("sounds/IC_Stage2_A3.wav"));
        reflectedMap.put("Maiser_Story", new Sfx("sounds/Maiser_Story.wav"));
        reflectedMap.put("Selena_Story", new Sfx("sounds/Selena_Story.wav"));
        reflectedMap.put("Illganeau_Story", new Sfx("sounds/Illganeau_Story.wav"));
        reflectedMap.put("Sekka_Story", new Sfx("sounds/Sekka_Story.wav"));
        reflectedMap.put("Dracu_Story", new Sfx("sounds/Dracu_Story.wav"));
        reflectedMap.put("Kagero_Story", new Sfx("sounds/Kagero_Story.wav"));
        reflectedMap.put("VerdictWord", new Sfx("sounds/VerdictWord.wav"));
        reflectedMap.put("AbsoluteOrder", new Sfx("sounds/AbsoluteOrder.wav"));
        reflectedMap.put("Zecilwenshe_A", new Sfx("sounds/Zecilwenshe_A.wav"));
        reflectedMap.put("Zecilwenshe_R", new Sfx("sounds/Zecilwenshe_R.wav"));
        reflectedMap.put("Zecilwenshe_R2", new Sfx("sounds/Zecilwenshe_R2.wav"));
        reflectedMap.put("Zecilwenshe_R3", new Sfx("sounds/Zecilwenshe_R3.wav"));
        reflectedMap.put("Satanael", new Sfx("sounds/Satanael.wav"));
        reflectedMap.put("FlameNGlass2", new Sfx("sounds/FlameNGlass2.wav"));
        reflectedMap.put("Taketsumi", new Sfx("sounds/Taketsumi.wav"));
        reflectedMap.put("HeroOfTheHunt", new Sfx("sounds/HeroOfTheHunt.wav"));
        reflectedMap.put("Anisage", new Sfx("sounds/Anisage.wav"));
        reflectedMap.put("UndyingResolve", new Sfx("sounds/UndyingResolve.wav"));
        reflectedMap.put("SoulGuide", new Sfx("sounds/SoulGuid.wav"));
        reflectedMap.put("Itsurugi", new Sfx("sounds/Itsurugi.wav"));
        reflectedMap.put("WolflingStruggle", new Sfx("sounds/WolflingStruggle.wav"));
        reflectedMap.put("Yukishima", new Sfx("sounds/Yukishima.wav"));
        reflectedMap.put("Yukishima_EH", new Sfx("sounds/Yukishima_EH.wav"));
        reflectedMap.put("Hozumi", new Sfx("sounds/Hozumi.wav"));
        reflectedMap.put("MagnaSaber", new Sfx("sounds/MagnaSaber.wav"));
        reflectedMap.put("AllFeeling", new Sfx("sounds/AllFeeling.wav"));
        reflectedMap.put("Paracelise", new Sfx("sounds/Paracelise.wav"));
        reflectedMap.put("EternalContract", new Sfx("sounds/EternalContract.wav"));
        reflectedMap.put("Lifetime", new Sfx("sounds/Lifetime.wav"));
        reflectedMap.put("TriggerPuppeteer", new Sfx("sounds/TriggerPuppeteer.wav"));
        reflectedMap.put("Faker", new Sfx("sounds/Faker.wav"));
        reflectedMap.put("VengeanceBuffPower", new Sfx("sounds/VengeanceBuffPower.wav"));
        reflectedMap.put("AdherentOfScream_Acc", new Sfx("sounds/AdherentOfScream_Acc.wav"));
        reflectedMap.put("RoomServiceDevil", new Sfx("sounds/RoomServiceDevil.wav"));
        reflectedMap.put("RoomServiceDevil_Acc", new Sfx("sounds/RoomServiceDevil_Acc.wav"));
        reflectedMap.put("JubilanceWitch", new Sfx("sounds/JubilanceWitch.wav"));
        reflectedMap.put("AcidGolem", new Sfx("sounds/AcidGolem.wav"));
        reflectedMap.put("DemonCommander", new Sfx("sounds/DemonCommander.wav"));
        reflectedMap.put("Seox", new Sfx("sounds/Seox.wav"));
        reflectedMap.put("Seox_SA", new Sfx("sounds/Seox_SA.wav"));
        reflectedMap.put("Seox_SSA", new Sfx("sounds/Seox_SSA.wav"));
        reflectedMap.put("Urias_Start", new Sfx("sounds/Urias_Start.wav"));
        reflectedMap.put("Urias_Ev", new Sfx("sounds/Urias_Ev.wav"));
        reflectedMap.put("Maisha2", new Sfx("sounds/Maisha2.wav"));
        reflectedMap.put("LostSamurai", new Sfx("sounds/LostSamurai.wav"));
        reflectedMap.put("Comfort", new Sfx("sounds/Comfort.wav"));
        reflectedMap.put("TheTemperance", new Sfx("sounds/TheTemperance.wav"));
        reflectedMap.put("TheTemperance_Acc", new Sfx("sounds/TheTemperance_Acc.wav"));
        reflectedMap.put("UnselfishGrace", new Sfx("sounds/UnselfishGrace.wav"));
        reflectedMap.put("InsatiableDesire", new Sfx("sounds/InsatiableDesire.wav"));
        reflectedMap.put("MadnessCurse", new Sfx("sounds/MadnessCurse.wav"));
        reflectedMap.put("Sekka_L", new Sfx("sounds/Sekka_L.wav"));
        reflectedMap.put("Hozumi_L", new Sfx("sounds/Hozumi_L.wav"));
        reflectedMap.put("Cassiopeia_L", new Sfx("sounds/Cassiopeia_L.wav"));
        reflectedMap.put("DarkGeneral_L", new Sfx("sounds/DarkGeneral_L.wav"));
        reflectedMap.put("Tsubaki_L", new Sfx("sounds/Tsubaki_L.wav"));
        reflectedMap.put("Nahtnaught_L", new Sfx("sounds/Nahtnaught_L.wav"));
        reflectedMap.put("Nahtnaught_L_Eh", new Sfx("sounds/Nahtnaught_L_Eh.wav"));
        reflectedMap.put("IC_L", new Sfx("sounds/IC_L.wav"));
        reflectedMap.put("MagnaZero_L", new Sfx("sounds/MagnaZero_L.wav"));
        reflectedMap.put("TheLovers_L", new Sfx("sounds/TheLovers_L.wav"));
        reflectedMap.put("TheLovers_L_Eh", new Sfx("sounds/TheLovers_L_Eh.wav"));
        reflectedMap.put("Aisha_L", new Sfx("sounds/Aisha_L.wav"));
        reflectedMap.put("SoulGuide_L", new Sfx("sounds/SoulGuide_L.wav"));
        reflectedMap.put("Aenea_L", new Sfx("sounds/Aenea_L.wav"));
        reflectedMap.put("Elana_L", new Sfx("sounds/Elana_L.wav"));
        reflectedMap.put("ResentfulScreaming_L", new Sfx("sounds/ResentfulScreaming_L.wav"));
        reflectedMap.put("EternalContract_L", new Sfx("sounds/EternalContract_L.wav"));
        reflectedMap.put("BlackenedScripture", new Sfx("sounds/BlackenedScripture.wav"));
        reflectedMap.put("BloodPact", new Sfx("sounds/BloodPact.wav"));
        reflectedMap.put("Arthur", new Sfx("sounds/Arthur.wav"));
        reflectedMap.put("Tweyen", new Sfx("sounds/Tweyen.wav"));
        reflectedMap.put("Tweyen_SA", new Sfx("sounds/Tweyen_SA.wav"));
        reflectedMap.put("Tweyen_SSA", new Sfx("sounds/Tweyen_SSA.wav"));
        reflectedMap.put("Yggdrasil", new Sfx("sounds/Yggdrasil.wav"));
        reflectedMap.put("Yggdrasil2", new Sfx("sounds/Yggdrasil2.wav"));
        reflectedMap.put("BlessingsOfCreation", new Sfx("sounds/BlessingOfCreation.wav"));
        reflectedMap.put("WrathOfNature", new Sfx("sounds/WrathOfNature.wav"));
        reflectedMap.put("NatureBlessing", new Sfx("sounds/NatureBlessing.wav"));
        reflectedMap.put("Rola", new Sfx("sounds/Rola.wav"));
        reflectedMap.put("Rola_L", new Sfx("sounds/Rola_L.wav"));
        reflectedMap.put("Rola_EH", new Sfx("sounds/Rola_Eh.wav"));
        reflectedMap.put("Rola_L_EH", new Sfx("sounds/Rola_L_EH.wav"));
        reflectedMap.put("Vanpi_Select", new Sfx("sounds/Vanpi_Select.wav"));
        reflectedMap.put("Vanpi_Hurt", new Sfx("sounds/Vanpi_Hurt.wav"));
        reflectedMap.put("Vanpi_Hurt2", new Sfx("sounds/Vanpi_Hurt2.wav"));
        reflectedMap.put("Vanpi_Hurt3", new Sfx("sounds/Vanpi_Hurt3.wav"));
        reflectedMap.put("Vanpi_Hurt4", new Sfx("sounds/Vanpi_Hurt4.wav"));
        reflectedMap.put("Orchid_EW", new Sfx("sounds/Orchid_EW.wav"));
        reflectedMap.put("Orchid_EW_Eff", new Sfx("sounds/Orchid_EW_Eff.wav"));
        reflectedMap.put("Vanpi_Q", new Sfx("sounds/Vanpi_Q.wav"));
        reflectedMap.put("VanpiPower", new Sfx("sounds/VanpiPower.wav"));
        reflectedMap.put("Norn", new Sfx("sounds/NornPower.wav"));
        reflectedMap.put("CassimPower", new Sfx("sounds/CassimPower.wav"));
        reflectedMap.put("Cassim", new Sfx("sounds/Cassim.wav"));
        reflectedMap.put("Rosa", new Sfx("sounds/RosaPower.wav"));
        reflectedMap.put("Craig", new Sfx("sounds/Craig.wav"));
        reflectedMap.put("CraigPower", new Sfx("sounds/CraigPower.wav"));
        reflectedMap.put("CraigPower2", new Sfx("sounds/CraigPower2.wav"));
        reflectedMap.put("Hanna", new Sfx("sounds/Hanna.wav"));
        reflectedMap.put("Veight2", new Sfx("sounds/Veight2.wav"));
        reflectedMap.put("WhirlwindAssault", new Sfx("sounds/WhirlwindAssault.wav"));
        reflectedMap.put("TheHanged_L", new Sfx("sounds/TheHanged_L.wav"));
        reflectedMap.put("TheHanged_L_EH", new Sfx("sounds/TheHanged_L_EH.wav"));
        reflectedMap.put("Vyrmedea", new Sfx("sounds/Vyrmedea.wav"));
        reflectedMap.put("Vyrmedea_Power", new Sfx("sounds/Vyrmedea_Power.wav"));
        reflectedMap.put("Chastity", new Sfx("sounds/Chastity.wav"));
        reflectedMap.put("Zerk", new Sfx("sounds/Zerk.wav"));
        reflectedMap.put("Zerk_Acc", new Sfx("sounds/Zerk_Acc.wav"));
        reflectedMap.put("MysticQueen", new Sfx("sounds/MysticQueen.wav"));
        reflectedMap.put("MysticQueenPower", new Sfx("sounds/MysticQueenPower.wav"));
        reflectedMap.put("Ghost", new Sfx("sounds/Ghost.wav"));
        reflectedMap.put("GiantGhost", new Sfx("sounds/GiantGhost.wav"));
        reflectedMap.put("MasqueradeGhost", new Sfx("sounds/MasqueradeGhost.wav"));
        reflectedMap.put("MasqueradeGhostPower", new Sfx("sounds/MasqueradeGhostPower.wav"));
        reflectedMap.put("Baccherus", new Sfx("sounds/Baccherus.wav"));
        reflectedMap.put("TrickDullahan", new Sfx("sounds/TrickDullahan.wav"));
        reflectedMap.put("Nobilis", new Sfx("sounds/Nobilis.wav"));
        reflectedMap.put("Slade", new Sfx("sounds/Slade.wav"));
        reflectedMap.put("MaliciousBlader", new Sfx("sounds/MaliciousBlader.wav"));
        reflectedMap.put("Waltz", new Sfx("sounds/Waltz.wav"));
        reflectedMap.put("Waltz_Acc", new Sfx("sounds/Waltz_Acc.wav"));
        reflectedMap.put("Cernunnos_L", new Sfx("sounds/Cernunnos_L.wav"));
        reflectedMap.put("Ameth_Selected", new Sfx("sounds/Ameth_Selected.wav"));
    }

    public void receiveEditRelics() {
        BaseMod.addRelicToCustomPool(new FriendOfTruth(), Witchcraft.Enums.COLOR_BLUE);
        BaseMod.addRelicToCustomPool(new Eleanor(), Witchcraft.Enums.COLOR_BLUE);
        BaseMod.addRelicToCustomPool(new EnchantedLibrary(), Witchcraft.Enums.COLOR_BLUE);
        BaseMod.addRelicToCustomPool(new EarthEssenceRelic(), Witchcraft.Enums.COLOR_BLUE);
        BaseMod.addRelicToCustomPool(new shadowverse.relics.Mysteria(), Witchcraft.Enums.COLOR_BLUE);
        BaseMod.addRelicToCustomPool(new Offensive(), Witchcraft.Enums.COLOR_BLUE);
        BaseMod.addRelicToCustomPool(new Genius(), Witchcraft.Enums.COLOR_BLUE);
        BaseMod.addRelic( new BlackPinya(), RelicType.SHARED);
        BaseMod.addRelic( new GoldPinya(), RelicType.SHARED);
        BaseMod.addRelic( new KMR1(), RelicType.SHARED);
        BaseMod.addRelic( new KMR2(), RelicType.SHARED);
        BaseMod.addRelic( new MissLethal(), RelicType.SHARED);
        BaseMod.addRelic( new GeassRelic(), RelicType.SHARED);
        BaseMod.addRelic( new NeutralBook(), RelicType.SHARED);
        BaseMod.addRelic( new ValhoreanDealer(), RelicType.SHARED);
        BaseMod.addRelic( new AlterplaneArbiter(), RelicType.SHARED);
        BaseMod.addRelic( new Tree(), RelicType.SHARED);
        BaseMod.addRelic( new Bullet(), RelicType.SHARED);
        BaseMod.addRelicToCustomPool( new Offensive2(), Elf.Enums.COLOR_GREEN);
        BaseMod.addRelicToCustomPool( new SixMark(), Elf.Enums.COLOR_GREEN);
        BaseMod.addRelicToCustomPool( new ArisaBOSS(), Elf.Enums.COLOR_GREEN);
        BaseMod.addRelicToCustomPool( new NiouKyuu(), Elf.Enums.COLOR_GREEN);
        BaseMod.addRelicToCustomPool( new LymagaWeapon(), Elf.Enums.COLOR_GREEN);
        BaseMod.addRelicToCustomPool( new GlassOfIC(), Elf.Enums.COLOR_GREEN);
        BaseMod.addRelicToCustomPool( new Mimori(), Elf.Enums.COLOR_GREEN);
        BaseMod.addRelicToCustomPool( new KyoukaBOSS(), Witchcraft.Enums.COLOR_BLUE);
        BaseMod.addRelicToCustomPool( new KuonWeapon(), Witchcraft.Enums.COLOR_BLUE);
        BaseMod.addRelicToCustomPool( new Offensive3(), Necromancer.Enums.COLOR_PURPLE);
        BaseMod.addRelicToCustomPool( new BurialGround(), Necromancer.Enums.COLOR_PURPLE);
        BaseMod.addRelicToCustomPool( new LunaBOSS(), Necromancer.Enums.COLOR_PURPLE);
        BaseMod.addRelicToCustomPool( new Todoroki(), Necromancer.Enums.COLOR_PURPLE);
        BaseMod.addRelicToCustomPool( new TailRelic(), Necromancer.Enums.COLOR_PURPLE);
        BaseMod.addRelicToCustomPool( new InfernalCrown(), Necromancer.Enums.COLOR_PURPLE);
        BaseMod.addRelicToCustomPool( new Alice(), Necromancer.Enums.COLOR_PURPLE);
        BaseMod.addRelicToCustomPool( new Offensive4(), Vampire.Enums.COLOR_SCARLET);
        BaseMod.addRelicToCustomPool( new IriaBOSS(), Vampire.Enums.COLOR_SCARLET);
        BaseMod.addRelicToCustomPool( new LustRelic(), Vampire.Enums.COLOR_SCARLET);
        BaseMod.addRelicToCustomPool( new Pendant(), Vampire.Enums.COLOR_SCARLET);
        BaseMod.addRelicToCustomPool( new Lusia(), Vampire.Enums.COLOR_SCARLET);
        BaseMod.addRelicToCustomPool( new BerserkRelic(), Vampire.Enums.COLOR_SCARLET);
        BaseMod.addRelicToCustomPool( new LonePromise(), Vampire.Enums.COLOR_SCARLET);
        BaseMod.addRelicToCustomPool( new RevelrySeed(), Vampire.Enums.COLOR_SCARLET);
        BaseMod.addRelicToCustomPool( new Offensive5(), Nemesis.Enums.COLOR_SKY);
        BaseMod.addRelicToCustomPool( new NemesisBOSS(), Nemesis.Enums.COLOR_SKY);
        BaseMod.addRelicToCustomPool( new ArtsMaster(), Nemesis.Enums.COLOR_SKY);
        BaseMod.addRelicToCustomPool( new WhiteRelic(), Nemesis.Enums.COLOR_SKY);
        BaseMod.addRelicToCustomPool( new BlackRelic(), Nemesis.Enums.COLOR_SKY);
        BaseMod.addRelicToCustomPool( new Knife(), Nemesis.Enums.COLOR_SKY);
        BaseMod.addRelicToCustomPool( new TranquilCog(), Nemesis.Enums.COLOR_SKY);
        BaseMod.addRelicToCustomPool( new Offensive6(), Royal.Enums.COLOR_YELLOW);
        BaseMod.addRelicToCustomPool( new OliviasBlessing(), Royal.Enums.COLOR_YELLOW);
        BaseMod.addRelicToCustomPool( new WindGodsBlessing(), Royal.Enums.COLOR_YELLOW);
        BaseMod.addRelicToCustomPool( new Conscription(), Royal.Enums.COLOR_YELLOW);
        BaseMod.addRelicToCustomPool( new KagemitsuSword(), Royal.Enums.COLOR_YELLOW);
        BaseMod.addRelicToCustomPool( new Spineblade(), Royal.Enums.COLOR_YELLOW);
        BaseMod.addRelicToCustomPool( new Durandal(), Royal.Enums.COLOR_YELLOW);
        BaseMod.addRelicToCustomPool( new EndlessUsurpation(), Royal.Enums.COLOR_YELLOW);
        BaseMod.addRelicToCustomPool( new Offensive7(), Bishop.Enums.COLOR_WHITE);
        BaseMod.addRelicToCustomPool( new GrandShield(), Bishop.Enums.COLOR_WHITE);
        BaseMod.addRelicToCustomPool( new GrandSword(), Bishop.Enums.COLOR_WHITE);
        BaseMod.addRelicToCustomPool( new Savior(), Bishop.Enums.COLOR_WHITE);
        BaseMod.addRelicToCustomPool( new BishopBOSS(), Bishop.Enums.COLOR_WHITE);
        BaseMod.addRelicToCustomPool( new HeresyAvatar(), Bishop.Enums.COLOR_WHITE);
        BaseMod.addRelicToCustomPool( new ErisRelic(), Bishop.Enums.COLOR_WHITE);
        BaseMod.addRelicToCustomPool( new IminaRelic(), Bishop.Enums.COLOR_WHITE);
        BaseMod.addRelicToCustomPool( new KyaruBOSS(), Witchcraft.Enums.COLOR_BLUE);
        BaseMod.addRelicToCustomPool( new AnneBOSS(), Witchcraft.Enums.COLOR_BLUE);
        BaseMod.addRelicToCustomPool( new KokkoroBOSS(), Elf.Enums.COLOR_GREEN);
        BaseMod.addRelicToCustomPool( new MiyakoBOSS(), Necromancer.Enums.COLOR_PURPLE);
        BaseMod.addRelicToCustomPool( new IoBOSS(), Vampire.Enums.COLOR_SCARLET);
        BaseMod.addRelicToCustomPool( new RalmiaBOSS(), Nemesis.Enums.COLOR_SKY);
        BaseMod.addRelicToCustomPool( new ShizuruBOSS(), Royal.Enums.COLOR_YELLOW);
        BaseMod.addRelicToCustomPool( new YukariBOSS(), Bishop.Enums.COLOR_WHITE);
        BaseMod.addRelicToCustomPool( new ShinobuBOSS(), Necromancer.Enums.COLOR_PURPLE);
        BaseMod.addRelic(new BanShadowverse(), RelicType.SHARED);
    }

    class Keywords {
        Keyword[] keywords;
    }


    public void receiveEditStrings() {
        logger.info("Adding Strings");
        String cardsPath = "localization/cards-" + Settings.language + ".json";
        String characterPath = "localization/character-" + Settings.language + ".json";
        String powerPath = "localization/powers-" + Settings.language + ".json";
        String relicsPath = "localization/relics-" + Settings.language + ".json";
        String uiPath = "localization/UIStrings-" + Settings.language + ".json";
        String eventPath = "localization/events-" + Settings.language + ".json";
        String monsterPath = "localization/monsters-" + Settings.language + ".json";
        String potionPath = "localization/potions-" + Settings.language + ".json";
        String orbPath = "localization/orbs-" + Settings.language + ".json";
        BaseMod.loadCustomStringsFile(CardStrings.class, cardsPath);
        BaseMod.loadCustomStringsFile(CharacterStrings.class, characterPath);
        BaseMod.loadCustomStringsFile(PowerStrings.class, powerPath);
        BaseMod.loadCustomStringsFile(RelicStrings.class, relicsPath);
        BaseMod.loadCustomStringsFile(UIStrings.class, uiPath);
        BaseMod.loadCustomStringsFile(EventStrings.class, eventPath);
        BaseMod.loadCustomStringsFile(MonsterStrings.class, monsterPath);
        BaseMod.loadCustomStringsFile(PotionStrings.class, potionPath);
        BaseMod.loadCustomStringsFile(OrbStrings.class, orbPath);
        logger.info("Success");
    }

    public void receiveEditCards() {
        logger.info("Adding cards");
        BaseMod.addCard( new Strike_W());
        BaseMod.addCard( new Defend_W());
        BaseMod.addCard( new Insight());
        BaseMod.addCard( new FieryEmbrace());
        BaseMod.addCard( new FatesHand());
        BaseMod.addCard( new Lou());
        BaseMod.addCard( new Ogler());
        BaseMod.addCard( new ZealotOfTruth());
        BaseMod.addCard( new MagicMissile());
        BaseMod.addCard( new DimensionShift());
        BaseMod.addCard( new MagicOwl());
        BaseMod.addCard( new FireChain());
        BaseMod.addCard( new GigantChimera());
        BaseMod.addCard( new OmenOfTruth());
        BaseMod.addCard( new DimensionalWitch());
        BaseMod.addCard( new MysticSeeker());
        BaseMod.addCard( new EdictOfTruth());
        BaseMod.addCard( new TruthsAdjudication());
        BaseMod.addCard( new MysterianKnowledge());
        BaseMod.addCard( new MysterianCircle());
        BaseMod.addCard( new MysterianMissile());
        BaseMod.addCard( new CommenceExperiment());
        BaseMod.addCard( new MasterMageLevi());
        BaseMod.addCard( new Concentration());
        BaseMod.addCard( new PiousInstructor());
        BaseMod.addCard( new ConjureGuardian());
        BaseMod.addCard( new GolemAssault());
        BaseMod.addCard( new Clarke());
        BaseMod.addCard( new Faust());
        BaseMod.addCard( new OrichalcumGolem());
        BaseMod.addCard( new DwarfAlchemist());
        BaseMod.addCard( new WitchsCauldron());
        BaseMod.addCard( new Magisa());
        BaseMod.addCard( new StaffOfWhirlwinds());
        BaseMod.addCard( new ConjureTwosome());
        BaseMod.addCard( new Petrification());
        BaseMod.addCard( new AbsoluteZeroBlade());
        BaseMod.addCard( new Chaos());
        BaseMod.addCard( new ChainLightning());
        BaseMod.addCard( new Runie());
        BaseMod.addCard( new Telescope());
        BaseMod.addCard( new ForbiddenDarkMage());
        BaseMod.addCard( new ProductMachine());
        BaseMod.addCard( new RepairMode());
        BaseMod.addCard( new JetBroomWitch());
        BaseMod.addCard( new TetrasMettle());
        BaseMod.addCard( new IsabellesConjuration());
        BaseMod.addCard( new SorceryInSolidarity());
        BaseMod.addCard( new MechanizedLifeform());
        BaseMod.addCard( new MagitechGolem());
        BaseMod.addCard( new MechabookSorcerer());
        BaseMod.addCard( new SonicFour());
        BaseMod.addCard( new Tetra());
        BaseMod.addCard( new MechastaffSorcerer());
        BaseMod.addCard( new ArsMagna());
        BaseMod.addCard( new Cagliostro());
        BaseMod.addCard( new MadcapConjuration());
        BaseMod.addCard( new Awakened());
        BaseMod.addCard( new Erasmus());
        BaseMod.addCard( new Oz());
        BaseMod.addCard( new GrandSummoning());
        BaseMod.addCard( new Shop());
        BaseMod.addCard( new NaterranGreatTree());
        BaseMod.addCard( new Geoelementist());
        BaseMod.addCard( new Stormelementalist());
        BaseMod.addCard( new Pyromancer());
        BaseMod.addCard( new Elementalmana());
        BaseMod.addCard( new Riley());
        BaseMod.addCard( new ApexElemental());
        BaseMod.addCard( new DualAngle());
        BaseMod.addCard( new Ghios());
        BaseMod.addCard( new OmenOfOne());
        BaseMod.addCard( new Mysteria());
        BaseMod.addCard( new EarthFall());
        BaseMod.addCard( new InfernalSurge());
        BaseMod.addCard( new InfernalGaze());
        BaseMod.addCard( new HeavenFall());
        BaseMod.addCard( new Astaroth());
        BaseMod.addCard( new Scorpion());
        BaseMod.addCard( new Flamelord());
        BaseMod.addCard( new ViciousCommander());
        BaseMod.addCard( new WrathfulIcefiend());
        BaseMod.addCard( new Behemoth());
        BaseMod.addCard( new DemonOfPurgatory());
        BaseMod.addCard( new Desire());
        BaseMod.addCard( new Satan());
        BaseMod.addCard( new EmbodimentOfCocytus());
        BaseMod.addCard( new JudgmentWord());
        BaseMod.addCard( new Vincent());
        BaseMod.addCard( new Machinus());
        BaseMod.addCard( new GrimoireSorcerer());
        BaseMod.addCard( new WitchSnap());
        BaseMod.addCard( new Aeroelementalist());
        BaseMod.addCard( new Zeus(0));
        BaseMod.addCard( new StarBright());
        BaseMod.addCard( new TheWorld());
        BaseMod.addCard( new TheWorld_I());
        BaseMod.addCard( new Grimnir());
        BaseMod.addCard( new SlashOfOne());
        BaseMod.addCard( new Dis());
        BaseMod.addCard( new Servant());
        BaseMod.addCard( new SilentRider());
        BaseMod.addCard( new OldSatan());
        BaseMod.addCard( new BellAngle());
        BaseMod.addCard( new Omniscient());
        BaseMod.addCard( new Ignorant());
        BaseMod.addCard( new TheFool());
        BaseMod.addCard( new Mother());
        BaseMod.addCard( new Glass());
        BaseMod.addCard( new FlameNGlass());
        BaseMod.addCard( new HeavensDoor());
        BaseMod.addCard( new Technolord());
        BaseMod.addCard( new LegendaryFighterA());

        BaseMod.addCard( new Gabriel());
        BaseMod.addCard( new Kuon());
        BaseMod.addCard( new PaperShikigami());
        BaseMod.addCard( new DemonicShikigami());
        BaseMod.addCard( new CelestialShikigami());
        BaseMod.addCard( new Anne());
        BaseMod.addCard( new AnnesSorcery());
        BaseMod.addCard( new AnnesSummoning());
        BaseMod.addCard( new Grea());
        BaseMod.addCard( new Inferno());
        BaseMod.addCard( new Ember());
        BaseMod.addCard( new Owen());
        BaseMod.addCard( new Miranda());
        BaseMod.addCard( new MysterianRite());
        BaseMod.addCard( new Horse());
        BaseMod.addCard( new Jeep());
        BaseMod.addCard( new Motorbike());
        BaseMod.addCard( new RapidFire());
        BaseMod.addCard( new Maiser());
        BaseMod.addCard( new CrystalBright());
        BaseMod.addCard( new GemLight());
        BaseMod.addCard( new BelphometStatus());
        BaseMod.addCard( new ManaForce());
        BaseMod.addCard( new Strike_E());
        BaseMod.addCard( new Defend_E());
        BaseMod.addCard( new Fairy());
        BaseMod.addCard( new FairyWhisperer());
        BaseMod.addCard( new SylvanJustice());
        BaseMod.addCard( new NaturesGuidance());
        BaseMod.addCard( new AirboundBarrage());
        BaseMod.addCard( new WhirlwindRhinoceroach());
        BaseMod.addCard( new Rhinoceroach());
        BaseMod.addCard( new ElfSong());
        BaseMod.addCard( new FairyCircle());
        BaseMod.addCard( new WoodOfBrambles());
        BaseMod.addCard( new WardOfUnkilling());
        BaseMod.addCard( new OmenOfUnkilling());
        BaseMod.addCard( new AriasWhirlwind());
        BaseMod.addCard( new Bayle());
        BaseMod.addCard( new Hero());
        BaseMod.addCard( new WindFall());
        BaseMod.addCard( new ElfGuard());
        BaseMod.addCard( new Aria());
        BaseMod.addCard( new Flame());
        BaseMod.addCard( new LegendaryFighter());
        BaseMod.addCard( new NaterranFuture());
        BaseMod.addCard( new GuardOfMachinatree());
        BaseMod.addCard( new RoboticBagworm());
        BaseMod.addCard( new Damian());
        BaseMod.addCard( new MachineClaw());
        BaseMod.addCard( new IrongliderElf());
        BaseMod.addCard( new Cassiopeia());
        BaseMod.addCard( new Loxis());
        BaseMod.addCard( new NaturalMana());
        BaseMod.addCard( new ScaryTrend());
        BaseMod.addCard( new Ladica());
        BaseMod.addCard( new Packing());
        BaseMod.addCard( new VictoryCard());
        BaseMod.addCard( new TreacherousReversal());
        BaseMod.addCard( new TheHanged());
        BaseMod.addCard( new Verdant());
        BaseMod.addCard( new WindFairy());
        BaseMod.addCard( new ServantOfUnkilling());
        BaseMod.addCard( new MarkOfUnkilling());
        BaseMod.addCard( new ZealotOfUnkilling());
        BaseMod.addCard( new VarmintHunter());
        BaseMod.addCard( new Beast());
        BaseMod.addCard( new Beauty());
        BaseMod.addCard( new MiracleOfLove());
        BaseMod.addCard( new Sekka());
        BaseMod.addCard( new ResolveOfSekka());
        BaseMod.addCard( new ForestFairy());
        BaseMod.addCard( new Lisa());
        BaseMod.addCard( new NatureCorroded());
        BaseMod.addCard( new Genshin());
        BaseMod.addCard( new GreenWoodGuardian());
        BaseMod.addCard( new CrossCombination());
        BaseMod.addCard( new GreenbrierElf());
        BaseMod.addCard( new WoodlandCleaver());
        BaseMod.addCard( new Lymaga());
        BaseMod.addCard( new WildwoodMatriarch());
        BaseMod.addCard( new Aerin());
        BaseMod.addCard( new Metera());
        BaseMod.addCard( new BeetleWarrior());
        BaseMod.addCard( new BlossomTreant());
        BaseMod.addCard( new Rino(0));
        BaseMod.addCard( new Kokkoro(0));
        BaseMod.addCard( new Amataz());
        BaseMod.addCard( new DivineSmithing());
        BaseMod.addCard( new Cleft());
        BaseMod.addCard( new TwinAssault());
        BaseMod.addCard( new Homecoming());
        BaseMod.addCard( new PixieParadise());
        BaseMod.addCard( new Lycoris());
        BaseMod.addCard( new AvatarOfFruition());
        BaseMod.addCard( new ThronBurst());
        BaseMod.addCard( new RoseQueen());
        BaseMod.addCard( new Pamera());
        BaseMod.addCard( new SkyDevouring());
        BaseMod.addCard( new Korwa());
        BaseMod.addCard( new Fil());
        BaseMod.addCard( new PrimalGigant());
        BaseMod.addCard( new NewEmber());
        BaseMod.addCard( new ExceedBurst());
        BaseMod.addCard( new ShikigamiSummoning());
        BaseMod.addCard( new Geass());
        BaseMod.addCard( new Strike_N());
        BaseMod.addCard( new Defend_N());
        BaseMod.addCard( new UndyingResentment());
        BaseMod.addCard( new SpartoiSergent());
        BaseMod.addCard( new Path());
        BaseMod.addCard( new SoulConversion());
        BaseMod.addCard( new Mordecai());
        BaseMod.addCard( new LurchingCorpse());
        BaseMod.addCard( new DeathTyrant());
        BaseMod.addCard( new Minthe());
        BaseMod.addCard( new Fafnir());
        BaseMod.addCard( new ApostleOfSilence());
        BaseMod.addCard( new DiscipleOfSilence());
        BaseMod.addCard( new DeathParty());
        BaseMod.addCard( new DeathNote());
        BaseMod.addCard( new FoulTempest());
        BaseMod.addCard( new Zombie());
        BaseMod.addCard( new Litch());
        BaseMod.addCard( new ImpiousResurrection());
        BaseMod.addCard( new EternalVow());
        BaseMod.addCard( new Ceres());
        BaseMod.addCard( new Hector());
        BaseMod.addCard( new RevenantRam());
        BaseMod.addCard( new ReviveMana());
        BaseMod.addCard( new ZombieDog());
        BaseMod.addCard( new NecroAnimals());
        BaseMod.addCard( new Lubelle());
        BaseMod.addCard( new Thoth());
        BaseMod.addCard( new TrothCurse());
        BaseMod.addCard( new GhostRider());
        BaseMod.addCard( new GloamingTombs());
        BaseMod.addCard( new DemonicProcession());
        BaseMod.addCard( new Ceridwen());
        BaseMod.addCard( new DeathBreath());
        BaseMod.addCard( new TheLovers());
        BaseMod.addCard( new SpiritCurator());
        BaseMod.addCard( new Nicola());
        BaseMod.addCard( new ForbiddenArt());
        BaseMod.addCard( new SpartoiSoldier());
        BaseMod.addCard( new Chris());
        BaseMod.addCard( new SoulStrike());
        BaseMod.addCard( new Kagero());
        BaseMod.addCard( new WightKing());
        BaseMod.addCard( new Wight());
        BaseMod.addCard( new ImmortalThane());
        BaseMod.addCard( new NecroAssassin());
        BaseMod.addCard( new Nephthys());
        BaseMod.addCard( new CarnivalNecromancer());
        BaseMod.addCard( new EverdarkStrix());
        BaseMod.addCard( new HungrySlash());
        BaseMod.addCard( new DeadMetalStar());
        BaseMod.addCard( new Skeleton());
        BaseMod.addCard( new HinterlandGhoul());
        BaseMod.addCard( new BoneDominator());
        BaseMod.addCard( new NecroImpulse());
        BaseMod.addCard( new BoneChimera());
        BaseMod.addCard( new LadyGray());
        BaseMod.addCard( new SowDeathReapLife());
        BaseMod.addCard( new BoneDrone());
        BaseMod.addCard( new GigantSkull());
        BaseMod.addCard( new IrongearCorpsman());
        BaseMod.addCard( new ForbiddenAndBalance());
        BaseMod.addCard( new Arcus());
        BaseMod.addCard( new Manmaru1());
        BaseMod.addCard( new GenerateNine());
        BaseMod.addCard( new Aenea());
        BaseMod.addCard( new Andrealphus());
        BaseMod.addCard( new OmenOfSilence());
        BaseMod.addCard( new Gremory());
        BaseMod.addCard( new Aisha());
        BaseMod.addCard( new RegenerateSpirit());
        BaseMod.addCard( new Hades());
        BaseMod.addCard( new Mimi());
        BaseMod.addCard( new Koko());
        BaseMod.addCard( new Cerberus());
        BaseMod.addCard( new AttendentOfNight());
        BaseMod.addCard( new Orthrus());
        BaseMod.addCard( new Pudding());
        BaseMod.addCard( new Miyako(0));
        BaseMod.addCard( new LunaGame());
        BaseMod.addCard( new AeneaFriendship());
        BaseMod.addCard( new FriendsForever());
        BaseMod.addCard( new SonataOfSilence());
        BaseMod.addCard( new SoulTaker());
        BaseMod.addCard( new OneTailFox());
        BaseMod.addCard( new Ginsetsu());
        BaseMod.addCard( new Ferry());
        BaseMod.addCard( new StormArrow());
        BaseMod.addCard( new GaleArrow());
        BaseMod.addCard( new ArisaArrow());
        BaseMod.addCard( new Arisa());
        BaseMod.addCard( new NecroTemptation());
        BaseMod.addCard( new LunaDoll());
        BaseMod.addCard( new Luna());
        BaseMod.addCard( new UnionMagic());
        BaseMod.addCard( new UltimateMagic());
        BaseMod.addCard( new FireBall());
        BaseMod.addCard( new Isabelle());
        BaseMod.addCard( new Strike_V());
        BaseMod.addCard( new Defend_V());
        BaseMod.addCard( new DarkGeneral());
        BaseMod.addCard( new RazoryClaw());
        BaseMod.addCard( new ForestBat());
        BaseMod.addCard( new BloodPact());
        BaseMod.addCard( new BloodGarden());
        BaseMod.addCard( new BloodWolf());
        BaseMod.addCard( new SpiderWebImp());
        BaseMod.addCard( new AntelopeWarrior());
        BaseMod.addCard( new HellSpearWarrior());
        BaseMod.addCard( new MoonriseWerewolf());
        BaseMod.addCard( new BloodtrothEpitaph());
        BaseMod.addCard( new Revelation());
        BaseMod.addCard( new UriasRevelry());
        BaseMod.addCard( new MonoResolve());
        BaseMod.addCard( new GarnetWaltz());
        BaseMod.addCard( new Shemyaza());
        BaseMod.addCard( new DarkfeastBat());
        BaseMod.addCard( new Belphegor());
        BaseMod.addCard( new SexyVampire());
        BaseMod.addCard( new ApostleOfLust());
        BaseMod.addCard( new DiabolicDrain());
        BaseMod.addCard( new Baal());
        BaseMod.addCard( new Ravening());
        BaseMod.addCard( new LunaticMana());
        BaseMod.addCard( new SadisticDemon());
        BaseMod.addCard( new BearBerserk());
        BaseMod.addCard( new FloodBehemoth());
        BaseMod.addCard( new BeastEmpress());
        BaseMod.addCard( new CorruptedBat());
        BaseMod.addCard( new WingsOfLust());
        BaseMod.addCard( new DemonicAssault());
        BaseMod.addCard( new Emeralda());
        BaseMod.addCard( new Azazel());
        BaseMod.addCard( new Yurius());
        BaseMod.addCard( new UnleashTheNightmare());
        BaseMod.addCard( new MechashotDevil());
        BaseMod.addCard( new ArmoredBat());
        BaseMod.addCard( new MechaforgeDevil());
        BaseMod.addCard( new FirstOne());
        BaseMod.addCard( new Mono());
        BaseMod.addCard( new Mono_Unlock());
        BaseMod.addCard( new Slayn());
        BaseMod.addCard( new Neun());
        BaseMod.addCard( new CreepingMadness());
        BaseMod.addCard( new Cradle());
        BaseMod.addCard( new RuinwebSpider());
        BaseMod.addCard( new BloodArts());
        BaseMod.addCard( new Aluzard());
        BaseMod.addCard( new SummoningBloodkin());
        BaseMod.addCard( new RageCommander());
        BaseMod.addCard( new Relinquish());
        BaseMod.addCard( new Flauros());
        BaseMod.addCard( new DevilOfVengeance());
        BaseMod.addCard( new OmenOfLust());
        BaseMod.addCard( new ServantOfLust());
        BaseMod.addCard( new DevilSheep());
        BaseMod.addCard( new TheBerserker());
        BaseMod.addCard( new PrisonOfPain());
        BaseMod.addCard( new Lilim());
        BaseMod.addCard( new ChaosShip());
        BaseMod.addCard( new NightFall());
        BaseMod.addCard( new MadnessRevealed());
        BaseMod.addCard( new RestlessParish());
        BaseMod.addCard( new TerrorNight());
        BaseMod.addCard( new NightmareTime());
        BaseMod.addCard( new BloodyNail());
        BaseMod.addCard( new DreadAura());
        BaseMod.addCard( new Urias());
        BaseMod.addCard( new Jormungand());
        BaseMod.addCard( new OldBloodKing());
        BaseMod.addCard( new NightHorde());
        BaseMod.addCard( new Veight());
        BaseMod.addCard( new Vanpi());
        BaseMod.addCard( new Vanpi1());
        BaseMod.addCard( new Vanpi2());
        BaseMod.addCard( new Volteo());
        BaseMod.addCard( new ShowdownDemon());
        BaseMod.addCard( new BatNoise());
        BaseMod.addCard( new ShadowDevil());
        BaseMod.addCard( new MaskedMayhem());
        BaseMod.addCard( new Ayre());
        BaseMod.addCard( new Lucius());
        BaseMod.addCard( new SilverboltHail());
        BaseMod.addCard( new ArkDaemon());
        BaseMod.addCard( new Archdemon());
        BaseMod.addCard( new NightVampire());
        BaseMod.addCard( new Executioner());
        BaseMod.addCard( new BelphometCard());
        BaseMod.addCard( new ArmoredTentacle());
        BaseMod.addCard( new AssaultTentacle());
        BaseMod.addCard( new TisiphoneCard());
        BaseMod.addCard( new MegaeraCard());
        BaseMod.addCard( new AlectorCard());
        BaseMod.addCard( new NeoTisiphone());
        BaseMod.addCard( new NeoMegaera());
        BaseMod.addCard( new NeoAlector());
        BaseMod.addCard( new ProphecyOfDoom());
        BaseMod.addCard( new ProphecyOfBoons());
        BaseMod.addCard( new LadicaEmbrace());
        BaseMod.addCard( new EternalPotion());
        BaseMod.addCard( new InstantPotion());
        BaseMod.addCard( new ImmoralDesire());
        BaseMod.addCard( new Kyouka(0));
        BaseMod.addCard( new Irya(0));
        BaseMod.addCard( new Strike_Nm());
        BaseMod.addCard( new Defend_Nm());
        BaseMod.addCard( new DimensionCut());
        BaseMod.addCard( new AnalyzeArtifact());
        BaseMod.addCard( new AncientArtifact());
        BaseMod.addCard( new MysticArtifact());
        BaseMod.addCard( new RadiantArtifact());
        BaseMod.addCard( new PrimeArtifact());
        BaseMod.addCard( new ProtectArtifact());
        BaseMod.addCard( new EdgeArtifact());
        BaseMod.addCard( new BlitzArtifact());
        BaseMod.addCard( new TraceArtifact());
        BaseMod.addCard( new SpineArtifact());
        BaseMod.addCard( new StrikeFormGolem());
        BaseMod.addCard( new GuardFormGolem());
        BaseMod.addCard( new Puppet());
        BaseMod.addCard( new MagisteelLion());
        BaseMod.addCard( new Acceleratium());
        BaseMod.addCard( new AugmentationBestowal());
        BaseMod.addCard( new ParadigmShift());
        BaseMod.addCard( new Automation());
        BaseMod.addCard( new Synchronization());
        BaseMod.addCard( new ArtifactScan());
        BaseMod.addCard( new Biofabrication());
        BaseMod.addCard( new Icarus());
        BaseMod.addCard( new RoboticUser());
        BaseMod.addCard( new ArtifactCall());
        BaseMod.addCard( new NilpotentEntity());
        BaseMod.addCard( new DeusExMachina());
        BaseMod.addCard( new NewOrder());
        BaseMod.addCard( new Tolerance());
        BaseMod.addCard( new Enforcer());
        BaseMod.addCard( new MegaEnforcer());
        BaseMod.addCard( new Invasion());
        BaseMod.addCard( new Armadillo());
        BaseMod.addCard( new AerialCraft());
        BaseMod.addCard( new LasershellTortoise());
        BaseMod.addCard( new Bearminator());
        BaseMod.addCard( new Prototype());
        BaseMod.addCard( new MagnaGiant());
        BaseMod.addCard( new MagnaZero());
        BaseMod.addCard( new Yuwan());
        BaseMod.addCard( new Paracelsus());
        BaseMod.addCard( new Windup());
        BaseMod.addCard( new PuppeteerStrings());
        BaseMod.addCard( new InfinityPuppeteer());
        BaseMod.addCard( new WhiteArtifact());
        BaseMod.addCard( new BlackArtifact());
        BaseMod.addCard( new OmenOfDestruction());
        BaseMod.addCard( new Licht());
        BaseMod.addCard( new PuppetRoom());
        BaseMod.addCard( new Roid());
        BaseMod.addCard( new Victoria());
        BaseMod.addCard( new HeartlessBattle());
        BaseMod.addCard( new IronStaffMechanic());
        BaseMod.addCard( new YuwanFury());
        BaseMod.addCard( new BelphometCrackdown());
        BaseMod.addCard( new RebelAgainstFate());
        BaseMod.addCard( new PurgationBlade());
        BaseMod.addCard( new Maisha());
        BaseMod.addCard( new Metaproduction());
        BaseMod.addCard( new DeviceTuner());
        BaseMod.addCard( new ApostleOfDestruction());
        BaseMod.addCard( new DiscipleOfDestruction());
        BaseMod.addCard( new StringMaster());
        BaseMod.addCard( new DominateFortress());
        BaseMod.addCard( new KnowerOfHistory());
        BaseMod.addCard( new GadgetUser());
        BaseMod.addCard( new Karula());
        BaseMod.addCard( new CurseOfPurgation());
        BaseMod.addCard( new Uno());
        BaseMod.addCard( new Due());
        BaseMod.addCard( new Tre());
        BaseMod.addCard( new Orchid1());
        BaseMod.addCard( new Orchid2());
        BaseMod.addCard( new Orchid());
        BaseMod.addCard( new MagiTrainCard());
        BaseMod.addCard( new ICCard());
        BaseMod.addCard( new DeathPenalty());
        BaseMod.addCard( new UnnamedDetermination());
        BaseMod.addCard( new Noa());
        BaseMod.addCard( new MindDivider());
        BaseMod.addCard( new Ines());
        BaseMod.addCard( new DollsOwner());
        BaseMod.addCard( new DestructionRefrain());
        BaseMod.addCard( new Modest());
        BaseMod.addCard( new Ralmia());
        BaseMod.addCard( new Concentrate());
        BaseMod.addCard( new TechnologyMana());
        BaseMod.addCard( new OmniscientKaiser());
        BaseMod.addCard( new Spine());
        BaseMod.addCard( new Miriam());
        BaseMod.addCard( new CannonHermitCrab());
        BaseMod.addCard( new MultiarmedArtifact());
        BaseMod.addCard( new ArtifactImpulse());
        BaseMod.addCard( new ServantOfDarkness());
        BaseMod.addCard( new GenesisArtifact());
        BaseMod.addCard( new GuardArtifact());
        BaseMod.addCard( new DefectArtifact());
        BaseMod.addCard( new CannonArtifact());
        BaseMod.addCard( new Zwei());
        BaseMod.addCard( new Illganeau());
        BaseMod.addCard( new VoidRealize());
        BaseMod.addCard( new Wretches());
        BaseMod.addCard( new BrandOfMorningStar());
        BaseMod.addCard( new ShadowSoldier());
        BaseMod.addCard( new ShadowCommander());
        BaseMod.addCard( new TheWheelOfFortune());
        BaseMod.addCard( new Scavenge());
        BaseMod.addCard( new EnhancedPuppet());
        BaseMod.addCard( new RevisedExperiment());
        BaseMod.addCard( new Sleipnir());
        BaseMod.addCard( new Odin());
        BaseMod.addCard( new KMRGaze());
        BaseMod.addCard( new WUP());
        BaseMod.addCard( new Altersphere());
        BaseMod.addCard( new Death());
        BaseMod.addCard( new Betray());
        BaseMod.addCard( new Rowen());
        BaseMod.addCard( new CurseOfTheBlackDragon());
        BaseMod.addCard( new ShadowversePain());
        BaseMod.addCard( new ShadowBahmut());
        BaseMod.addCard( new KMRsPresent());
        BaseMod.addCard( new SevensForceSorcerer());
        BaseMod.addCard( new ShiningValkyrie());
        BaseMod.addCard( new LegendSwordCommander());
        BaseMod.addCard( new DeadSoulTaker());
        BaseMod.addCard( new AbyssDoomLord());
        BaseMod.addCard( new Defend_R());
        BaseMod.addCard( new Strike_R());
        BaseMod.addCard( new OathlessKnight());
        BaseMod.addCard( new GildedBlade());
        BaseMod.addCard( new GildedGoblet());
        BaseMod.addCard( new GildedNecklace());
        BaseMod.addCard( new GildedBoots());
        BaseMod.addCard( new GrandAcquisition());
        BaseMod.addCard( new SageCommander());
        BaseMod.addCard( new DanceOfUsurpation());
        BaseMod.addCard( new UsurpingSpineblade());
        BaseMod.addCard( new WeeMerchantsAppraisal());
        BaseMod.addCard( new DiscipleOfUsurpation());
        BaseMod.addCard( new ApostleOfUsurpation());
        BaseMod.addCard( new Octrice());
        BaseMod.addCard( new DramaticRetreat());
        BaseMod.addCard( new ShieldPhalanx());
        BaseMod.addCard( new WhitePaladin());
        BaseMod.addCard( new TemperedMana());
        BaseMod.addCard( new Mars());
        BaseMod.addCard( new MistolinaBayleon());
        BaseMod.addCard( new Sera());
        BaseMod.addCard( new FrenziedCorpsmaster());
        BaseMod.addCard( new CatAdmiral());
        BaseMod.addCard( new FortressStrategist());
        BaseMod.addCard( new EvolutionPoint());
        BaseMod.addCard( new EnragedGeneral());
        BaseMod.addCard( new LuminousMage());
        BaseMod.addCard( new PrudentGeneral());
        BaseMod.addCard( new DualbladeKnight());
        BaseMod.addCard( new StrikeproneGuardian());
        BaseMod.addCard( new MonochromeEndgame());
        BaseMod.addCard( new QueenHemera_Card());
        BaseMod.addCard( new QueenMagnus_Card());
        BaseMod.addCard( new FlyingMessengerSquirrel());
        BaseMod.addCard( new PompousSummons());
        BaseMod.addCard( new BrothersUnited());
        BaseMod.addCard( new HonorableThief());
        BaseMod.addCard( new FloralFencer());
        BaseMod.addCard( new SunnyDayEncounter());
        BaseMod.addCard( new WarriorWing());
        BaseMod.addCard( new Alyaska());
        BaseMod.addCard( new ExterminusWeapon());
        BaseMod.addCard( new RadicalGunslinger());
        BaseMod.addCard( new Mirin());
        BaseMod.addCard( new Seofon());
        BaseMod.addCard( new Eahta());
        BaseMod.addCard( new StrokeOfConviction());
        BaseMod.addCard( new ErikasSleight());
        BaseMod.addCard( new MistolinasSwordplay());
        BaseMod.addCard( new BayleonsCommand());
        BaseMod.addCard( new FrontlineInstructor());
        BaseMod.addCard( new RoyalBanner());
        BaseMod.addCard( new LuxbladeArriet());
        BaseMod.addCard( new EmpressOfSerenity());
        BaseMod.addCard( new Charlotta());
        BaseMod.addCard( new Latham());
        BaseMod.addCard( new Alwida());
        BaseMod.addCard( new Patrick());
        BaseMod.addCard( new Johann());
        BaseMod.addCard( new Grayson());
        BaseMod.addCard( new Albert());
        BaseMod.addCard( new LevinScholar());
        BaseMod.addCard( new GloriousCore());
        BaseMod.addCard( new LevinBeastmaster());
        BaseMod.addCard( new WhiteTiger());
        BaseMod.addCard( new Jeno());
        BaseMod.addCard( new LevinArcher());
        BaseMod.addCard( new Lounes());
        BaseMod.addCard( new Cybercannoneer());
        BaseMod.addCard( new StampedingFortress());
        BaseMod.addCard( new MeetTheLevinSisters());
        BaseMod.addCard( new Mina());
        BaseMod.addCard( new Mona());
        BaseMod.addCard( new Mena());
        BaseMod.addCard( new Nahtnaught());
        BaseMod.addCard( new TyrantsOrder());
        BaseMod.addCard( new Leonidas());
        BaseMod.addCard( new LevinJustice());
        BaseMod.addCard( new YuriusLevinDuke());
        BaseMod.addCard( new CaptainWalfrid());
        BaseMod.addCard( new Reinhardt());
        BaseMod.addCard( new Garven());
        BaseMod.addCard( new Kagemitsu());
        BaseMod.addCard( new Alexander());
        BaseMod.addCard( new MirrorImage());
        BaseMod.addCard( new Valse());
        BaseMod.addCard( new HolyPurebomb());
        BaseMod.addCard( new FatalSpellbomb());
        BaseMod.addCard( new Ernesta());
        BaseMod.addCard( new DreadHound());
        BaseMod.addCard( new Ilmisuna());
        BaseMod.addCard( new MasterDealer());
        BaseMod.addCard( new EleganceInAction());
        BaseMod.addCard( new Strike_B());
        BaseMod.addCard( new Defend_B());
        BaseMod.addCard( new BlackenedScripture());
        BaseMod.addCard( new PriestOfTheCudgel());
        BaseMod.addCard( new SacredPlea());
        BaseMod.addCard( new HallowedDogma());
        BaseMod.addCard( new ImaginationRealized());
        BaseMod.addCard( new GuildAssembly());
        BaseMod.addCard( new MysterianWisdom());
        BaseMod.addCard( new DuskshadeBat());
        BaseMod.addCard( new Cernunnos());
        BaseMod.addCard( new MiracleHarvest());
        BaseMod.addCard( new HolyFlameTiger());
        BaseMod.addCard( new HolyFalcon());
        BaseMod.addCard( new BeastCallAria());
        BaseMod.addCard( new MoriaeEncomium());
        BaseMod.addCard( new ThemisDecree());
        BaseMod.addCard( new JusticeMana());
        BaseMod.addCard( new HolyEnchanter());
        BaseMod.addCard( new PunishmentSniper());
        BaseMod.addCard( new SeraphLapis());
        BaseMod.addCard( new RenascentSeraph());
        BaseMod.addCard( new AwakenedSeraph());
        BaseMod.addCard( new EnstatuedSeraph());
        BaseMod.addCard( new Ra());
        BaseMod.addCard( new OmenOfRepose());
        BaseMod.addCard( new Agnes());
        BaseMod.addCard( new HolywingDragon());
        BaseMod.addCard( new WhitefangTemple());
        BaseMod.addCard( new ElanaPrayer());
        BaseMod.addCard( new Elana());
        BaseMod.addCard( new IronknuckleNun());
        BaseMod.addCard( new RadiantAngel());
        BaseMod.addCard( new GodLovingSmite());
        BaseMod.addCard( new HallowedCave());
        BaseMod.addCard( new HolyHector());
        BaseMod.addCard( new AcolyteLight());
        BaseMod.addCard( new TempleOfHeresy());
        BaseMod.addCard( new Abdiel());
        BaseMod.addCard( new RegalFalcon());
        BaseMod.addCard( new DivineBirdSong());
        BaseMod.addCard( new Wilbert());
        BaseMod.addCard( new Indulgence());
        BaseMod.addCard( new Anvelt());
        BaseMod.addCard( new EvilWorship());
        BaseMod.addCard( new DirtyPriest());
        BaseMod.addCard( new Tenko());
        BaseMod.addCard( new PegasusSculpture());
        BaseMod.addCard( new BenevolentBlight());
        BaseMod.addCard( new RobowingPrecant());
        BaseMod.addCard( new HeavenlyKnight());
        BaseMod.addCard( new SummitTemple());
        BaseMod.addCard( new Charaton());
        BaseMod.addCard( new TarnishedGrail());
        BaseMod.addCard( new SkullFane());
        BaseMod.addCard( new Tribunal());
        BaseMod.addCard( new HealingPrayer());
        BaseMod.addCard( new HereticPriest());
        BaseMod.addCard( new DarkOffering());
        BaseMod.addCard( new UnlikelyFellowship());
        BaseMod.addCard( new HeavenFire());
        BaseMod.addCard( new Selena());
        BaseMod.addCard( new GoldenCity());
        BaseMod.addCard( new RobowhipReverend());
        BaseMod.addCard( new HeavenlyAegis());
        BaseMod.addCard( new SalvationLimonia());
        BaseMod.addCard( new Limonia());
        BaseMod.addCard( new Vice());
        BaseMod.addCard( new KLT());
        BaseMod.addCard( new TheUntrueGod());
        BaseMod.addCard( new AngelRat());
        BaseMod.addCard( new MarkUnleashed());
        BaseMod.addCard( new MarkOfBalance());
        BaseMod.addCard( new Marlone());
        BaseMod.addCard( new HolyShieldLion());
        BaseMod.addCard( new HolyPlateLion());
        BaseMod.addCard( new HolyKingLion());
        BaseMod.addCard( new LionCrystal());
        BaseMod.addCard( new LionTemple());
        BaseMod.addCard( new PeaceWeaver());
        BaseMod.addCard( new PrismSwing());
        BaseMod.addCard( new SalvationLion());
        BaseMod.addCard( new Munyaru());
        BaseMod.addCard( new SneakAttack());
        BaseMod.addCard( new ErisPrayer());
        BaseMod.addCard( new MunyaruRaid());
        BaseMod.addCard( new MajorPrayers());
        BaseMod.addCard( new RealmOfRepose());
        BaseMod.addCard( new Jatelant());
        BaseMod.addCard( new SomnolentStrength());
        BaseMod.addCard( new TheStrength());
        BaseMod.addCard( new QueenOfHope());
        BaseMod.addCard( new SacredCounter());
        BaseMod.addCard( new Muse());
        BaseMod.addCard( new MusePrincess());
        BaseMod.addCard( new PrimalShipwright());
        BaseMod.addCard( new Garuda());
        BaseMod.addCard( new Jeanne());
        BaseMod.addCard( new RelicSphere());
        BaseMod.addCard( new RelicPrism());
        BaseMod.addCard( new RelicTorus());
        BaseMod.addCard( new RelicPlaton());
        BaseMod.addCard( new RelicGod());
        BaseMod.addCard( new Eris());
        BaseMod.addCard( new Saren(0));
        BaseMod.addCard( new Lorena());
        BaseMod.addCard( new LorenaPunch());
        BaseMod.addCard( new LorenaWater());
        BaseMod.addCard( new ImperialSaint());
        BaseMod.addCard( new Valdain());
        BaseMod.addCard( new Sukuna());
        BaseMod.addCard( new TerrorFormer());
        BaseMod.addCard( new Assassin());
        BaseMod.addCard( new Leod());
        BaseMod.addCard( new VeiledReckoning());
        BaseMod.addCard( new Dualblade());
        BaseMod.addCard( new AmbushBuff());
        BaseMod.addCard( new ShinobiTanuki());
        BaseMod.addCard( new Tsubaki());
        BaseMod.addCard( new ShieldOfFlame());
        BaseMod.addCard( new BladeDance());
        BaseMod.addCard( new ShadowedMemories());
        BaseMod.addCard( new NobleShikigami());
        BaseMod.addCard( new HarvestSeason());
        BaseMod.addCard( new RejuvenatingResurrection());
        BaseMod.addCard( new MasterCook());
        BaseMod.addCard( new OmnifacedArchdemon());
        BaseMod.addCard( new EvilEyeDemon());
        BaseMod.addCard( new PhantomBloomPredator());
        BaseMod.addCard( new WonderTree());
        BaseMod.addCard( new Alberta());
        BaseMod.addCard( new Shiro());
        BaseMod.addCard( new TheChariot());
        BaseMod.addCard( new TheChariot_I());
        BaseMod.addCard( new CorruptionOfUnkilling());
        BaseMod.addCard( new UltimateHollow());
        BaseMod.addCard( new LoathingDesire());
        BaseMod.addCard( new ReturningMelody());
        BaseMod.addCard( new EternalDispair());
        BaseMod.addCard( new UnleashTruth());
        BaseMod.addCard( new ResentfulScreaming());
        BaseMod.addCard( new RearriveOne());
        BaseMod.addCard( new EvidenceOfOne());
        BaseMod.addCard( new BlackArtifact2());
        BaseMod.addCard( new WhiteArtifact2());
        BaseMod.addCard( new SoloOfMelody());
        BaseMod.addCard( new FlowOfDispair());
        BaseMod.addCard( new ShootOfUnkilling());
        BaseMod.addCard( new LightOfHollow());
        BaseMod.addCard( new PerjuryOfTruth());
        BaseMod.addCard( new WingsOfDesire());
        BaseMod.addCard( new ExpandingScreaming());
        BaseMod.addCard( new RavenousSweetness());
        BaseMod.addCard( new OmenOfCraving());
        BaseMod.addCard( new BirthOfRavenous());
        BaseMod.addCard( new AdherentOfDesire());
        BaseMod.addCard( new AdherentOfScream());
        BaseMod.addCard( new AdherentOfElimination());
        BaseMod.addCard( new AdherentOfMelody());
        BaseMod.addCard( new AdherentOfHollow());
        BaseMod.addCard( new AdherentOfDispair());
        BaseMod.addCard( new AdherentOfAnnihilation());
        BaseMod.addCard( new Erika());
        BaseMod.addCard( new SecretSkill());
        BaseMod.addCard( new PixieMischief());
        BaseMod.addCard( new OtherworldGatekeeper());
        BaseMod.addCard( new PrinceCatacomb());
        BaseMod.addCard( new WickedRebirth());
        BaseMod.addCard( new V());
        BaseMod.addCard( new DesperadosShot());
        BaseMod.addCard( new Spector());
        BaseMod.addCard( new HonoredFrontguardGeneral());
        BaseMod.addCard( new Aramis());
        BaseMod.addCard( new Porthos());
        BaseMod.addCard( new Athos());
        BaseMod.addCard( new DArtagnan());
        BaseMod.addCard( new MusketeersVow());
        BaseMod.addCard( new FlameNGlass2());
        BaseMod.addCard( new HeroOfTheHunt());
        BaseMod.addCard( new Taketsumi());
        BaseMod.addCard( new Anisage());
        BaseMod.addCard( new UndyingResolve());
        BaseMod.addCard( new SoulGuide());
        BaseMod.addCard( new Krampus());
        BaseMod.addCard( new Itsurugi());
        BaseMod.addCard( new WolflingStruggle());
        BaseMod.addCard( new Yukishima());
        BaseMod.addCard( new Hozumi());
        BaseMod.addCard( new MagnaSaber());
        BaseMod.addCard( new AllFeeling());
        BaseMod.addCard( new Paracelise());
        BaseMod.addCard( new ArcticChimera());
        BaseMod.addCard( new EternalContract());
        BaseMod.addCard( new Lifetime());
        BaseMod.addCard( new TriggerPuppeteer());
        BaseMod.addCard( new WhiteEagleBaptism());
        BaseMod.addCard( new Faker());
        BaseMod.addCard( new RoomServiceDevil());
        BaseMod.addCard( new JubilanceWitch());
        BaseMod.addCard( new AcidGolem());
        BaseMod.addCard( new LostSamurai());
        BaseMod.addCard( new Comfort());
        BaseMod.addCard( new InsatiableDesire());
        BaseMod.addCard( new UnselfishGrace());
        BaseMod.addCard( new TheTemperance());
        BaseMod.addCard( new MadnessCurse());
        BaseMod.addCard( new Arthur());
        BaseMod.addCard( new Tweyen());
        BaseMod.addCard( new CelestialArtifact());
        BaseMod.addCard( new BlessingsOfCreation());
        BaseMod.addCard( new WrathOfNature());
        BaseMod.addCard( new NatureBlessing());
        BaseMod.addCard( new Yggdrasil());
        BaseMod.addCard( new Rola());
        BaseMod.addCard( new Roid_EW());
        BaseMod.addCard( new DivineTreasureGuardian());
        BaseMod.addCard( new DivineTreasureHerald());
        BaseMod.addCard( new JudgmentSpear());
        BaseMod.addCard( new GuiltyShield());
        BaseMod.addCard( new EternalDogma());
        BaseMod.addCard( new SummonDivineTreasure());
        BaseMod.addCard( new Norn());
        BaseMod.addCard( new Rosa());
        BaseMod.addCard( new Cassim());
        BaseMod.addCard( new Craig());
        BaseMod.addCard( new Hanna());
        BaseMod.addCard( new Robopup());
        BaseMod.addCard( new WhirlwindAssault());
        BaseMod.addCard( new UltimateBahmut());
        BaseMod.addCard( new Vyrmedea());
        BaseMod.addCard( new Chastity());
        BaseMod.addCard( new Zerk());
        BaseMod.addCard( new ANewDiscovery());
        BaseMod.addCard( new MagicalPawn());
        BaseMod.addCard( new MagicalStrategy());
        BaseMod.addCard( new MagicalRook());
        BaseMod.addCard( new MagicalKnight());
        BaseMod.addCard( new MysticQueen());
        BaseMod.addCard( new MysticKing());
        BaseMod.addCard( new Ghost());
        BaseMod.addCard( new GiantGhost());
        BaseMod.addCard( new MasqueradeGhost());
        BaseMod.addCard( new Baccherus());
        BaseMod.addCard( new TrickDullahan());
        BaseMod.addCard( new Nobilis());
        BaseMod.addCard( new Slade());
        BaseMod.addCard( new MaliciousBlader());
        BaseMod.addCard( new Waltz());
        BaseMod.addCard( new FullMoonLeap());
        logger.info("Success");
    }

    public void receiveEditCharacters() {
        logger.info("Adding char");
        BaseMod.addCharacter(new Witchcraft("Witchcraft"), "img/character/Witchcraft/button1.png", "img/character/Witchcraft/background.png", Witchcraft.Enums.WITCHCRAFT);
        BaseMod.addCharacter(new Elf(("Elf")), "img/character/Elf/button.png", "img/character/Elf/background.png", Elf.Enums.Elf);
        BaseMod.addCharacter(new Necromancer(("Necromancer")), "img/character/Necromancer/button.png", "img/character/Necromancer/background.png", Necromancer.Enums.Necromancer);
        BaseMod.addCharacter(new Vampire(("Vamp")), "img/character/Vampire/button.png", "img/character/Vampire/background.png", Vampire.Enums.Vampire);
        BaseMod.addCharacter(new Nemesis(("Nemesis")), "img/character/Nemesis/button.png", "img/character/Nemesis/background.png", Nemesis.Enums.Nemesis);
        BaseMod.addCharacter(new Royal(("Royal")), "img/character/Royal/button.png", "img/character/Royal/background.png", Royal.Enums.Royal);
        BaseMod.addCharacter(new Bishop(("Bishop")), "img/character/Bishop/button.png", "img/character/Bishop/background.png", Bishop.Enums.Bishop);
    }

    public static void saveSettings() {
        try {
            SpireConfig config = new SpireConfig("Shadowverse", "settings", ShadowverseDefaults);
            for (int i = 0; i <= CharacterSelectScreenPatches.characters.length - 1; i++) {
                config.setInt(CardCrawlGame.saveSlot + "reskinCount" + i, (CharacterSelectScreenPatches.characters[i]).reskinCount);
            }
            config.save();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static void loadSettings() {
        try {
            SpireConfig config = new SpireConfig("Shadowverse", "settings", ShadowverseDefaults);
            config.load();
            for (int i = 0; i <= CharacterSelectScreenPatches.characters.length - 1; i++) {
                (CharacterSelectScreenPatches.characters[i]).reskinCount = config.getInt(CardCrawlGame.saveSlot + "reskinCount" + i);
                if ((CharacterSelectScreenPatches.characters[i]).reskinCount > (CharacterSelectScreenPatches.characters[i]).skins.length - 1)
                    (CharacterSelectScreenPatches.characters[i]).reskinCount = 0;
            }
        } catch (Exception e) {
            e.printStackTrace();
            clearSettings();
        }
    }

    public static void clearSettings() {
        saveSettings();
    }
}


package shadowverse;

import basemod.BaseMod;
import basemod.ReflectionHacks;
import basemod.helpers.RelicType;
import basemod.interfaces.*;
import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.graphics.Color;
import com.evacipated.cardcrawl.modthespire.Loader;
import com.evacipated.cardcrawl.modthespire.lib.SpireConfig;
import com.evacipated.cardcrawl.modthespire.lib.SpireInitializer;
import com.google.gson.Gson;
import com.megacrit.cardcrawl.audio.Sfx;
import com.megacrit.cardcrawl.audio.SoundMaster;
import com.megacrit.cardcrawl.cards.AbstractCard;
import com.megacrit.cardcrawl.core.CardCrawlGame;
import com.megacrit.cardcrawl.core.Settings;
import com.megacrit.cardcrawl.dungeons.*;
import com.megacrit.cardcrawl.helpers.CardHelper;
import com.megacrit.cardcrawl.localization.*;
import com.megacrit.cardcrawl.monsters.MonsterInfo;
import com.megacrit.cardcrawl.ui.panels.EnergyPanel;
import com.megacrit.cardcrawl.vfx.ThoughtBubble;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import shadowverse.cards.Bishop.Amulet1.*;
import shadowverse.cards.Bishop.Amulet2.*;
import shadowverse.cards.Bishop.Basic.BlackenedScripture;
import shadowverse.cards.Bishop.Basic.Defend_B;
import shadowverse.cards.Bishop.Basic.PriestOfTheCudgel;
import shadowverse.cards.Bishop.Basic.Strike_B;
import shadowverse.cards.Bishop.Default.*;
import shadowverse.cards.Bishop.Evil.*;
import shadowverse.cards.Bishop.MechLion.*;
import shadowverse.cards.Bishop.Recover1.*;
import shadowverse.cards.Bishop.Recover2.*;
import shadowverse.cards.Bishop.Ward.*;
import shadowverse.cards.Dragon.Armed.*;
import shadowverse.cards.Dragon.Basic.Defend_D;
import shadowverse.cards.Dragon.Basic.DragonOracle;
import shadowverse.cards.Dragon.Basic.DragonWarrior;
import shadowverse.cards.Dragon.Basic.Hiro;
import shadowverse.cards.Dragon.Basic.Strike_D;
import shadowverse.cards.Dragon.Buff.*;
import shadowverse.cards.Dragon.Default.*;
import shadowverse.cards.Dragon.Discard1.*;
import shadowverse.cards.Dragon.Discard2.*;
import shadowverse.cards.Dragon.Natura.*;
import shadowverse.cards.Dragon.Ramp.*;
import shadowverse.cards.Dragon.Tempo.*;
import shadowverse.cards.Elf.Basic.Defend_E;
import shadowverse.cards.Elf.Basic.FairyWhisperer;
import shadowverse.cards.Elf.Basic.Strike_E;
import shadowverse.cards.Elf.Basic.SylvanJustice;
import shadowverse.cards.Elf.Default.*;
import shadowverse.cards.Elf.Fairy.*;
import shadowverse.cards.Elf.Left.*;
import shadowverse.cards.Elf.Long.*;
import shadowverse.cards.Elf.NatMech.*;
import shadowverse.cards.Elf.Return.*;
import shadowverse.cards.Elf.Short.*;
import shadowverse.cards.Elf.Wood.*;
import shadowverse.cards.Necromancer.Basic.Defend_N;
import shadowverse.cards.Necromancer.Basic.SpartoiSergent;
import shadowverse.cards.Necromancer.Basic.Strike_N;
import shadowverse.cards.Necromancer.Basic.UndyingResentment;
import shadowverse.cards.Necromancer.Burial.*;
import shadowverse.cards.Necromancer.Default.*;
import shadowverse.cards.Necromancer.Ghosts.*;
import shadowverse.cards.Necromancer.LastWords.*;
import shadowverse.cards.Necromancer.Mech.*;
import shadowverse.cards.Necromancer.Natura.*;
import shadowverse.cards.Necromancer.Necromancy.*;
import shadowverse.cards.Necromancer.Shadows.*;
import shadowverse.cards.Nemesis.Artifact.*;
import shadowverse.cards.Nemesis.Basic.Defend_Nm;
import shadowverse.cards.Nemesis.Basic.DimensionCut;
import shadowverse.cards.Nemesis.Basic.MagisteelLion;
import shadowverse.cards.Nemesis.Basic.Strike_Nm;
import shadowverse.cards.Nemesis.Condemned.*;
import shadowverse.cards.Nemesis.Default.*;
import shadowverse.cards.Nemesis.Mech.*;
import shadowverse.cards.Nemesis.Pile.*;
import shadowverse.cards.Nemesis.Puppet.*;
import shadowverse.cards.Nemesis.Resonance.*;
import shadowverse.cards.Nemesis.Tokens.*;
import shadowverse.cards.Neutral.Curse.*;
import shadowverse.cards.Neutral.Neutral.*;
import shadowverse.cards.Neutral.Status.*;
import shadowverse.cards.Neutral.Temp.Mysteria;
import shadowverse.cards.Neutral.Temp.*;
import shadowverse.cards.Royal.Ambush.*;
import shadowverse.cards.Royal.Basic.Defend_R;
import shadowverse.cards.Royal.Basic.FloralFencer;
import shadowverse.cards.Royal.Basic.OathlessKnight;
import shadowverse.cards.Royal.Basic.Strike_R;
import shadowverse.cards.Royal.Default.*;
import shadowverse.cards.Royal.Evolve.*;
import shadowverse.cards.Royal.Festive.*;
import shadowverse.cards.Royal.Hero.*;
import shadowverse.cards.Royal.Levin.*;
import shadowverse.cards.Royal.Loot.*;
import shadowverse.cards.Royal.Minion.*;
import shadowverse.cards.Royal.NatMech.*;
import shadowverse.cards.Royal.Rally.*;
import shadowverse.cards.Vampire.Academic.*;
import shadowverse.cards.Vampire.Avarice.*;
import shadowverse.cards.Vampire.Basic.DarkGeneral;
import shadowverse.cards.Vampire.Basic.Defend_V;
import shadowverse.cards.Vampire.Basic.RazoryClaw;
import shadowverse.cards.Vampire.Basic.Strike_V;
import shadowverse.cards.Vampire.Bat.*;
import shadowverse.cards.Vampire.Default.*;
import shadowverse.cards.Vampire.Evolve.*;
import shadowverse.cards.Vampire.NatMech.*;
import shadowverse.cards.Vampire.Self.*;
import shadowverse.cards.Vampire.Vengeance.*;
import shadowverse.cards.Vampire.Wrath.*;
import shadowverse.cards.Witch.Academic.*;
import shadowverse.cards.Witch.Basic.Defend_W;
import shadowverse.cards.Witch.Basic.FieryEmbrace;
import shadowverse.cards.Witch.Basic.Insight;
import shadowverse.cards.Witch.Basic.Strike_W;
import shadowverse.cards.Witch.Chess.*;
import shadowverse.cards.Witch.Default.*;
import shadowverse.cards.Witch.Earth1.*;
import shadowverse.cards.Witch.Earth2.*;
import shadowverse.cards.Witch.Mech.*;
import shadowverse.cards.Witch.Natura.*;
import shadowverse.cards.Witch.Spellboost1.*;
import shadowverse.cards.Witch.Spellboost2.*;
import shadowverse.characters.*;
import shadowverse.events.*;
import shadowverse.helper.AugmentHelper;
import shadowverse.helper.ViewBanCardScreen;
import shadowverse.monsters.*;
import shadowverse.patch.CharacterSelectScreenPatches;
import shadowverse.potions.*;
import shadowverse.relics.Alice;
import shadowverse.relics.*;
import shadowverseCharbosses.bosses.KMR.KMR;

import java.nio.charset.StandardCharsets;
import java.util.HashMap;
import java.util.Map;
import java.util.Properties;

import static com.badlogic.gdx.graphics.Color.YELLOW;


@SpireInitializer
public class Shadowverse implements PostInitializeSubscriber, EditCardsSubscriber, EditStringsSubscriber, EditKeywordsSubscriber, EditCharactersSubscriber, EditRelicsSubscriber {
    public static final Color WITCH_BLUE = CardHelper.getColor(46, 71, 81);
    public static final Color ELF_GREEN = CardHelper.getColor(197, 220, 88);
    public static final Color NECRO_PURPLE = CardHelper.getColor(71, 26, 106);
    public static final Color VAMPIRE_SCARLET = CardHelper.getColor(107, 50, 55);
    public static final Color NEMESIS_SKY = CardHelper.getColor(18, 108, 146);
    public static final Color ROYAL_YELLOW = CardHelper.getColor(152, 156, 1);
    public static final Color BISHOP_WHITE = CardHelper.getColor(239, 236, 186);
    public static final Color DRAGON_BROWN = CardHelper.getColor(117, 72, 29);
    public static final Logger logger = LogManager.getLogger(Shadowverse.class.getName());
    public static Properties ShadowverseDefaults = new Properties();
    public static Map<String, String> tempmusic = new HashMap<>();

    public static boolean[] groupActive;

    public static ViewBanCardScreen banCardScreen;
    public static ViewBanCardScreen banCardGroupScreen;

    public static boolean Enhance(int EH) {
        boolean res = false;
        if (EnergyPanel.getCurrentEnergy() >= EH) {
            res = true;
        }
        return res;
    }


    public static boolean Accelerate(AbstractCard card) {
        boolean res = false;
        if (EnergyPanel.getCurrentEnergy() < card.cost) {
            res = true;
        }
        return res;
    }

    public static boolean canSpawnAmuletOrb() {
        if (AbstractDungeon.player.hasEmptyOrb() || (AbstractDungeon.player.masterMaxOrbs == 0 && AbstractDungeon.player.maxOrbs == 0))
            return true;
        UIStrings UI_STRINGS = CardCrawlGame.languagePack.getUIString("shadowverse:AmuletText");
        AbstractDungeon.effectList.add(new ThoughtBubble(AbstractDungeon.player.dialogX, AbstractDungeon.player.dialogY, 2.0F, UI_STRINGS.TEXT[0], true));
        return false;
    }

    public Shadowverse() {
        logger.info("Subscribing");
        BaseMod.subscribe((ISubscriber) this);
        BaseMod.addColor(Witchcraft.Enums.COLOR_BLUE, WITCH_BLUE, WITCH_BLUE, WITCH_BLUE, WITCH_BLUE, WITCH_BLUE, WITCH_BLUE, WITCH_BLUE, "img/512card/bg_attack_default_gray.png", "img/512card/bg_skill_default_gray.png", "img/512card/bg_power_default_gray.png", "img/512card/card_default_gray_orb.png", "img/1024card/bg_attack_default_gray.png", "img/1024card/bg_skill_default_gray.png", "img/1024card/bg_power_default_gray.png", "img/1024card/card_default_gray_orb.png", "img/512card/card_small_orb.png");
        BaseMod.addColor(Elf.Enums.COLOR_GREEN, ELF_GREEN, ELF_GREEN, ELF_GREEN, ELF_GREEN, ELF_GREEN, ELF_GREEN, ELF_GREEN, "img/512elf/bg_attack_default_gray.png", "img/512elf/bg_skill_default_gray.png", "img/512elf/bg_power_default_gray.png", "img/512elf/card_default_gray_orb.png", "img/1024elf/bg_attack_default_gray.png", "img/1024elf/bg_skill_default_gray.png", "img/1024elf/bg_power_default_gray.png", "img/1024elf/card_default_gray_orb.png", "img/512elf/card_small_orb.png");
        BaseMod.addColor(Necromancer.Enums.COLOR_PURPLE, NECRO_PURPLE, NECRO_PURPLE, NECRO_PURPLE, NECRO_PURPLE, NECRO_PURPLE, NECRO_PURPLE, NECRO_PURPLE, "img/512necro/bg_attack_default_gray.png", "img/512necro/bg_skill_default_gray.png", "img/512necro/bg_power_default_gray.png", "img/512necro/card_default_gray_orb.png", "img/1024necro/bg_attack_default_gray.png", "img/1024necro/bg_skill_default_gray.png", "img/1024necro/bg_power_default_gray.png", "img/1024necro/card_default_gray_orb.png", "img/512necro/card_small_orb.png");
        BaseMod.addColor(Vampire.Enums.COLOR_SCARLET, VAMPIRE_SCARLET, VAMPIRE_SCARLET, VAMPIRE_SCARLET, VAMPIRE_SCARLET, VAMPIRE_SCARLET, VAMPIRE_SCARLET, VAMPIRE_SCARLET, "img/512vamp/bg_attack_default_gray.png", "img/512vamp/bg_skill_default_gray.png", "img/512vamp/bg_power_default_gray.png", "img/512vamp/card_default_gray_orb.png", "img/1024vamp/bg_attack_default_gray.png", "img/1024vamp/bg_skill_default_gray.png", "img/1024vamp/bg_power_default_gray.png", "img/1024vamp/card_default_gray_orb.png", "img/512vamp/card_small_orb.png");
        BaseMod.addColor(Nemesis.Enums.COLOR_SKY, NEMESIS_SKY, NEMESIS_SKY, NEMESIS_SKY, NEMESIS_SKY, NEMESIS_SKY, NEMESIS_SKY, NEMESIS_SKY, "img/512nemesis/bg_attack_default_gray.png", "img/512nemesis/bg_skill_default_gray.png", "img/512nemesis/bg_power_default_gray.png", "img/512nemesis/card_default_gray_orb.png", "img/1024nemesis/bg_attack_default_gray.png", "img/1024nemesis/bg_skill_default_gray.png", "img/1024nemesis/bg_power_default_gray.png", "img/1024nemesis/card_default_gray_orb.png", "img/512nemesis/card_small_orb.png");
        BaseMod.addColor(Royal.Enums.COLOR_YELLOW, ROYAL_YELLOW, ROYAL_YELLOW, ROYAL_YELLOW, ROYAL_YELLOW, ROYAL_YELLOW, ROYAL_YELLOW, ROYAL_YELLOW, "img/512royal/bg_attack_default_gray.png", "img/512royal/bg_skill_default_gray.png", "img/512royal/bg_power_default_gray.png", "img/512royal/card_default_gray_orb.png", "img/1024royal/bg_attack_default_gray.png", "img/1024royal/bg_skill_default_gray.png", "img/1024royal/bg_power_default_gray.png", "img/1024royal/card_default_gray_orb.png", "img/512royal/card_small_orb.png");
        BaseMod.addColor(Bishop.Enums.COLOR_WHITE, BISHOP_WHITE, BISHOP_WHITE, BISHOP_WHITE, BISHOP_WHITE, BISHOP_WHITE, BISHOP_WHITE, BISHOP_WHITE, "img/512bishop/bg_attack_default_gray.png", "img/512bishop/bg_skill_default_gray.png", "img/512bishop/bg_power_default_gray.png", "img/512bishop/card_default_gray_orb.png", "img/1024bishop/bg_attack_default_gray.png", "img/1024bishop/bg_skill_default_gray.png", "img/1024bishop/bg_power_default_gray.png", "img/1024bishop/card_default_gray_orb.png", "img/512bishop/card_small_orb.png");
        BaseMod.addColor(Dragon.Enums.COLOR_BROWN, DRAGON_BROWN, DRAGON_BROWN, DRAGON_BROWN, DRAGON_BROWN, DRAGON_BROWN, DRAGON_BROWN, DRAGON_BROWN, "img/512dragon/bg_attack_default_gray.png", "img/512dragon/bg_skill_default_gray.png", "img/512dragon/bg_power_default_gray.png", "img/512dragon/card_default_gray_orb.png", "img/1024dragon/bg_attack_default_gray.png", "img/1024dragon/bg_skill_default_gray.png", "img/1024dragon/bg_power_default_gray.png", "img/1024dragon/card_default_gray_orb.png", "img/512dragon/card_small_orb.png");
        logger.info("Success subscribe");
    }

    public static void initialize() {
        logger.info("Initializing");
        Shadowverse shadowverse = new Shadowverse();
        logger.info("Initialization success");
    }

    private static String loadJson(String jsonPath) {
        return Gdx.files.internal(jsonPath).readString(String.valueOf(StandardCharsets.UTF_8));
    }

    public void receiveEditKeywords() {
        logger.info("Adding Keywords");
        String keywordsPath = "localization/keywords-" + Settings.language + ".json";
        Gson gson = new Gson();
        Keywords keywords = (Keywords) gson.fromJson(loadJson(keywordsPath), Keywords.class);
        Keyword[] var4 = keywords.keywords;
        int var5 = var4.length;
        for (int var6 = 0; var6 < var5; var6++) {
            Keyword key = var4[var6];
            logger.info("Loading keyword : " + key.NAMES[0]);
            BaseMod.addKeyword(key.NAMES, key.DESCRIPTION);
        }
        logger.info("Keywords setting finished.");
    }

    private HashMap<String, Sfx> getSoundsMap() {
        return (HashMap<String, Sfx>) ReflectionHacks.getPrivate(CardCrawlGame.sound, SoundMaster.class, "map");
    }

    public void receivePostInitialize() {
        loadSettings();
        BaseMod.addEvent(PinyaEvent.ID, PinyaEvent.class);
        BaseMod.addEvent(GemFortune.ID, GemFortune.class, TheCity.ID);
        BaseMod.addEvent(Crossover.ID, Crossover.class);
        BaseMod.addEvent(NaturalMachine.ID, NaturalMachine.class, Exordium.ID);
        BaseMod.addEvent(SellCard.ID, SellCard.class, TheCity.ID);
        BaseMod.addMonster(Belphomet.ID, Belphomet::new);
        BaseMod.addMonster(Iceschillendrig.ID, Iceschillendrig::new);
        BaseMod.addMonster(VincentBOSS.ID, VincentBOSS::new);
        BaseMod.addMonster(Lelouch.ID, () -> new Lelouch());
        BaseMod.addMonster(KMR.ID, KMR::new);
        BaseMod.addMonster(Naht.ID, Naht::new);
        BaseMod.addMonster(TaketsumiBOSS.ID, TaketsumiBOSS::new);
        BaseMod.addMonster(shadowverseCharbosses.bosses.Urias.Urias.ID, shadowverseCharbosses.bosses.Urias.Urias::new);
        BaseMod.addEvent(LelouchCollaboration.ID, LelouchCollaboration.class, TheBeyond.ID);
        BaseMod.addBoss(TheEnding.ID, KMR.ID, "img/monsters/UI/KMR.png", "img/monsters/UI/KMR_Outline.png");
        BaseMod.addBoss(TheEnding.ID, KMR.ID, "img/monsters/UI/KMR.png", "img/monsters/UI/KMR_Outline.png");
        BaseMod.addBoss(TheEnding.ID, KMR.ID, "img/monsters/UI/KMR.png", "img/monsters/UI/KMR_Outline.png");
        BaseMod.addBoss(TheBeyond.ID, Iceschillendrig.ID, "img/monsters/UI/IC.png", "img/monsters/UI/IC_Outline.png");
        BaseMod.addBoss(TheBeyond.ID, Belphomet.ID, "img/monsters/UI/Belphomet.png", "img/monsters/UI/Belphomet_Outline.png");
        BaseMod.addBoss(TheBeyond.ID, VincentBOSS.ID, "img/monsters/UI/VincentBOSS.png", "img/monsters/UI/VincentBOSS_Outline.png");
        BaseMod.addBoss(TheBeyond.ID, Naht.ID, "img/monsters/UI/Naht.png", "img/monsters/UI/Naht_Outline.png");
        BaseMod.addBoss(TheBeyond.ID, TaketsumiBOSS.ID, "img/monsters/UI/Taketsumi.png", "img/monsters/UI/Taketsumi_Outline.png");
        BaseMod.addBoss(TheCity.ID, shadowverseCharbosses.bosses.Urias.Urias.ID, "img/monsters/UI/Urias.png", "img/monsters/UI/Urias_Outline.png");
        BaseMod.addMonster(Megaera.ID, () -> new Megaera());
        BaseMod.addEliteEncounter(TheBeyond.ID, new MonsterInfo(Megaera.ID, 1.5F));
        BaseMod.addMonster(Tisiphone.ID, () -> new Tisiphone());
        BaseMod.addEliteEncounter(TheBeyond.ID, new MonsterInfo(Tisiphone.ID, 1.5F));
        BaseMod.addMonster(Alector.ID, () -> new Alector());
        BaseMod.addEliteEncounter(TheBeyond.ID, new MonsterInfo(Alector.ID, 1.5F));
        BaseMod.addPotion(SatanPotion.class, Color.CYAN, Color.RED, Color.BLACK, SatanPotion.POTION_ID);
        BaseMod.addPotion(ElfPotion.class, Color.GREEN, Color.LIME, Color.GOLD, ElfPotion.POTION_ID, Elf.Enums.Elf);
        BaseMod.addPotion(BoostPotion.class, Color.BLUE, Color.SKY, Color.SKY, BoostPotion.POTION_ID, Witchcraft.Enums.WITCHCRAFT);
        BaseMod.addPotion(EarthPotion.class, Color.MAROON, Color.BROWN, Color.BROWN, EarthPotion.POTION_ID, Witchcraft.Enums.WITCHCRAFT);
        BaseMod.addPotion(KeepPotion.class, Color.PURPLE, Color.VIOLET, Color.VIOLET, KeepPotion.POTION_ID, Witchcraft.Enums.WITCHCRAFT);
        BaseMod.addPotion(CemeteryPotion.class, Color.WHITE, Color.PURPLE, Color.PURPLE, CemeteryPotion.POTION_ID, Necromancer.Enums.Necromancer);
        BaseMod.addPotion(ReanimatePotion.class, Color.DARK_GRAY, Color.BLACK, Color.PURPLE, ReanimatePotion.POTION_ID, Necromancer.Enums.Necromancer);
        BaseMod.addPotion(RosePotion.class, Color.MAGENTA, Color.RED, Color.MAGENTA, RosePotion.POTION_ID, Elf.Enums.Elf);
        BaseMod.addPotion(NaterranPotion.class, Color.FOREST, Color.BROWN, Color.FOREST, NaterranPotion.POTION_ID);
        BaseMod.addPotion(BatPotion.class, Color.SCARLET, Color.BLACK, Color.SCARLET, BatPotion.POTION_ID, Vampire.Enums.Vampire);
        BaseMod.addPotion(EpitaphPotion.class, Color.SCARLET, Color.GOLDENROD, Color.SCARLET, EpitaphPotion.POTION_ID, Vampire.Enums.Vampire);
        BaseMod.addPotion(ArtifactPotion.class, Color.CYAN, Color.CLEAR, Color.CYAN, RosePotion.POTION_ID, Nemesis.Enums.Nemesis);
        BaseMod.addPotion(RevisedPotion.class, Color.BROWN, Color.BROWN, Color.BROWN, RevisedPotion.POTION_ID, Nemesis.Enums.Nemesis);
        BaseMod.addPotion(BuffPotion.class, Color.RED, Color.RED, YELLOW, BuffPotion.POTION_ID, Royal.Enums.Royal);
        BaseMod.addPotion(EvolutionPotion.class, Color.YELLOW, Color.YELLOW, null, EvolutionPotion.POTION_ID, Royal.Enums.Royal);
        BaseMod.addPotion(MinionPotion.class, Color.YELLOW, Color.WHITE, null, MinionPotion.POTION_ID, Royal.Enums.Royal);
        BaseMod.addPotion(ReduceCountDownPotion.class, Color.WHITE, Color.GOLD, Color.WHITE, ReduceCountDownPotion.POTION_ID, Bishop.Enums.Bishop);
        BaseMod.addPotion(IndulgencePotion.class, Color.DARK_GRAY, Color.FIREBRICK, null, IndulgencePotion.POTION_ID, Bishop.Enums.Bishop);
        BaseMod.addPotion(SacredHealingPotion.class, Color.WHITE, Color.GOLD, null, SacredHealingPotion.POTION_ID, Bishop.Enums.Bishop);
        BaseMod.addPotion(OverflowPotion.class,Color.BROWN,Color.ORANGE,Color.ORANGE,OverflowPotion.POTION_ID,Dragon.Enums.Dragon);
        BaseMod.addPotion(ArmedPotion.class, Color.GOLD, Color.ORANGE, null, ArmedPotion.POTION_ID, Dragon.Enums.Dragon);
        BaseMod.addPotion(BurnPotion.class, Color.RED, Color.FIREBRICK, Color.FIREBRICK, BurnPotion.POTION_ID, Dragon.Enums.Dragon);
        tempmusic.put("GrandBattle", "sounds/GrandBattle.mp3");
        tempmusic.put("Aiolon", "sounds/Aiolon.mp3");
        tempmusic.put("StormOverRivayle", "sounds/StormOverRivayle.mp3");
        tempmusic.put("IceschillendrigBgm", "sounds/IschellendrigBgm.mp3");
        tempmusic.put("UriasBgm", "sounds/UriasBgm.mp3");
        tempmusic.put("Ametsuchi", "sounds/Ametsuchi.mp3");
        HashMap<String, Sfx> reflectedMap = getSoundsMap();
        String voicePath = "sounds/";
        if (!Loader.isModLoaded("ShadowverseTheSpireEnglishVoicePack")) {
            reflectedMap.put("spell_boost", new Sfx(voicePath + "spell_boost2.wav"));
            reflectedMap.put("EarthEssence", new Sfx(voicePath + "EarthEssence.wav"));
            reflectedMap.put("witch_selected", new Sfx(voicePath + "witch_selected.wav"));
            reflectedMap.put("OmenOfTruth", new Sfx(voicePath + "OmenOfTruth.wav"));
            reflectedMap.put("DimensionalWitch", new Sfx(voicePath + "DimensionalWitch.wav"));
            reflectedMap.put("DimensionShift", new Sfx(voicePath + "DimensionShift.wav"));
            reflectedMap.put("ZealotOfTruth", new Sfx(voicePath + "ZealotOfTruth.wav"));
            reflectedMap.put("MysticSeeker", new Sfx(voicePath + "MysticSeeker.wav"));
            reflectedMap.put("EdictOfTruth", new Sfx(voicePath + "EdictOfTruth.wav"));
            reflectedMap.put("Lou", new Sfx(voicePath + "Lou.wav"));
            reflectedMap.put("TruthsAdjudication", new Sfx(voicePath + "TruthsAdjudication.wav"));
            reflectedMap.put("MasterMageLevi", new Sfx(voicePath + "MasterMageLevi.wav"));
            reflectedMap.put("PiousInstructor", new Sfx(voicePath + "PiousInstructor.wav"));
            reflectedMap.put("PiousInstructorPower", new Sfx(voicePath + "PiousInstructorPower.wav"));
            reflectedMap.put("Clarke", new Sfx(voicePath + "Clarke.wav"));
            reflectedMap.put("Clarke_Accelerate", new Sfx(voicePath + "Clarke_Accelerate.wav"));
            reflectedMap.put("Faust", new Sfx(voicePath + "Faust.wav"));
            reflectedMap.put("FaustPower", new Sfx(voicePath + "FaustPower.wav"));
            reflectedMap.put("Magisa", new Sfx(voicePath + "Magisa.wav"));
            reflectedMap.put("Chaos", new Sfx(voicePath + "Chaos.wav"));
            reflectedMap.put("Runie", new Sfx(voicePath + "Runie.wav"));
            reflectedMap.put("ForbiddenDarkMage", new Sfx(voicePath + "ForbiddenDarkMage.wav"));
            reflectedMap.put("DarkMagePower", new Sfx(voicePath + "DarkMagePower.wav"));
            reflectedMap.put("JetBroomWitch", new Sfx(voicePath + "JetBroomWitch.wav"));
            reflectedMap.put("TetrasMettle", new Sfx(voicePath + "TetrasMettle.wav"));
            reflectedMap.put("IsabellesConjuration", new Sfx(voicePath + "IsabellesConjuration.wav"));
            reflectedMap.put("SorceryInSolidarity", new Sfx(voicePath + "SorceryInSolidarity.wav"));
            reflectedMap.put("MechabookSorcerer", new Sfx(voicePath + "MechabookSorcerer.wav"));
            reflectedMap.put("SonicFour", new Sfx(voicePath + "SonicFour.wav"));
            reflectedMap.put("Tetra", new Sfx(voicePath + "Tetra.wav"));
            reflectedMap.put("MechastaffSorcerer", new Sfx(voicePath + "MechastaffSorcerer.wav"));
            reflectedMap.put("ArsMagna", new Sfx(voicePath + "ArsMagna.wav"));
            reflectedMap.put("Cagliostro1", new Sfx(voicePath + "Cagliostro1.wav"));
            reflectedMap.put("Cagliostro2", new Sfx(voicePath + "Cagliostro2.wav"));
            reflectedMap.put("Awakened", new Sfx(voicePath + "Awakened.wav"));
            reflectedMap.put("ErasmusPower", new Sfx(voicePath + "ErasmusPower.wav"));
            reflectedMap.put("Erasmus", new Sfx(voicePath + "Erasmus.wav"));
            reflectedMap.put("Oz", new Sfx(voicePath + "Oz.wav"));
            reflectedMap.put("OzPower", new Sfx(voicePath + "OzPower.wav"));
            reflectedMap.put("Geoelementist", new Sfx(voicePath + "Geoelementist.wav"));
            reflectedMap.put("Stormelementalist", new Sfx(voicePath + "Stormelementalist.wav"));
            reflectedMap.put("Pyromancer", new Sfx(voicePath + "Pyromancer.wav"));
            reflectedMap.put("Riley", new Sfx(voicePath + "Riley.wav"));
            reflectedMap.put("DualAngle", new Sfx(voicePath + "DualAngle.wav"));
            reflectedMap.put("Ghios", new Sfx(voicePath + "Ghios.wav"));
            reflectedMap.put("OmenOfOne", new Sfx(voicePath + "OmenOfOne.wav"));
            reflectedMap.put("Mysteria", new Sfx(voicePath + "Mysteria.wav"));
            reflectedMap.put("EarthFall", new Sfx(voicePath + "EarthFall.wav"));
            reflectedMap.put("InfernalSurge", new Sfx(voicePath + "InfernalSurge.wav"));
            reflectedMap.put("InfernalGaze", new Sfx(voicePath + "InfernalGaze.wav"));
            reflectedMap.put("HeavenFall", new Sfx(voicePath + "HeavenFall.wav"));
            reflectedMap.put("Flamelord", new Sfx(voicePath + "Flamelord.wav"));
            reflectedMap.put("ViciousCommander", new Sfx(voicePath + "ViciousCommander.wav"));
            reflectedMap.put("WrathfulIcefiend", new Sfx(voicePath + "WrathfulIcefiend.wav"));
            reflectedMap.put("HellBeast", new Sfx(voicePath + "HellBeast.wav"));
            reflectedMap.put("Satan", new Sfx(voicePath + "Satan.wav"));
            reflectedMap.put("Satan_Accelerate", new Sfx(voicePath + "Satan_Accelerate.wav"));
            reflectedMap.put("EmbodimentOfCocytus", new Sfx(voicePath + "EmbodimentOfCocytus.wav"));
            reflectedMap.put("Eleanor", new Sfx(voicePath + "Eleanor.wav"));
            reflectedMap.put("JudgmentWord", new Sfx(voicePath + "JudgmentWord.wav"));
            reflectedMap.put("Vincent", new Sfx(voicePath + "Vincent.wav"));
            reflectedMap.put("GrimoireSorcerer", new Sfx(voicePath + "GrimoireSorcerer.wav"));
            reflectedMap.put("Aeroelementalist", new Sfx(voicePath + "Aeroelementalist.wav"));
            reflectedMap.put("Zeus", new Sfx(voicePath + "Zeus.wav"));
            reflectedMap.put("StarBright", new Sfx(voicePath + "StarBright.wav"));
            reflectedMap.put("TheWorld", new Sfx(voicePath + "TheWorld.wav"));
            reflectedMap.put("TheWorld_I", new Sfx(voicePath + "TheWorld_I.wav"));
            reflectedMap.put("Grimnir", new Sfx(voicePath + "Grimnir.wav"));
            reflectedMap.put("SlashOfOne", new Sfx(voicePath + "SlashOfOne.wav"));
            reflectedMap.put("SilentRider", new Sfx(voicePath + "SilentRider.wav"));
            reflectedMap.put("Servant", new Sfx(voicePath + "Servant.wav"));
            reflectedMap.put("OldSatan", new Sfx(voicePath + "OldSatan.wav"));
            reflectedMap.put("BellAngle", new Sfx(voicePath + "BellAngle.wav"));
            reflectedMap.put("Ignorant", new Sfx(voicePath + "Ignorant.wav"));
            reflectedMap.put("Omniscient", new Sfx(voicePath + "Omniscient.wav"));
            reflectedMap.put("TheFool", new Sfx(voicePath + "TheFool.wav"));
            reflectedMap.put("Mother", new Sfx(voicePath + "Mother.wav"));
            reflectedMap.put("Flame", new Sfx(voicePath + "Flame.wav"));
            reflectedMap.put("Glass", new Sfx(voicePath + "Glass.wav"));
            reflectedMap.put("FlameNGlass", new Sfx(voicePath + "FlameNGlass.wav"));
            reflectedMap.put("FlameNGlassPower", new Sfx(voicePath + "FlameNGlassPower.wav"));
            reflectedMap.put("LegendaryFighter", new Sfx(voicePath + "LegendaryFighter.wav"));
            reflectedMap.put("LegendaryFighterPower", new Sfx(voicePath + "LegendaryFighterPower.wav"));
            reflectedMap.put("LegendaryFighterA", new Sfx(voicePath + "LegendaryFighterA.wav"));
            reflectedMap.put("Gabriel", new Sfx(voicePath + "Gabriel.wav"));
            reflectedMap.put("Kuon", new Sfx(voicePath + "Kuon.wav"));
            reflectedMap.put("KuonA", new Sfx(voicePath + "KuonA.wav"));
            reflectedMap.put("XCW_Hurt", new Sfx(voicePath + "XCW_Hurt.wav"));
            reflectedMap.put("Owen", new Sfx(voicePath + "Owen.wav"));
            reflectedMap.put("Grea", new Sfx(voicePath + "Grea.wav"));
            reflectedMap.put("Ember", new Sfx(voicePath + "Ember.wav"));
            reflectedMap.put("Inferno", new Sfx(voicePath + "Inferno.wav"));
            reflectedMap.put("Anne", new Sfx(voicePath + "Anne.wav"));
            reflectedMap.put("AnnesSorcery", new Sfx(voicePath + "AnnesSorcery.wav"));
            reflectedMap.put("Miranda", new Sfx(voicePath + "Miranda.wav"));
            reflectedMap.put("XCW_Hurt2", new Sfx(voicePath + "XCW_Hurt2.wav"));
            reflectedMap.put("XCW_Hurt3", new Sfx(voicePath + "XCW_Hurt3.wav"));
            reflectedMap.put("XCW_Hurt4", new Sfx(voicePath + "XCW_Hurt4.wav"));
            reflectedMap.put("BlackPinya", new Sfx(voicePath + "BlackPinya.wav"));
            reflectedMap.put("Maiser", new Sfx(voicePath + "Maiser.wav"));
            reflectedMap.put("RapidFire", new Sfx(voicePath + "RapidFire.wav"));
            reflectedMap.put("Belphomet2", new Sfx(voicePath + "Belphomet2.wav"));
            reflectedMap.put("Belphomet3", new Sfx(voicePath + "Belphomet3.wav"));
            reflectedMap.put("Belphomet4", new Sfx(voicePath + "Belphomet4.wav"));
            reflectedMap.put("Belphomet5", new Sfx(voicePath + "Belphomet5.wav"));
            reflectedMap.put("Belphomet6", new Sfx(voicePath + "Belphomet6.wav"));
            reflectedMap.put("IC1", new Sfx(voicePath + "IC1.wav"));
            reflectedMap.put("IC2", new Sfx(voicePath + "IC2.wav"));
            reflectedMap.put("IC3", new Sfx(voicePath + "IC3.wav"));
            reflectedMap.put("IC4", new Sfx(voicePath + "IC4.wav"));
            reflectedMap.put("IC5", new Sfx(voicePath + "IC5.wav"));
            reflectedMap.put("MagiTrain", new Sfx(voicePath + "MagiTrain.wav"));
            reflectedMap.put("Arisa_Selected", new Sfx(voicePath + "Arisa_Selected.wav"));
            reflectedMap.put("Arisa_Hurt", new Sfx(voicePath + "Arisa_Hurt.wav"));
            reflectedMap.put("Arisa_Hurt2", new Sfx(voicePath + "Arisa_Hurt2.wav"));
            reflectedMap.put("Arisa_Hurt3", new Sfx(voicePath + "Arisa_Hurt3.wav"));
            reflectedMap.put("Arisa_Hurt4", new Sfx(voicePath + "Arisa_Hurt4.wav"));
            reflectedMap.put("Fairy", new Sfx(voicePath + "Fairy.wav"));
            reflectedMap.put("FairyWhisperer", new Sfx(voicePath + "FairyWhisperer.wav"));
            reflectedMap.put("SylvanJustice", new Sfx(voicePath + "SylvanJustice.wav"));
            reflectedMap.put("NaturesGuidance", new Sfx(voicePath + "NaturesGuidance.wav"));
            reflectedMap.put("WhirlwindRhinoceroach", new Sfx(voicePath + "WhirlwindRhinoceroach.wav"));
            reflectedMap.put("Rhinoceroach", new Sfx(voicePath + "Rhinoceroach.wav"));
            reflectedMap.put("WardOfUnkilling", new Sfx(voicePath + "WardOfUnkilling.wav"));
            reflectedMap.put("OmenOfUnkilling", new Sfx(voicePath + "OmenOfUnkilling.wav"));
            reflectedMap.put("AriasWhirlwind", new Sfx(voicePath + "AriasWhirlwind.wav"));
            reflectedMap.put("Bayle", new Sfx(voicePath + "Bayle.wav"));
            reflectedMap.put("Hero", new Sfx(voicePath + "Hero.wav"));
            reflectedMap.put("WindFall", new Sfx(voicePath + "WindFall.wav"));
            reflectedMap.put("ElfGuard", new Sfx(voicePath + "ElfGuard.wav"));
            reflectedMap.put("Aria", new Sfx(voicePath + "Aria.wav"));
            reflectedMap.put("GuardOfMachinatree", new Sfx(voicePath + "GuardOfMachinatree.wav"));
            reflectedMap.put("Damian", new Sfx(voicePath + "Damian.wav"));
            reflectedMap.put("MachineClaw", new Sfx(voicePath + "MachineClaw.wav"));
            reflectedMap.put("IronglideElf", new Sfx(voicePath + "IronglideElf.wav"));
            reflectedMap.put("Cassiopeia", new Sfx(voicePath + "Cassiopeia.wav"));
            reflectedMap.put("Loxis", new Sfx(voicePath + "Loxis.wav"));
            reflectedMap.put("LoxisPower1", new Sfx(voicePath + "LoxisPower1.wav"));
            reflectedMap.put("LoxisPower2", new Sfx(voicePath + "LoxisPower2.wav"));
            reflectedMap.put("Packing", new Sfx(voicePath + "Packing.wav"));
            reflectedMap.put("Ladica", new Sfx(voicePath + "Ladica.wav"));
            reflectedMap.put("TreacherousReversal", new Sfx(voicePath + "TreacherousReversal.wav"));
            reflectedMap.put("TheHanged1", new Sfx(voicePath + "TheHanged1.wav"));
            reflectedMap.put("TheHanged2", new Sfx(voicePath + "TheHanged2.wav"));
            reflectedMap.put("Verdant", new Sfx(voicePath + "Verdant.wav"));
            reflectedMap.put("WindFairy", new Sfx(voicePath + "WindFairy.wav"));
            reflectedMap.put("ServantOfUnkilling", new Sfx(voicePath + "ServantOfUnkilling.wav"));
            reflectedMap.put("MarkOfUnkilling", new Sfx(voicePath + "MarkOfUnkilling.wav"));
            reflectedMap.put("ZealotOfUnkilling", new Sfx(voicePath + "ZealotOfUnkilling.wav"));
            reflectedMap.put("VarmintHunter", new Sfx(voicePath + "VarmintHunter.wav"));
            reflectedMap.put("VarmintHunterPower", new Sfx(voicePath + "VarmintHunterPower.wav"));
            reflectedMap.put("Beast", new Sfx(voicePath + "Beast.wav"));
            reflectedMap.put("Beauty", new Sfx(voicePath + "Beauty.wav"));
            reflectedMap.put("Sekka", new Sfx(voicePath + "Sekka.wav"));
            reflectedMap.put("ResolveOfSekka", new Sfx(voicePath + "ResolveOfSekka.wav"));
            reflectedMap.put("ForestFairy", new Sfx(voicePath + "ForestFairy.wav"));
            reflectedMap.put("ForestFairyPower", new Sfx(voicePath + "ForestFairyPower.wav"));
            reflectedMap.put("Lisa", new Sfx(voicePath + "Lisa.wav"));
            reflectedMap.put("GreenWoodGuardian", new Sfx(voicePath + "GreenWoodGuardian.wav"));
            reflectedMap.put("WoodlandCleaver", new Sfx(voicePath + "WoodlandCleaver.wav"));
            reflectedMap.put("GreenbrierElf", new Sfx(voicePath + "GreenbrierElf.wav"));
            reflectedMap.put("Lymaga", new Sfx(voicePath + "Lymaga.wav"));
            reflectedMap.put("Lymaga_Acc", new Sfx(voicePath + "Lymaga_Acc.wav"));
            reflectedMap.put("WildwoodMatriarch", new Sfx(voicePath + "WildwoodMatriarch.wav"));
            reflectedMap.put("Aerin", new Sfx(voicePath + "Aerin.wav"));
            reflectedMap.put("Metera", new Sfx(voicePath + "Metera.wav"));
            reflectedMap.put("Rino", new Sfx(voicePath + "Rino.wav"));
            reflectedMap.put("Rino_UB", new Sfx(voicePath + "Rino_UB.wav"));
            reflectedMap.put("Kokkoro", new Sfx(voicePath + "Kokkoro.wav"));
            reflectedMap.put("Kokkoro_UB", new Sfx(voicePath + "Kokkoro_UB.wav"));
            reflectedMap.put("Amataz", new Sfx(voicePath + "Amataz.wav"));
            reflectedMap.put("DivineSmithing", new Sfx(voicePath + "DivineSmithing.wav"));
            reflectedMap.put("Cleft", new Sfx(voicePath + "Cleft.wav"));
            reflectedMap.put("Lycoris", new Sfx(voicePath + "Lycoris.wav"));
            reflectedMap.put("RoseQueen", new Sfx(voicePath + "RoseQueen.wav"));
            reflectedMap.put("PameraPower", new Sfx(voicePath + "PameraPower.wav"));
            reflectedMap.put("Pamera", new Sfx(voicePath + "Pamera.wav"));
            reflectedMap.put("Korwa", new Sfx(voicePath + "Korwa.wav"));
            reflectedMap.put("Fil", new Sfx(voicePath + "Fil.wav"));
            reflectedMap.put("Megaera_PREP", new Sfx(voicePath + "Megaera_PREP.wav"));
            reflectedMap.put("Megaera_D1", new Sfx(voicePath + "Megaera_D1.wav"));
            reflectedMap.put("Megaera_D2", new Sfx(voicePath + "Megaera_D2.wav"));
            reflectedMap.put("Tisiphone_SLASH", new Sfx(voicePath + "Tisiphone_SLASH.wav"));
            reflectedMap.put("Tisiphone_D1", new Sfx(voicePath + "Tisiphone_D1.wav"));
            reflectedMap.put("Tisiphone_D2", new Sfx(voicePath + "Tisiphone_D2.wav"));
            reflectedMap.put("Vincent_A1", new Sfx(voicePath + "Vincent_A1.wav"));
            reflectedMap.put("Vincent_A2", new Sfx(voicePath + "Vincent_A2.wav"));
            reflectedMap.put("Vincent_A3", new Sfx(voicePath + "Vincent_A3.wav"));
            reflectedMap.put("Vincent_A4", new Sfx(voicePath + "Vincent_A4.wav"));
            reflectedMap.put("Vincent_E1", new Sfx(voicePath + "Vincent_E1.wav"));
            reflectedMap.put("Vincent_E3", new Sfx(voicePath + "Vincent_E3.wav"));
            reflectedMap.put("CalamityMode", new Sfx(voicePath + "CalamityMode.wav"));
            reflectedMap.put("CalamityEnd", new Sfx(voicePath + "CalamityEnd.wav"));
            reflectedMap.put("NewGrea", new Sfx(voicePath + "NewGrea.wav"));
            reflectedMap.put("NewEmber", new Sfx(voicePath + "NewEmber.wav"));
            reflectedMap.put("NewAnne", new Sfx(voicePath + "NewAnne.wav"));
            reflectedMap.put("ExceedBurst", new Sfx(voicePath + "ExceedBurst.wav"));
            reflectedMap.put("Alector_PREP", new Sfx(voicePath + "Alector_PREP.wav"));
            reflectedMap.put("Alector_D1", new Sfx(voicePath + "Alector_D1.wav"));
            reflectedMap.put("Alector_D2", new Sfx(voicePath + "Alector_D2.wav"));
            reflectedMap.put("Lelouch_GEASS", new Sfx(voicePath + "Lelouch_GEASS.wav"));
            reflectedMap.put("Lelouch_Checkmate", new Sfx(voicePath + "Lelouch_Checkmate.wav"));
            reflectedMap.put("FatalOrder", new Sfx(voicePath + "FatalOrder.wav"));
            reflectedMap.put("Suzaku_SLASH", new Sfx(voicePath + "Suzaku_SLASH.wav"));
            reflectedMap.put("Suzaku_BEAM", new Sfx(voicePath + "Suzaku_BEAM.wav"));
            reflectedMap.put("Suzaku_CURSE", new Sfx(voicePath + "Suzaku_CURSE.wav"));
            reflectedMap.put("Necro_Selected", new Sfx(voicePath + "Necro_Selected.wav"));
            reflectedMap.put("Necro_Hurt", new Sfx(voicePath + "Necro_Hurt.wav"));
            reflectedMap.put("Necro_Hurt2", new Sfx(voicePath + "Necro_Hurt2.wav"));
            reflectedMap.put("Necro_Hurt3", new Sfx(voicePath + "Necro_Hurt3.wav"));
            reflectedMap.put("Necro_Hurt4", new Sfx(voicePath + "Necro_Hurt4.wav"));
            reflectedMap.put("UndyingResentment", new Sfx(voicePath + "UndyingResentment.wav"));
            reflectedMap.put("Mordecai", new Sfx(voicePath + "Mordecai.wav"));
            reflectedMap.put("Minthe", new Sfx(voicePath + "Minthe.wav"));
            reflectedMap.put("Fafnir", new Sfx(voicePath + "Fafnir.wav"));
            reflectedMap.put("ApostleOfSilence", new Sfx(voicePath + "ApostleOfSilence.wav"));
            reflectedMap.put("DiscipleOfSilence", new Sfx(voicePath + "DiscipleOfSilence.wav"));
            reflectedMap.put("Litch", new Sfx(voicePath + "Litch.wav"));
            reflectedMap.put("Ceres", new Sfx(voicePath + "Ceres.wav"));
            reflectedMap.put("EternalVow", new Sfx(voicePath + "EternalVow.wav"));
            reflectedMap.put("Hector", new Sfx(voicePath + "Hector.wav"));
            reflectedMap.put("Lubelle", new Sfx(voicePath + "Lubelle.wav"));
            reflectedMap.put("LubellePower", new Sfx(voicePath + "LubellePower.wav"));
            reflectedMap.put("Thoth", new Sfx(voicePath + "Thoth.wav"));
            reflectedMap.put("GhostRider", new Sfx(voicePath + "GhostRider.wav"));
            reflectedMap.put("Ceridwen", new Sfx(voicePath + "Ceridwen.wav"));
            reflectedMap.put("TheLovers", new Sfx(voicePath + "TheLovers.wav"));
            reflectedMap.put("TheLoversEH", new Sfx(voicePath + "TheLoversEH.wav"));
            reflectedMap.put("SpiritCurator", new Sfx(voicePath + "SpiritCurator.wav"));
            reflectedMap.put("ForbiddenArt", new Sfx(voicePath + "ForbiddenArt.wav"));
            reflectedMap.put("Nicola", new Sfx(voicePath + "Nicola.wav"));
            reflectedMap.put("Chris", new Sfx(voicePath + "Chris.wav"));
            reflectedMap.put("SoulStrike", new Sfx(voicePath + "SoulStrike.wav"));
            reflectedMap.put("Kagero", new Sfx(voicePath + "Kagero.wav"));
            reflectedMap.put("WightKing", new Sfx(voicePath + "WightKing.wav"));
            reflectedMap.put("Wight", new Sfx(voicePath + "Wight.wav"));
            reflectedMap.put("ImmortalThane", new Sfx(voicePath + "ImmortalThane.wav"));
            reflectedMap.put("NecroAssassin", new Sfx(voicePath + "NecroAssassin.wav"));
            reflectedMap.put("Nephthys", new Sfx(voicePath + "Nephthys.wav"));
            reflectedMap.put("CarnivalNecromancer", new Sfx(voicePath + "CarnivalNecromancer.wav"));
            reflectedMap.put("CarnivalNecromancer_EH", new Sfx(voicePath + "CarnivalNecromancer_EH.wav"));
            reflectedMap.put("CarnivalNecromancerPower", new Sfx(voicePath + "CarnivalNecromancerPower.wav"));
            reflectedMap.put("DeadMetalStar", new Sfx(voicePath + "DeadMetalStar.wav"));
            reflectedMap.put("DeadMetalStar_Acc", new Sfx(voicePath + "DeadMetalStar_Acc.wav"));
            reflectedMap.put("BoneDominator", new Sfx(voicePath + "BoneDominator.wav"));
            reflectedMap.put("BoneDominator_Acc", new Sfx(voicePath + "BoneDominator_Acc.wav"));
            reflectedMap.put("LadyGray", new Sfx(voicePath + "LadyGray.wav"));
            reflectedMap.put("IrongearCorpsman", new Sfx(voicePath + "IrongearCorpsman.wav"));
            reflectedMap.put("ForbiddenAndBalance", new Sfx(voicePath + "ForbiddenAndBalance.wav"));
            reflectedMap.put("Arcus", new Sfx(voicePath + "Arcus.wav"));
            reflectedMap.put("Manmaru1", new Sfx(voicePath + "Manmaru1.wav"));
            reflectedMap.put("GenerateNine", new Sfx(voicePath + "GenerateNine.wav"));
            reflectedMap.put("GenerateNine_EH", new Sfx(voicePath + "GenerateNine_EH.wav"));
            reflectedMap.put("Aenea", new Sfx(voicePath + "Aenea.wav"));
            reflectedMap.put("AeneaPower", new Sfx(voicePath + "AeneaPower.wav"));
            reflectedMap.put("OmenOfSilence", new Sfx(voicePath + "OmenOfSilence.wav"));
            reflectedMap.put("Gremory", new Sfx(voicePath + "Gremory.wav"));
            reflectedMap.put("Aisha", new Sfx(voicePath + "Aisha.wav"));
            reflectedMap.put("Hades", new Sfx(voicePath + "Hades.wav"));
            reflectedMap.put("Hades_Acc", new Sfx(voicePath + "Hades_Acc.wav"));
            reflectedMap.put("Mimi", new Sfx(voicePath + "Mimi.wav"));
            reflectedMap.put("Koko", new Sfx(voicePath + "Koko.wav"));
            reflectedMap.put("Cerberus", new Sfx(voicePath + "Cerberus.wav"));
            reflectedMap.put("Cerberus2", new Sfx(voicePath + "Cerberus2.wav"));
            reflectedMap.put("AttendentOfNight", new Sfx(voicePath + "AttendentOfNight.wav"));
            reflectedMap.put("Orthrus", new Sfx(voicePath + "Orthrus.wav"));
            reflectedMap.put("Miyako", new Sfx(voicePath + "Miyako.wav"));
            reflectedMap.put("Miyako_UB", new Sfx(voicePath + "Miyako_UB.wav"));
            reflectedMap.put("Pudding", new Sfx(voicePath + "Pudding.wav"));
            reflectedMap.put("LunaGame", new Sfx(voicePath + "LunaGame.wav"));
            reflectedMap.put("AeneaFriendship", new Sfx(voicePath + "AeneaFriendship.wav"));
            reflectedMap.put("FriendsForever", new Sfx(voicePath + "FriendsForever.wav"));
            reflectedMap.put("SonataOfSilence", new Sfx(voicePath + "SonataOfSilence.wav"));
            reflectedMap.put("SoulTaker", new Sfx(voicePath + "SoulTaker.wav"));
            reflectedMap.put("Ginsetsu", new Sfx(voicePath + "Ginsetsu.wav"));
            reflectedMap.put("Ferry", new Sfx(voicePath + "Ferry.wav"));
            reflectedMap.put("StormArrow", new Sfx(voicePath + "StormArrow.wav"));
            reflectedMap.put("GaleArrow", new Sfx(voicePath + "GaleArrow.wav"));
            reflectedMap.put("ArisaArrow", new Sfx(voicePath + "ArisaArrow.wav"));
            reflectedMap.put("ArrowPower", new Sfx(voicePath + "ArrowPower.wav"));
            reflectedMap.put("ArisaPower", new Sfx(voicePath + "ArisaPower.wav"));
            reflectedMap.put("Arisa", new Sfx(voicePath + "Arisa.wav"));
            reflectedMap.put("NecroTemptation", new Sfx(voicePath + "NecroTemptation.wav"));
            reflectedMap.put("LunaDoll", new Sfx(voicePath + "LunaDoll.wav"));
            reflectedMap.put("Luna", new Sfx(voicePath + "Luna.wav"));
            reflectedMap.put("UltimateMagic", new Sfx(voicePath + "UltimateMagic.wav"));
            reflectedMap.put("UnionMagic", new Sfx(voicePath + "UnionMagic.wav"));
            reflectedMap.put("Isabelle", new Sfx(voicePath + "Isabelle.wav"));
            reflectedMap.put("Vampire_Selected", new Sfx(voicePath + "Vampire_Selected.wav"));
            reflectedMap.put("Vampire_Hurt", new Sfx(voicePath + "Vampire_Hurt.wav"));
            reflectedMap.put("Vampire_Hurt2", new Sfx(voicePath + "Vampire_Hurt2.wav"));
            reflectedMap.put("Vampire_Hurt3", new Sfx(voicePath + "Vampire_Hurt3.wav"));
            reflectedMap.put("Vampire_Hurt4", new Sfx(voicePath + "Vampire_Hurt4.wav"));
            reflectedMap.put("DarkGeneral", new Sfx(voicePath + "DarkGeneral.wav"));
            reflectedMap.put("SpiderWebImp", new Sfx(voicePath + "SpiderWebImp.wav"));
            reflectedMap.put("DemonicAssault", new Sfx(voicePath + "DemonicAssault.wav"));
            reflectedMap.put("HellSpearWarrior", new Sfx(voicePath + "HellSpearWarrior.wav"));
            reflectedMap.put("MoonriseWerewolf", new Sfx(voicePath + "MoonriseWerewolf.wav"));
            reflectedMap.put("MoonriseWerewolf_EH", new Sfx(voicePath + "MoonriseWerewolf_EH.wav"));
            reflectedMap.put("UriasRevelry", new Sfx(voicePath + "UriasRevelry.wav"));
            reflectedMap.put("MonoResolve", new Sfx(voicePath + "MonoResolve.wav"));
            reflectedMap.put("GarnetWaltz", new Sfx(voicePath + "GarnetWaltz.wav"));
            reflectedMap.put("Shemyaza", new Sfx(voicePath + "Shemyaza.wav"));
            reflectedMap.put("Belphegor", new Sfx(voicePath + "Belphegor.wav"));
            reflectedMap.put("SexyVampire", new Sfx(voicePath + "SexyVampire.wav"));
            reflectedMap.put("SadisticDemon", new Sfx(voicePath + "SadisticDemon.wav"));
            reflectedMap.put("SadisticDemonPower", new Sfx(voicePath + "SadisticDemonPower.wav"));
            reflectedMap.put("SadisticHeal", new Sfx(voicePath + "SadisticHeal.wav"));
            reflectedMap.put("SadisticDamage", new Sfx(voicePath + "SadisticDamage.wav"));
            reflectedMap.put("ApostleOfLust", new Sfx(voicePath + "ApostleOfLust.wav"));
            reflectedMap.put("Baal", new Sfx(voicePath + "Baal.wav"));
            reflectedMap.put("BearBerserk", new Sfx(voicePath + "BearBerserk.wav"));
            reflectedMap.put("BeastEmpress", new Sfx(voicePath + "BeastEmpress.wav"));
            reflectedMap.put("WingsOfLust", new Sfx(voicePath + "WingsOfLust.wav"));
            reflectedMap.put("Emeralda", new Sfx(voicePath + "Emeralda.wav"));
            reflectedMap.put("Azazel", new Sfx(voicePath + "Azazel.wav"));
            reflectedMap.put("Yurius", new Sfx(voicePath + "Yurius.wav"));
            reflectedMap.put("YuriusPower", new Sfx(voicePath + "YuriusPower.wav"));
            reflectedMap.put("MechashotDevil", new Sfx(voicePath + "MechashotDevil.wav"));
            reflectedMap.put("MechaforgeDevil", new Sfx(voicePath + "MechaforgeDevil.wav"));
            reflectedMap.put("Mono", new Sfx(voicePath + "Mono.wav"));
            reflectedMap.put("Mono_Unlock", new Sfx(voicePath + "Mono_Unlock.wav"));
            reflectedMap.put("FirstOne", new Sfx(voicePath + "FirstOne.wav"));
            reflectedMap.put("Slayn", new Sfx(voicePath + "Slayn.wav"));
            reflectedMap.put("Neun", new Sfx(voicePath + "Neun.wav"));
            reflectedMap.put("NeunPower", new Sfx(voicePath + "NeunPower.wav"));
            reflectedMap.put("Aluzard", new Sfx(voicePath + "Aluzard.wav"));
            reflectedMap.put("BloodArts", new Sfx(voicePath + "BloodArts.wav"));
            reflectedMap.put("RageCommander", new Sfx(voicePath + "RageCommander.wav"));
            reflectedMap.put("Flauros", new Sfx(voicePath + "Flauros.wav"));
            reflectedMap.put("DevilOfVengeance", new Sfx(voicePath + "DevilOfVengeance.wav"));
            reflectedMap.put("OmenOfLust", new Sfx(voicePath + "OmenOfLust.wav"));
            reflectedMap.put("OmenOfLustPower", new Sfx(voicePath + "OmenOfLustPower.wav"));
            reflectedMap.put("ServantOfLust", new Sfx(voicePath + "ServantOfLust.wav"));
            reflectedMap.put("TheBerserker", new Sfx(voicePath + "TheBerserker.wav"));
            reflectedMap.put("TheBerserker2", new Sfx(voicePath + "TheBerserker2.wav"));
            reflectedMap.put("Urias", new Sfx(voicePath + "Urias.wav"));
            reflectedMap.put("TerrorNight", new Sfx(voicePath + "TerrorNight.wav"));
            reflectedMap.put("NightmareTime", new Sfx(voicePath + "NightmareTime.wav"));
            reflectedMap.put("BloodyNail", new Sfx(voicePath + "BloodyNail.wav"));
            reflectedMap.put("DreadAura", new Sfx(voicePath + "DreadAura.wav"));
            reflectedMap.put("Veight", new Sfx(voicePath + "Veight.wav"));
            reflectedMap.put("Vanpi", new Sfx(voicePath + "Vanpi.wav"));
            reflectedMap.put("Vanpi1", new Sfx(voicePath + "Vanpi1.wav"));
            reflectedMap.put("Vanpi2", new Sfx(voicePath + "Vanpi2.wav"));
            reflectedMap.put("Volteo", new Sfx(voicePath + "Volteo.wav"));
            reflectedMap.put("ShowdownDemon", new Sfx(voicePath + "ShowdownDemon.wav"));
            reflectedMap.put("ShadowDevil", new Sfx(voicePath + "ShadowDevil.wav"));
            reflectedMap.put("MaskedMayhem", new Sfx(voicePath + "MaskedMayhem.wav"));
            reflectedMap.put("Ayre", new Sfx(voicePath + "Ayre.wav"));
            reflectedMap.put("Lucius", new Sfx(voicePath + "Lucius.wav"));
            reflectedMap.put("Lucius_EH", new Sfx(voicePath + "Lucius_EH.wav"));
            reflectedMap.put("ArkDaemon", new Sfx(voicePath + "ArkDaemon.wav"));
            reflectedMap.put("Archdemon", new Sfx(voicePath + "Archdemon.wav"));
            reflectedMap.put("Archdemon_Acc", new Sfx(voicePath + "Archdemon_Acc.wav"));
            reflectedMap.put("ArchdemonPower", new Sfx(voicePath + "ArchdemonPower.wav"));
            reflectedMap.put("Lilim", new Sfx(voicePath + "Lilim.wav"));
            reflectedMap.put("BelphometCard", new Sfx(voicePath + "BelphometCard.wav"));
            reflectedMap.put("AlectorCard", new Sfx(voicePath + "AlectorCard.wav"));
            reflectedMap.put("TisiphoneCard", new Sfx(voicePath + "TisiphoneCard.wav"));
            reflectedMap.put("MegaeraCard", new Sfx(voicePath + "MegaeraCard.wav"));
            reflectedMap.put("UltimateCreator", new Sfx(voicePath + "UltimateCreator.wav"));
            reflectedMap.put("NeoTisiphone", new Sfx(voicePath + "NeoTisiphone.wav"));
            reflectedMap.put("NeoAlector", new Sfx(voicePath + "NeoAlector.wav"));
            reflectedMap.put("NeoMegaera", new Sfx(voicePath + "NeoMegaera.wav"));
            reflectedMap.put("CrimsonWar", new Sfx(voicePath + "CrimsonWar.wav"));
            reflectedMap.put("DimensionalWitch2", new Sfx(voicePath + "DimensionalWitch2.wav"));
            reflectedMap.put("Runie2", new Sfx(voicePath + "Runie2.wav"));
            reflectedMap.put("ProphecyOfBoons", new Sfx(voicePath + "ProphecyOfBoons.wav"));
            reflectedMap.put("ProphecyOfDoom", new Sfx(voicePath + "ProphecyOfDoom.wav"));
            reflectedMap.put("LadicaEmbrace", new Sfx(voicePath + "LadicaEmbrace.wav"));
            reflectedMap.put("Ladica2", new Sfx(voicePath + "Ladica2.wav"));
            reflectedMap.put("EternalPotion", new Sfx(voicePath + "EternalPotion.wav"));
            reflectedMap.put("InstantPotion", new Sfx(voicePath + "InstantPotion.wav"));
            reflectedMap.put("Ceridwen2", new Sfx(voicePath + "Ceridwen2.wav"));
            reflectedMap.put("ImmoralDesire", new Sfx(voicePath + "ImmoralDesire.wav"));
            reflectedMap.put("Ceres2", new Sfx(voicePath + "Ceres2.wav"));
            reflectedMap.put("Kyouka", new Sfx(voicePath + "Kyouka.wav"));
            reflectedMap.put("Kyouka_UB", new Sfx(voicePath + "Kyouka_UB.wav"));
            reflectedMap.put("Irya_UB", new Sfx(voicePath + "Irya_UB.wav"));
            reflectedMap.put("Irya", new Sfx(voicePath + "Irya.wav"));
            reflectedMap.put("FaustPower2", new Sfx(voicePath + "FaustPower2.wav"));
            reflectedMap.put("FaustPower3", new Sfx(voicePath + "FaustPower3.wav"));
            reflectedMap.put("Faust2", new Sfx(voicePath + "Faust2.wav"));
            reflectedMap.put("Nicola2", new Sfx(voicePath + "Nicola2.wav"));
            reflectedMap.put("Nicola3", new Sfx(voicePath + "Nicola3.wav"));
            reflectedMap.put("Mono2", new Sfx(voicePath + "Mono2.wav"));
            reflectedMap.put("MonoPower", new Sfx(voicePath + "MonoPower.wav"));
            reflectedMap.put("Tetra3", new Sfx(voicePath + "Tetra3.wav"));
            reflectedMap.put("Tetra2", new Sfx(voicePath + "Tetra2.wav"));
            reflectedMap.put("Resonance", new Sfx(voicePath + "Resonance.wav"));
            reflectedMap.put("Nemesis_Selected", new Sfx(voicePath + "Nemesis_Selected.wav"));
            reflectedMap.put("Nemesis_Hurt", new Sfx(voicePath + "Nemesis_Hurt.wav"));
            reflectedMap.put("Nemesis_Hurt2", new Sfx(voicePath + "Nemesis_Hurt2.wav"));
            reflectedMap.put("Nemesis_Hurt3", new Sfx(voicePath + "Nemesis_Hurt3.wav"));
            reflectedMap.put("Nemesis_Hurt4", new Sfx(voicePath + "Nemesis_Hurt4.wav"));
            reflectedMap.put("Icarus", new Sfx(voicePath + "Icarus.wav"));
            reflectedMap.put("RoboticUser", new Sfx(voicePath + "RoboticUser.wav"));
            reflectedMap.put("DeusExMachina", new Sfx(voicePath + "DeusExMachina.wav"));
            reflectedMap.put("NewOrder", new Sfx(voicePath + "NewOrder.wav"));
            reflectedMap.put("Tolerance", new Sfx(voicePath + "Tolerance.wav"));
            reflectedMap.put("Enforcer", new Sfx(voicePath + "Enforcer.wav"));
            reflectedMap.put("MegaEnforcer", new Sfx(voicePath + "MegaEnforcer.wav"));
            reflectedMap.put("MagnaGiant", new Sfx(voicePath + "MagnaGiant.wav"));
            reflectedMap.put("MagnaGiant_Acc", new Sfx(voicePath + "MagnaGiant_Acc.wav"));
            reflectedMap.put("MagnaZero", new Sfx(voicePath + "MagnaZero.wav"));
            reflectedMap.put("Yuwan", new Sfx(voicePath + "Yuwan.wav"));
            reflectedMap.put("YuwanPower", new Sfx(voicePath + "YuwanPower.wav"));
            reflectedMap.put("Paracelsus", new Sfx(voicePath + "Paracelsus.wav"));
            reflectedMap.put("InfinityPuppeteer", new Sfx(voicePath + "InfinityPuppeteer.wav"));
            reflectedMap.put("OmenOfDestruction", new Sfx(voicePath + "OmenOfDestruction.wav"));
            reflectedMap.put("WhiteArtifact", new Sfx(voicePath + "WhiteArtifact.wav"));
            reflectedMap.put("BlackArtifact", new Sfx(voicePath + "BlackArtifact.wav"));
            reflectedMap.put("Licht", new Sfx(voicePath + "Licht.wav"));
            reflectedMap.put("LichtPower", new Sfx(voicePath + "LichtPower.wav"));
            reflectedMap.put("IronStaffMechanic", new Sfx(voicePath + "IronStaffMechanic.wav"));
            reflectedMap.put("YuwanFury", new Sfx(voicePath + "YuwanFury.wav"));
            reflectedMap.put("RebelAgainstFate", new Sfx(voicePath + "RebelAgainstFate.wav"));
            reflectedMap.put("PurgationBlade", new Sfx(voicePath + "PurgationBlade.wav"));
            reflectedMap.put("Maisha", new Sfx(voicePath + "Maisha.wav"));
            reflectedMap.put("DeviceTuner", new Sfx(voicePath + "DeviceTuner.wav"));
            reflectedMap.put("ApostleOfDestruction", new Sfx(voicePath + "ApostleOfDestruction.wav"));
            reflectedMap.put("DiscipleOfDestruction", new Sfx(voicePath + "DiscipleOfDestruction.wav"));
            reflectedMap.put("StringMaster", new Sfx(voicePath + "StringMaster.wav"));
            reflectedMap.put("StringMasterPower", new Sfx(voicePath + "StringMasterPower.wav"));
            reflectedMap.put("KnowerOfHistory", new Sfx(voicePath + "KnowerOfHistory.wav"));
            reflectedMap.put("GadgetUser", new Sfx(voicePath + "GadgetUser.wav"));
            reflectedMap.put("Karula", new Sfx(voicePath + "Karula.wav"));
            reflectedMap.put("KarulaPower", new Sfx(voicePath + "KarulaPower.wav"));
            reflectedMap.put("Orchid1", new Sfx(voicePath + "Orchid1.wav"));
            reflectedMap.put("Orchid1Effect", new Sfx(voicePath + "Orchid1Effect.wav"));
            reflectedMap.put("Orchid2", new Sfx(voicePath + "Orchid2.wav"));
            reflectedMap.put("Orchid", new Sfx(voicePath + "Orchid.wav"));
            reflectedMap.put("OrchidNeo", new Sfx(voicePath + "OrchidNeo.wav"));
            reflectedMap.put("UnnamedDetermination", new Sfx(voicePath + "UnnamedDetermination.wav"));
            reflectedMap.put("Noa", new Sfx(voicePath + "Noa.wav"));
            reflectedMap.put("MindDivider", new Sfx(voicePath + "MindDivider.wav"));
            reflectedMap.put("Ines", new Sfx(voicePath + "Ines.wav"));
            reflectedMap.put("InesPower", new Sfx(voicePath + "InesPower.wav"));
            reflectedMap.put("DollsOwner", new Sfx(voicePath + "DollsOwner.wav"));
            reflectedMap.put("DestructionRefrain", new Sfx(voicePath + "DestructionRefrain.wav"));
            reflectedMap.put("Modest", new Sfx(voicePath + "Modest.wav"));
            reflectedMap.put("Ralmia", new Sfx(voicePath + "Ralmia.wav"));
            reflectedMap.put("Ralmia_EH", new Sfx(voicePath + "Ralmia_EH.wav"));
            reflectedMap.put("OmniscientKaiser", new Sfx(voicePath + "OmniscientKaiser.wav"));
            reflectedMap.put("OmniscientKaiser_Acc", new Sfx(voicePath + "OmniscientKaiser_Acc.wav"));
            reflectedMap.put("Spine", new Sfx(voicePath + "Spine.wav"));
            reflectedMap.put("Spine2", new Sfx(voicePath + "Spine2.wav"));
            reflectedMap.put("SpinePower", new Sfx(voicePath + "SpinePower.wav"));
            reflectedMap.put("Spine2_Acc", new Sfx(voicePath + "Spine2_Acc.wav"));
            reflectedMap.put("Miriam", new Sfx(voicePath + "Miriam.wav"));
            reflectedMap.put("MiriamPower", new Sfx(voicePath + "MiriamPower.wav"));
            reflectedMap.put("Miriam_Acc", new Sfx(voicePath + "Miriam_Acc.wav"));
            reflectedMap.put("CannonHermitCrab", new Sfx(voicePath + "CannonHermitCrab.wav"));
            reflectedMap.put("ServantOfDarkness", new Sfx(voicePath + "ServantOfDarkness.wav"));
            reflectedMap.put("Zwei", new Sfx(voicePath + "Zwei.wav"));
            reflectedMap.put("Zwei2", new Sfx(voicePath + "Zwei2.wav"));
            reflectedMap.put("Zwei2_Acc", new Sfx(voicePath + "Zwei2_Acc.wav"));
            reflectedMap.put("VoidRealize", new Sfx(voicePath + "VoidRealize.wav"));
            reflectedMap.put("Illganeau", new Sfx(voicePath + "Illganeau.wav"));
            reflectedMap.put("NightVampire", new Sfx(voicePath + "NightVampire.wav"));
            reflectedMap.put("NightVampirePower", new Sfx(voicePath + "NightVampirePower.wav"));
            reflectedMap.put("TheWheelOfFortune", new Sfx(voicePath + "TheWheelOfFortune.wav"));
            reflectedMap.put("TheWheelOfFortune2", new Sfx(voicePath + "TheWheelOfFortune2.wav"));
            reflectedMap.put("TheWheelOfFortunePower", new Sfx(voicePath + "TheWheelOfFortunePower.wav"));
            reflectedMap.put("Odin", new Sfx(voicePath + "Odin.wav"));
            reflectedMap.put("RadiantAngel", new Sfx(voicePath + "RadiantAngel.wav"));
            reflectedMap.put("PriestOfTheCudgel", new Sfx(voicePath + "PriestOfTheCudgel.wav"));
            reflectedMap.put("ArdentSister", new Sfx(voicePath + "ArdentSister.wav"));
            reflectedMap.put("DarkPriest", new Sfx(voicePath + "DarkPriest.wav"));
            reflectedMap.put("Lucifer", new Sfx(voicePath + "Lucifer.wav"));
            reflectedMap.put("Lucifer2", new Sfx(voicePath + "Lucifer2.wav"));
            reflectedMap.put("AbsoluteOne", new Sfx(voicePath + "AbsoluteOne.wav"));
            reflectedMap.put("MoonAlmiraj", new Sfx(voicePath + "MoonAlmiraj.wav"));
            reflectedMap.put("KMR1", new Sfx(voicePath + "KMR1.wav"));
            reflectedMap.put("KMR2", new Sfx(voicePath + "KMR2.wav"));
            reflectedMap.put("KMR3", new Sfx(voicePath + "KMR3.wav"));
            reflectedMap.put("Rowen", new Sfx(voicePath + "Rowen.wav"));
            reflectedMap.put("SevensForceSorcerer", new Sfx(voicePath + "SevensForceSorcerer.wav"));
            reflectedMap.put("SevensForceSorcererEff", new Sfx(voicePath + "SevensForceSorcererEff.wav"));
            reflectedMap.put("ShiningValkyrie", new Sfx(voicePath + "ShiningValkyrie.wav"));
            reflectedMap.put("DeadSoulTaker", new Sfx(voicePath + "DeadSoulTaker.wav"));
            reflectedMap.put("AbyssDoomLord", new Sfx(voicePath + "AbyssDoomLord.wav"));
            reflectedMap.put("SpineLucille", new Sfx(voicePath + "SpineLucille.wav"));
            reflectedMap.put("Royal_Hurt", new Sfx(voicePath + "Royal_Hurt.wav"));
            reflectedMap.put("Royal_Hurt1", new Sfx(voicePath + "Royal_Hurt1.wav"));
            reflectedMap.put("Royal_Hurt2", new Sfx(voicePath + "Royal_Hurt2.wav"));
            reflectedMap.put("Royal_Hurt3", new Sfx(voicePath + "Royal_Hurt3.wav"));
            reflectedMap.put("Royal_Hurt4", new Sfx(voicePath + "Royal_Hurt4.wav"));
            reflectedMap.put("Royal_Selected", new Sfx(voicePath + "Royal_Selected.wav"));
            reflectedMap.put("CannonHermitCrabOrb", new Sfx(voicePath + "CannonHermitCrabOrb.wav"));
            reflectedMap.put("CannonHermitCrabOrb_Atk", new Sfx(voicePath + "CannonHermitCrabOrb_Atk.wav"));
            reflectedMap.put("FrontguardGeneral", new Sfx(voicePath + "FrontguardGeneral.wav"));
            reflectedMap.put("FrontguardGeneral_Atk", new Sfx(voicePath + "FrontguardGeneral_Atk.wav"));
            reflectedMap.put("HeavyKnight", new Sfx(voicePath + "HeavyKnight.wav"));
            reflectedMap.put("HeavyKnight_Atk", new Sfx(voicePath + "HeavyKnight_Atk.wav"));
            reflectedMap.put("Knight", new Sfx(voicePath + "Knight.wav"));
            reflectedMap.put("Knight_Atk", new Sfx(voicePath + "Knight_Atk.wav"));
            reflectedMap.put("QueenHemera", new Sfx(voicePath + "QueenHemera.wav"));
            reflectedMap.put("QueenHemera_Atk", new Sfx(voicePath + "QueenHemera_Atk.wav"));
            reflectedMap.put("QueenMagnus", new Sfx(voicePath + "QueenMagnus.wav"));
            reflectedMap.put("QueenMagnus_Atk", new Sfx(voicePath + "QueenMagnus_Atk.wav"));
            reflectedMap.put("Quickblader", new Sfx(voicePath + "Quickblader.wav"));
            reflectedMap.put("Quickblader_Atk", new Sfx(voicePath + "Quickblader_Atk.wav"));
            reflectedMap.put("ShieldGuardian", new Sfx(voicePath + "ShieldGuardian.wav"));
            reflectedMap.put("ShieldGuardian_Atk", new Sfx(voicePath + "ShieldGuardian_Atk.wav"));
            reflectedMap.put("SteelcladKnight", new Sfx(voicePath + "SteelcladKnight.wav"));
            reflectedMap.put("SteelcladKnight_Atk", new Sfx(voicePath + "SteelcladKnight_Atk.wav"));
            reflectedMap.put("Alyaska", new Sfx(voicePath + "Alyaska.wav"));
            reflectedMap.put("Alyaska_Eff", new Sfx(voicePath + "Alyaska_Eff.wav"));
            reflectedMap.put("Alyaska_Ev", new Sfx(voicePath + "Alyaska_Ev.wav"));
            reflectedMap.put("ApostleOfUsurpation", new Sfx(voicePath + "ApostleOfUsurpation.wav"));
            reflectedMap.put("ApostleOfUsurpation_Pow", new Sfx(voicePath + "ApostleOfUsurpation_Pow.wav"));
            reflectedMap.put("BayleonsCommand", new Sfx(voicePath + "BayleonsCommand.wav"));
            reflectedMap.put("BrothersUnited", new Sfx(voicePath + "BrothersUnited.wav"));
            reflectedMap.put("CatAdmiral", new Sfx(voicePath + "CatAdmiral.wav"));
            reflectedMap.put("CatAdmiral_Ev", new Sfx(voicePath + "CatAdmiral_Ev.wav"));
            reflectedMap.put("Charlotta", new Sfx(voicePath + "Charlotta.wav"));
            reflectedMap.put("Charlotta_Ev", new Sfx(voicePath + "Charlotta_Ev.wav"));
            reflectedMap.put("DanceOfUsurpation", new Sfx(voicePath + "DanceOfUsurpation.wav"));
            reflectedMap.put("DiscipleOfUsurpation", new Sfx(voicePath + "DiscipleOfUsurpation.wav"));
            reflectedMap.put("DiscipleOfUsurpation_Pow", new Sfx(voicePath + "DiscipleOfUsurpation_Pow.wav"));
            reflectedMap.put("DualbladeKnight", new Sfx(voicePath + "DualbladeKnight.wav"));
            reflectedMap.put("DualbladeKnight_Ev", new Sfx(voicePath + "DualbladeKnight_Ev.wav"));
            reflectedMap.put("Eahta", new Sfx(voicePath + "Eahta.wav"));
            reflectedMap.put("Eahta_SA", new Sfx(voicePath + "Eahta_SA.wav"));
            reflectedMap.put("Eahta_SSA", new Sfx(voicePath + "Eahta_SSA.wav"));
            reflectedMap.put("EmpressOfSerenity", new Sfx(voicePath + "EmpressOfSerenity.wav"));
            reflectedMap.put("EmpressOfSerenity_Eh", new Sfx(voicePath + "EmpressOfSerenity_Eh.wav"));
            reflectedMap.put("EnragedGeneral", new Sfx(voicePath + "EnragedGeneral.wav"));
            reflectedMap.put("ErikasSleight", new Sfx(voicePath + "ErikasSleight.wav"));
            reflectedMap.put("ExterminusWeapon", new Sfx(voicePath + "ExterminusWeapon.wav"));
            reflectedMap.put("FloralFencer", new Sfx(voicePath + "FloralFencer.wav"));
            reflectedMap.put("FloralFencer_Ev", new Sfx(voicePath + "FloralFencer_Ev.wav"));
            reflectedMap.put("FlyingMessengerSquirrel", new Sfx(voicePath + "FlyingMessengerSquirrel.wav"));
            reflectedMap.put("FortressStrategist", new Sfx(voicePath + "FortressStrategist.wav"));
            reflectedMap.put("FortressStrategist_Pow", new Sfx(voicePath + "FortressStrategist_Pow.wav"));
            reflectedMap.put("FrenziedCorpsmaster", new Sfx(voicePath + "FrenziedCorpsmaster.wav"));
            reflectedMap.put("FrenziedCorpsmaster_Acc", new Sfx(voicePath + "FrenziedCorpsmaster_Acc.wav"));
            reflectedMap.put("FrontlineInstructor", new Sfx(voicePath + "FrontlineInstructor.wav"));
            reflectedMap.put("HonorableThief", new Sfx(voicePath + "HonorableThief.wav"));
            reflectedMap.put("LuminousMage", new Sfx(voicePath + "LuminousMage.wav"));
            reflectedMap.put("LuxbladeArriet", new Sfx(voicePath + "LuxbladeArriet.wav"));
            reflectedMap.put("Mars", new Sfx(voicePath + "Mars.wav"));
            reflectedMap.put("Mars_Pow", new Sfx(voicePath + "Mars_Pow.wav"));
            reflectedMap.put("Mirin", new Sfx(voicePath + "Mirin.wav"));
            reflectedMap.put("Mirin_SA", new Sfx(voicePath + "Mirin_SA.wav"));
            reflectedMap.put("Mirin_SSA", new Sfx(voicePath + "Mirin_SSA.wav"));
            reflectedMap.put("MistolinaBayleon", new Sfx(voicePath + "MistolinaBayleon.wav"));
            reflectedMap.put("MistolinasSwordplay", new Sfx(voicePath + "MistolinasSwordplay.wav"));
            reflectedMap.put("OathlessKnight", new Sfx(voicePath + "OathlessKnight.wav"));
            reflectedMap.put("Octrice", new Sfx(voicePath + "Octrice.wav"));
            reflectedMap.put("Octrice_Ev", new Sfx(voicePath + "Octrice_Ev.wav"));
            reflectedMap.put("PrudentGeneral", new Sfx(voicePath + "PrudentGeneral.wav"));
            reflectedMap.put("PrudentGeneral_Ev", new Sfx(voicePath + "PrudentGeneral_Ev.wav"));
            reflectedMap.put("RadicalGunslinger", new Sfx(voicePath + "RadicalGunslinger.wav"));
            reflectedMap.put("RadicalGunslinger_Ev", new Sfx(voicePath + "RadicalGunslinger_Ev.wav"));
            reflectedMap.put("SageCommander", new Sfx(voicePath + "SageCommander.wav"));
            reflectedMap.put("Seofon", new Sfx(voicePath + "Seofon.wav"));
            reflectedMap.put("Seofon_SA", new Sfx(voicePath + "Seofon_SA.wav"));
            reflectedMap.put("Seofon_SSA", new Sfx(voicePath + "Seofon_SSA.wav"));
            reflectedMap.put("Sera", new Sfx(voicePath + "Sera.wav"));
            reflectedMap.put("Sera_Ev", new Sfx(voicePath + "Sera_Ev.wav"));
            reflectedMap.put("StrikeproneGuardian", new Sfx(voicePath + "StrikeproneGuardian.wav"));
            reflectedMap.put("StrokeOfConviction", new Sfx(voicePath + "StrokeOfConviction.wav"));
            reflectedMap.put("SunnyDayEncounter", new Sfx(voicePath + "SunnyDayEncounter.wav"));
            reflectedMap.put("UsurpingSpineblade", new Sfx(voicePath + "UsurpingSpineblade.wav"));
            reflectedMap.put("WarriorWing", new Sfx(voicePath + "WarriorWing.wav"));
            reflectedMap.put("WarriorWing_Ev", new Sfx(voicePath + "WarriorWing_Ev.wav"));
            reflectedMap.put("WhitePaladin", new Sfx(voicePath + "WhitePaladin.wav"));
            reflectedMap.put("Albert", new Sfx(voicePath + "Albert.wav"));
            reflectedMap.put("Alwida", new Sfx(voicePath + "Alwida.wav"));
            reflectedMap.put("Alwida_Pow", new Sfx(voicePath + "Alwida_Pow.wav"));
            reflectedMap.put("Cybercannoneer", new Sfx(voicePath + "Cybercannoneer.wav"));
            reflectedMap.put("Grayson", new Sfx(voicePath + "Grayson.wav"));
            reflectedMap.put("Jeno", new Sfx(voicePath + "Jeno.wav"));
            reflectedMap.put("Johann", new Sfx(voicePath + "Johann.wav"));
            reflectedMap.put("Latham", new Sfx(voicePath + "Latham.wav"));
            reflectedMap.put("LevinArcher", new Sfx(voicePath + "LevinArcher.wav"));
            reflectedMap.put("LevinArcher_Ev", new Sfx(voicePath + "LevinArcher_Ev.wav"));
            reflectedMap.put("LevinBeastmaster", new Sfx(voicePath + "LevinBeastmaster.wav"));
            reflectedMap.put("LevinBeastmaster_Ev", new Sfx(voicePath + "LevinBeastmaster_Ev.wav"));
            reflectedMap.put("LevinScholar", new Sfx(voicePath + "LevinScholar.wav"));
            reflectedMap.put("Lounes", new Sfx(voicePath + "Lounes.wav"));
            reflectedMap.put("Lounes_Eh", new Sfx(voicePath + "Lounes_Eh.wav"));
            reflectedMap.put("Mena", new Sfx(voicePath + "Mena.wav"));
            reflectedMap.put("Mina", new Sfx(voicePath + "Mina.wav"));
            reflectedMap.put("Mona", new Sfx(voicePath + "Mona.wav"));
            reflectedMap.put("Mena_Ev", new Sfx(voicePath + "Mena_Ev.wav"));
            reflectedMap.put("Mina_Ev", new Sfx(voicePath + "Mina_Ev.wav"));
            reflectedMap.put("Mona_Ev", new Sfx(voicePath + "Mona_Ev.wav"));
            reflectedMap.put("Nahtnaught", new Sfx(voicePath + "Nahtnaught.wav"));
            reflectedMap.put("Patrick", new Sfx(voicePath + "Patrick.wav"));
            reflectedMap.put("Pirate", new Sfx(voicePath + "Pirate.wav"));
            reflectedMap.put("Pirate_Atk", new Sfx(voicePath + "Pirate_Atk.wav"));
            reflectedMap.put("StampedingFortress", new Sfx(voicePath + "StampedingFortress.wav"));
            reflectedMap.put("Viking", new Sfx(voicePath + "Viking.wav"));
            reflectedMap.put("Viking_Atk", new Sfx(voicePath + "Viking_Atk.wav"));
            reflectedMap.put("WhiteTiger", new Sfx(voicePath + "WhiteTiger.wav"));
            reflectedMap.put("Nahtnaught_Eh", new Sfx(voicePath + "Nahtnaught_Eh.wav"));
            reflectedMap.put("TyrantsOrder", new Sfx(voicePath + "TyrantsOrder.wav"));
            reflectedMap.put("Jeno_Co", new Sfx(voicePath + "Jeno_Co.wav"));
            reflectedMap.put("LevinBeastmaster_Co", new Sfx(voicePath + "LevinBeastmaster_Co.wav"));
            reflectedMap.put("LevinScholar_Co", new Sfx(voicePath + "LevinScholar_Co.wav"));
            reflectedMap.put("Lounes_Co", new Sfx(voicePath + "Lounes_Co.wav"));
            reflectedMap.put("Mena_Co", new Sfx(voicePath + "Mena_Co.wav"));
            reflectedMap.put("Mina_Co", new Sfx(voicePath + "Mina_Co.wav"));
            reflectedMap.put("Mona_Co", new Sfx(voicePath + "Mona_Co.wav"));
            reflectedMap.put("Royal_Evolve0", new Sfx(voicePath + "Royal_Evolve0.wav"));
            reflectedMap.put("Royal_Evolve1", new Sfx(voicePath + "Royal_Evolve1.wav"));
            reflectedMap.put("Royal_Evolve2", new Sfx(voicePath + "Royal_Evolve2.wav"));
            reflectedMap.put("Elf_Evolve0", new Sfx(voicePath + "Elf_Evolve0.wav"));
            reflectedMap.put("Elf_Evolve1", new Sfx(voicePath + "Elf_Evolve1.wav"));
            reflectedMap.put("Elf_Evolve2", new Sfx(voicePath + "Elf_Evolve2.wav"));
            reflectedMap.put("Necromancer_Evolve0", new Sfx(voicePath + "Necromancer_Evolve0.wav"));
            reflectedMap.put("Necromancer_Evolve1", new Sfx(voicePath + "Necromancer_Evolve1.wav"));
            reflectedMap.put("Necromancer_Evolve2", new Sfx(voicePath + "Necromancer_Evolve2.wav"));
            reflectedMap.put("Nemesis_Evolve0", new Sfx(voicePath + "Nemesis_Evolve0.wav"));
            reflectedMap.put("Nemesis_Evolve1", new Sfx(voicePath + "Nemesis_Evolve1.wav"));
            reflectedMap.put("Nemesis_Evolve2", new Sfx(voicePath + "Nemesis_Evolve2.wav"));
            reflectedMap.put("Vampire_Evolve0", new Sfx(voicePath + "Vampire_Evolve0.wav"));
            reflectedMap.put("Vampire_Evolve1", new Sfx(voicePath + "Vampire_Evolve1.wav"));
            reflectedMap.put("Vampire_Evolve2", new Sfx(voicePath + "Vampire_Evolve2.wav"));
            reflectedMap.put("Witchcraft_Evolve0", new Sfx(voicePath + "Witchcraft_Evolve0.wav"));
            reflectedMap.put("Witchcraft_Evolve1", new Sfx(voicePath + "Witchcraft_Evolve1.wav"));
            reflectedMap.put("Witchcraft_Evolve2", new Sfx(voicePath + "Witchcraft_Evolve2.wav"));
            reflectedMap.put("Alexander", new Sfx(voicePath + "Alexander.wav"));
            reflectedMap.put("CaptainWalfrid", new Sfx(voicePath + "CaptainWalfrid.wav"));
            reflectedMap.put("Garven", new Sfx(voicePath + "Garven.wav"));
            reflectedMap.put("Kagemitsu", new Sfx(voicePath + "Kagemitsu.wav"));
            reflectedMap.put("Leonidas", new Sfx(voicePath + "Leonidas.wav"));
            reflectedMap.put("Reinhardt", new Sfx(voicePath + "Reinhardt.wav"));
            reflectedMap.put("Reinhardt_Pow", new Sfx(voicePath + "Reinhardt_Pow.wav"));
            reflectedMap.put("YuriusLevinDuke", new Sfx(voicePath + "YuriusLevinDuke.wav"));
            reflectedMap.put("YuriusLevinDuke_Co", new Sfx(voicePath + "YuriusLevinDuke_Co.wav"));
            reflectedMap.put("FatalSpellbomb", new Sfx(voicePath + "FatalSpellbomb.wav"));
            reflectedMap.put("HolyPurebomb", new Sfx(voicePath + "HolyPurebomb.wav"));
            reflectedMap.put("Valse", new Sfx(voicePath + "Valse.wav"));
            reflectedMap.put("Bishop_Selected", new Sfx(voicePath + "Bishop_Selected.wav"));
            reflectedMap.put("Bishop_Hurt", new Sfx(voicePath + "Bishop_Hurt.wav"));
            reflectedMap.put("Bishop_Hurt2", new Sfx(voicePath + "Bishop_Hurt2.wav"));
            reflectedMap.put("Bishop_Hurt3", new Sfx(voicePath + "Bishop_Hurt3.wav"));
            reflectedMap.put("Bishop_Hurt4", new Sfx(voicePath + "Bishop_Hurt4.wav"));
            reflectedMap.put("Royal_Victory", new Sfx(voicePath + "Royal_Victory.wav"));
            reflectedMap.put("DreadHound", new Sfx(voicePath + "DreadHound.wav"));
            reflectedMap.put("Ernesta", new Sfx(voicePath + "Ernesta.wav"));
            reflectedMap.put("Ernesta_Ev", new Sfx(voicePath + "Ernesta_Ev.wav"));
            reflectedMap.put("Ilmisuna", new Sfx(voicePath + "Ilmisuna.wav"));
            reflectedMap.put("Ilmisuna_Ev", new Sfx(voicePath + "Ilmisuna_Ev.wav"));
            reflectedMap.put("MasterDealer", new Sfx(voicePath + "MasterDealer.wav"));
            reflectedMap.put("GuildAssembly", new Sfx(voicePath + "GuildAssembly.wav"));
            reflectedMap.put("Cernunnos", new Sfx(voicePath + "Cernunnos.wav"));
            reflectedMap.put("HolyEnchanter", new Sfx(voicePath + "HolyEnchanter.wav"));
            reflectedMap.put("PunishmentSniper", new Sfx(voicePath + "PunishmentSniper.wav"));
            reflectedMap.put("SeraphLapis", new Sfx(voicePath + "SeraphLapis.wav"));
            reflectedMap.put("Ra", new Sfx(voicePath + "Ra.wav"));
            reflectedMap.put("OmenOfRepose", new Sfx(voicePath + "OmenOfRepose.wav"));
            reflectedMap.put("Agnes", new Sfx(voicePath + "Agnes.wav"));
            reflectedMap.put("Elana", new Sfx(voicePath + "Elana.wav"));
            reflectedMap.put("IronknuckleNun", new Sfx(voicePath + "IronknuckleNun.wav"));
            reflectedMap.put("HolyHector", new Sfx(voicePath + "HolyHector.wav"));
            reflectedMap.put("Abdiel", new Sfx(voicePath + "Abdiel.wav"));
            reflectedMap.put("Wilbert", new Sfx(voicePath + "Wilbert.wav"));
            reflectedMap.put("Anvelt", new Sfx(voicePath + "Anvelt.wav"));
            reflectedMap.put("Anvelt_Acc", new Sfx(voicePath + "Anvelt_Acc.wav"));
            reflectedMap.put("DirtyPriest", new Sfx(voicePath + "DirtyPriest.wav"));
            reflectedMap.put("DirtyPriest_Acc", new Sfx(voicePath + "DirtyPriest_Acc.wav"));
            reflectedMap.put("RobowingPrecant", new Sfx(voicePath + "RobowingPrecant.wav"));
            reflectedMap.put("HeavenlyKnight", new Sfx(voicePath + "HeavenlyKnight.wav"));
            reflectedMap.put("Charaton", new Sfx(voicePath + "Charaton.wav"));
            reflectedMap.put("SkullFane", new Sfx(voicePath + "SkullFane.wav"));
            reflectedMap.put("HereticPriest", new Sfx(voicePath + "HereticPriest.wav"));
            reflectedMap.put("UnlikelyFellowship", new Sfx(voicePath + "UnlikelyFellowship.wav"));
            reflectedMap.put("Selena", new Sfx(voicePath + "Selena.wav"));
            reflectedMap.put("HeavenFire", new Sfx(voicePath + "HeavenFire.wav"));
            reflectedMap.put("RobowhipReverend", new Sfx(voicePath + "RobowhipReverend.wav"));
            reflectedMap.put("RobowhipReverendPower", new Sfx(voicePath + "RobowhipReverendPower.wav"));
            reflectedMap.put("HeavenlyAegis", new Sfx(voicePath + "HeavenlyAegis.wav"));
            reflectedMap.put("Limonia", new Sfx(voicePath + "Limonia.wav"));
            reflectedMap.put("SalvationLimonia", new Sfx(voicePath + "SalvationLimonia.wav"));
            reflectedMap.put("Vice", new Sfx(voicePath + "Vice.wav"));
            reflectedMap.put("VicePower", new Sfx(voicePath + "VicePower.wav"));
            reflectedMap.put("KLT", new Sfx(voicePath + "KLT.wav"));
            reflectedMap.put("DDK", new Sfx(voicePath + "DDK.wav"));
            reflectedMap.put("TheUntrueGod", new Sfx(voicePath + "TheUntrueGod.wav"));
            reflectedMap.put("MarkUnleashed", new Sfx(voicePath + "MarkUnleashed.wav"));
            reflectedMap.put("MarkOfBalance", new Sfx(voicePath + "MarkOfBalance.wav"));
            reflectedMap.put("Marlone", new Sfx(voicePath + "Marlone.wav"));
            reflectedMap.put("Marlone2", new Sfx(voicePath + "Marlone2.wav"));
            reflectedMap.put("PrismSwing", new Sfx(voicePath + "PrismSwing.wav"));
            reflectedMap.put("PeaceWeaver", new Sfx(voicePath + "PeaceWeaver.wav"));
            reflectedMap.put("Munyaru", new Sfx(voicePath + "Munyaru.wav"));
            reflectedMap.put("SneakAttack", new Sfx(voicePath + "SneakAttack.wav"));
            reflectedMap.put("MunyaruRaid", new Sfx(voicePath + "MunyaruRaid.wav"));
            reflectedMap.put("ErisPrayer", new Sfx(voicePath + "ErisPrayer.wav"));
            reflectedMap.put("MajorPrayers", new Sfx(voicePath + "MajorPrayers.wav"));
            reflectedMap.put("RealmOfRepose", new Sfx(voicePath + "RealmOfRepose.wav"));
            reflectedMap.put("Jatelant", new Sfx(voicePath + "Jatelant.wav"));
            reflectedMap.put("TheStrength", new Sfx(voicePath + "TheStrength.wav"));
            reflectedMap.put("TheStrength_Acc", new Sfx(voicePath + "TheStrength_Acc.wav"));
            reflectedMap.put("QueenOfHope", new Sfx(voicePath + "QueenOfHope.wav"));
            reflectedMap.put("QueenOfHopePower", new Sfx(voicePath + "QueenOfHopePower.wav"));
            reflectedMap.put("Muse", new Sfx(voicePath + "Muse.wav"));
            reflectedMap.put("MusePrincess", new Sfx(voicePath + "MusePrincess.wav"));
            reflectedMap.put("MusePrincess_EH", new Sfx(voicePath + "MusePrincess_EH.wav"));
            reflectedMap.put("MusePrincessPower", new Sfx(voicePath + "MusePrincessPower.wav"));
            reflectedMap.put("PrimalShipwright", new Sfx(voicePath + "PrimalShipwright.wav"));
            reflectedMap.put("PrimalShipwright_Acc", new Sfx(voicePath + "Primalshipwright_Acc.wav"));
            reflectedMap.put("Garuda", new Sfx(voicePath + "Garuda.wav"));
            reflectedMap.put("Garuda2", new Sfx(voicePath + "Garuda2.wav"));
            reflectedMap.put("Garuda2Power", new Sfx(voicePath + "Garuda2Power.wav"));
            reflectedMap.put("Garuda2_Acc", new Sfx(voicePath + "Garuda2_Acc.wav"));
            reflectedMap.put("Garuda3", new Sfx(voicePath + "Garuda3.wav"));
            reflectedMap.put("Jeanne", new Sfx(voicePath + "Jeanne.wav"));
            reflectedMap.put("Jeanne2", new Sfx(voicePath + "Jeanne2.wav"));
            reflectedMap.put("Jeanne3", new Sfx(voicePath + "Jeanne3.wav"));
            reflectedMap.put("Jeanne4", new Sfx(voicePath + "Jeanne4.wav"));
            reflectedMap.put("Jeanne5", new Sfx(voicePath + "Jeanne5.wav"));
            reflectedMap.put("Eris", new Sfx(voicePath + "Eris.wav"));
            reflectedMap.put("RelicSphere", new Sfx(voicePath + "RelicSphere.wav"));
            reflectedMap.put("RelicPrism", new Sfx(voicePath + "RelicPrism.wav"));
            reflectedMap.put("RelicTorus", new Sfx(voicePath + "RelicTorus.wav"));
            reflectedMap.put("RelicPlaton", new Sfx(voicePath + "RelicPlaton.wav"));
            reflectedMap.put("Saren", new Sfx(voicePath + "Saren.wav"));
            reflectedMap.put("Saren_UB", new Sfx(voicePath + "Saren_UB.wav"));
            reflectedMap.put("Lorena", new Sfx(voicePath + "Lorena.wav"));
            reflectedMap.put("Lorena2", new Sfx(voicePath + "Lorena2.wav"));
            reflectedMap.put("LorenaWater", new Sfx(voicePath + "LorenaWater.wav"));
            reflectedMap.put("LorenaPunch", new Sfx(voicePath + "LorenaPunch.wav"));
            reflectedMap.put("ImperialSaint", new Sfx(voicePath + "ImperialSaint.wav"));
            reflectedMap.put("Valdain", new Sfx(voicePath + "Valdain.wav"));
            reflectedMap.put("ShadowCorrosion", new Sfx(voicePath + "ShadowCorrosion.wav"));
            reflectedMap.put("Sukuna", new Sfx(voicePath + "Sukuna.wav"));
            reflectedMap.put("Walfrid", new Sfx(voicePath + "Walfrid.wav"));
            reflectedMap.put("Leod", new Sfx(voicePath + "Leod.wav"));
            reflectedMap.put("Assassin", new Sfx(voicePath + "Assassin.wav"));
            reflectedMap.put("VeiledReckoning", new Sfx(voicePath + "VeiledReckoning.wav"));
            reflectedMap.put("Leod2", new Sfx(voicePath + "Leod2.wav"));
            reflectedMap.put("Leod2Power", new Sfx(voicePath + "Leod2Power.wav"));
            reflectedMap.put("ShinobiTanuki", new Sfx(voicePath + "ShinobiTanuki.wav"));
            reflectedMap.put("Tsubaki", new Sfx(voicePath + "Tsubaki.wav"));
            reflectedMap.put("BladeDance", new Sfx(voicePath + "BladeDance.wav"));
            reflectedMap.put("BladeDance_EH", new Sfx(voicePath + "BladeDance_EH.wav"));
            reflectedMap.put("ShadowedMemories", new Sfx(voicePath + "ShadowedMemories.wav"));
            reflectedMap.put("Kuon2", new Sfx(voicePath + "Kuon2.wav"));
            reflectedMap.put("Ralmia2", new Sfx(voicePath + "Ralmia2.wav"));
            reflectedMap.put("Wilbert2", new Sfx(voicePath + "Wilbert2.wav"));
            reflectedMap.put("Amataz2", new Sfx(voicePath + "Amataz2.wav"));
            reflectedMap.put("RejuvenatingResurrection", new Sfx(voicePath + "RejuvenatingResurrection.wav"));
            reflectedMap.put("MasterCook", new Sfx(voicePath + "MasterCook.wav"));
            reflectedMap.put("OmnifacedArchdemon", new Sfx(voicePath + "OmnifacedArchdemon.wav"));
            reflectedMap.put("EvilEyeDemon", new Sfx(voicePath + "EvilEyeDemon.wav"));
            reflectedMap.put("EvilEyeDemon_Acc", new Sfx(voicePath + "EvilEyeDemon_Acc.wav"));
            reflectedMap.put("PhantomBloomPredator", new Sfx(voicePath + "PhantomBloomPredator.wav"));
            reflectedMap.put("Alberta", new Sfx(voicePath + "Alberta.wav"));
            reflectedMap.put("AlbertaPower", new Sfx(voicePath + "AlbertaPower.wav"));
            reflectedMap.put("Shiro", new Sfx(voicePath + "Shiro.wav"));
            reflectedMap.put("TheChariot", new Sfx(voicePath + "TheChariot.wav"));
            reflectedMap.put("TheChariotPower", new Sfx(voicePath + "TheChariotPower.wav"));
            reflectedMap.put("TheChariot_I", new Sfx(voicePath + "TheChariot_I.wav"));
            reflectedMap.put("TheChariot_IPower", new Sfx(voicePath + "TheChariot_IPower.wav"));
            reflectedMap.put("EvidenceOfOne", new Sfx(voicePath + "EvidenceOfOne.wav"));
            reflectedMap.put("RearriveOne", new Sfx(voicePath + "RearriveOne.wav"));
            reflectedMap.put("ReturningMelody", new Sfx(voicePath + "ReturningMelody.wav"));
            reflectedMap.put("SoloOfMelody", new Sfx(voicePath + "SoloOfMelody.wav"));
            reflectedMap.put("WhiteArtifact2", new Sfx(voicePath + "WhiteArtifact2.wav"));
            reflectedMap.put("BlackArtifact2", new Sfx(voicePath + "BlackArtifact2.wav"));
            reflectedMap.put("ExpandingScreaming", new Sfx(voicePath + "ExpandingScreaming.wav"));
            reflectedMap.put("ResentfulScreaming", new Sfx(voicePath + "ResentfulScreaming.wav"));
            reflectedMap.put("EternalDispair", new Sfx(voicePath + "EternalDispair.wav"));
            reflectedMap.put("FlowOfDispair", new Sfx(voicePath + "FlowOfDispair.wav"));
            reflectedMap.put("CorruptionOfUnkilling", new Sfx(voicePath + "CorruptionOfUnkilling.wav"));
            reflectedMap.put("ShootOfUnkilling", new Sfx(voicePath + "ShootOfUnkilling.wav"));
            reflectedMap.put("ShootOfUnkilling_EH", new Sfx(voicePath + "ShootOfUnkilling_EH.wav"));
            reflectedMap.put("LoathingDesire", new Sfx(voicePath + "LoathingDesire.wav"));
            reflectedMap.put("WingsOfDesire", new Sfx(voicePath + "WingsOfDesire.wav"));
            reflectedMap.put("WingsOfDesire_EH", new Sfx(voicePath + "WingsOfDesire_EH.wav"));
            reflectedMap.put("UnleashTruth", new Sfx(voicePath + "UnleashTruth.wav"));
            reflectedMap.put("PerjuryOfTruth", new Sfx(voicePath + "PerjuryOfTruth.wav"));
            reflectedMap.put("UltimateHollow", new Sfx(voicePath + "UltimateHollow.wav"));
            reflectedMap.put("LightOfHollow", new Sfx(voicePath + "LightOfHollow.wav"));
            reflectedMap.put("OmenOfOne2", new Sfx(voicePath + "OmenOfOne2.wav"));
            reflectedMap.put("OmenOfDestruction2", new Sfx(voicePath + "OmenOfDestruction2.wav"));
            reflectedMap.put("OmenOfSilence2", new Sfx(voicePath + "OmenOfSilence2.wav"));
            reflectedMap.put("OmenOfRepose2", new Sfx(voicePath + "OmenOfRepose2.wav"));
            reflectedMap.put("OmenOfUnkilling2", new Sfx(voicePath + "OmenOfUnkilling2.wav"));
            reflectedMap.put("OmenOfLust2", new Sfx(voicePath + "OmenOfLust2.wav"));
            reflectedMap.put("LustfulDesire", new Sfx(voicePath + "LustfulDesire.wav"));
            reflectedMap.put("OmenOfTruth2", new Sfx(voicePath + "OmenOfTruth2.wav"));
            reflectedMap.put("Octrice2", new Sfx(voicePath + "Octrice2.wav"));
            reflectedMap.put("OmenOfCraving", new Sfx(voicePath + "OmenOfCraving.wav"));
            reflectedMap.put("OmenOfCraving2", new Sfx(voicePath + "OmenOfCraving2.wav"));
            reflectedMap.put("RavenousSweetness", new Sfx(voicePath + "RavenousSweetness.wav"));
            reflectedMap.put("BirthOfRavenous", new Sfx(voicePath + "BirthOfRavenous.wav"));
            reflectedMap.put("AdherentOfDesire", new Sfx(voicePath + "AdherentOfDesire.wav"));
            reflectedMap.put("AdherentOfScream", new Sfx(voicePath + "AdherentOfScream.wav"));
            reflectedMap.put("AdherentOfElimination", new Sfx(voicePath + "AdherentOfElimination.wav"));
            reflectedMap.put("AdherentOfElimination_Eff", new Sfx(voicePath + "AdherentOfElimination_Eff.wav"));
            reflectedMap.put("AdherentOfMelody", new Sfx(voicePath + "AdherentOfMelody.wav"));
            reflectedMap.put("AdherentOfHollow", new Sfx(voicePath + "AdherentOfHollow.wav"));
            reflectedMap.put("AdherentOfHollow_Eff", new Sfx(voicePath + "AdherentOfHollow_Eff.wav"));
            reflectedMap.put("AdherentOfHollow_Ev", new Sfx(voicePath + "AdherentOfHollow_Ev.wav"));
            reflectedMap.put("AdherentOfDispair", new Sfx(voicePath + "AdherentOfDispair.wav"));
            reflectedMap.put("AdherentOfDispairPower", new Sfx(voicePath + "AdherentOfDispairPower.wav"));
            reflectedMap.put("AdherentOfAnnihilationPower", new Sfx(voicePath + "AdherentOfAnnihilationPower.wav"));
            reflectedMap.put("AdherentOfAnnihilation", new Sfx(voicePath + "AdherentOfAnnihilation.wav"));
            reflectedMap.put("Albert2", new Sfx(voicePath + "Albert2.wav"));
            reflectedMap.put("Albert2_EH", new Sfx(voicePath + "Albert2_EH.wav"));
            reflectedMap.put("Valdain2", new Sfx(voicePath + "Valdain2.wav"));
            reflectedMap.put("Kyaru_Select", new Sfx(voicePath + "Kyaru_Select.wav"));
            reflectedMap.put("Kyaru_Hurt", new Sfx(voicePath + "Kyaru_Hurt.wav"));
            reflectedMap.put("Kyaru_Hurt2", new Sfx(voicePath + "Kyaru_Hurt2.wav"));
            reflectedMap.put("Kyaru_Hurt3", new Sfx(voicePath + "Kyaru_Hurt3.wav"));
            reflectedMap.put("Kyaru_Hurt4", new Sfx(voicePath + "Kyaru_Hurt4.wav"));
            reflectedMap.put("Kokkoro_Hurt", new Sfx(voicePath + "Kokkoro_Hurt.wav"));
            reflectedMap.put("Kokkoro_Hurt2", new Sfx(voicePath + "Kokkoro_Hurt2.wav"));
            reflectedMap.put("Kokkoro_Hurt3", new Sfx(voicePath + "Kokkoro_Hurt3.wav"));
            reflectedMap.put("Kokkoro_Hurt4", new Sfx(voicePath + "Kokkoro_Hurt4.wav"));
            reflectedMap.put("Kokkoro_Select", new Sfx(voicePath + "Kokkoro_Select.wav"));
            reflectedMap.put("Miyako_Hurt", new Sfx(voicePath + "Miyako_Hurt.wav"));
            reflectedMap.put("Miyako_Hurt2", new Sfx(voicePath + "Miyako_Hurt2.wav"));
            reflectedMap.put("Miyako_Hurt3", new Sfx(voicePath + "Miyako_Hurt3.wav"));
            reflectedMap.put("Miyako_Hurt4", new Sfx(voicePath + "Miyako_Hurt4.wav"));
            reflectedMap.put("Miyako_Select", new Sfx(voicePath + "Miyako_Select.wav"));
            reflectedMap.put("Shizuru_Hurt", new Sfx(voicePath + "Shizuru_Hurt.wav"));
            reflectedMap.put("Shizuru_Hurt2", new Sfx(voicePath + "Shizuru_Hurt2.wav"));
            reflectedMap.put("Shizuru_Hurt3", new Sfx(voicePath + "Shizuru_Hurt3.wav"));
            reflectedMap.put("Shizuru_Hurt4", new Sfx(voicePath + "Shizuru_Hurt4.wav"));
            reflectedMap.put("Shizuru_Select", new Sfx(voicePath + "Shizuru_Select.wav"));
            reflectedMap.put("Anne_Hurt", new Sfx(voicePath + "Anne_Hurt.wav"));
            reflectedMap.put("Anne_Hurt2", new Sfx(voicePath + "Anne_Hurt2.wav"));
            reflectedMap.put("Anne_Hurt3", new Sfx(voicePath + "Anne_Hurt3.wav"));
            reflectedMap.put("Anne_Hurt4", new Sfx(voicePath + "Anne_Hurt4.wav"));
            reflectedMap.put("Anne_Select", new Sfx(voicePath + "Anne_Select.wav"));
            reflectedMap.put("Io_Select", new Sfx(voicePath + "Io_Select.wav"));
            reflectedMap.put("Io_Hurt", new Sfx(voicePath + "Io_Hurt.wav"));
            reflectedMap.put("Io_Hurt2", new Sfx(voicePath + "Io_Hurt2.wav"));
            reflectedMap.put("Io_Hurt3", new Sfx(voicePath + "Io_Hurt3.wav"));
            reflectedMap.put("Io_Hurt4", new Sfx(voicePath + "Io_Hurt4.wav"));
            reflectedMap.put("Yukari_Select", new Sfx(voicePath + "Yukari_Select.wav"));
            reflectedMap.put("Yukari_Hurt", new Sfx(voicePath + "Yukari_Hurt.wav"));
            reflectedMap.put("Yukari_Hurt2", new Sfx(voicePath + "Yukari_Hurt2.wav"));
            reflectedMap.put("Yukari_Hurt3", new Sfx(voicePath + "Yukari_Hurt3.wav"));
            reflectedMap.put("Yukari_Hurt4", new Sfx(voicePath + "Yukari_Hurt4.wav"));
            reflectedMap.put("Ralmia_Hurt", new Sfx(voicePath + "Ralmia_Hurt.wav"));
            reflectedMap.put("Ralmia_Hurt2", new Sfx(voicePath + "Ralmia_Hurt2.wav"));
            reflectedMap.put("Ralmia_Hurt3", new Sfx(voicePath + "Ralmia_Hurt3.wav"));
            reflectedMap.put("Ralmia_Hurt4", new Sfx(voicePath + "Ralmia_Hurt4.wav"));
            reflectedMap.put("Ralmia_Select", new Sfx(voicePath + "Ralmia_Select.wav"));
            reflectedMap.put("HalloweenXCW_Hurt", new Sfx(voicePath + "HalloweenXCW_Hurt.wav"));
            reflectedMap.put("HalloweenXCW_Hurt2", new Sfx(voicePath + "HalloweenXCW_Hurt2.wav"));
            reflectedMap.put("HalloweenXCW_Hurt3", new Sfx(voicePath + "HalloweenXCW_Hurt3.wav"));
            reflectedMap.put("HalloweenXCW_Select", new Sfx(voicePath + "HalloweenXCW_Select.wav"));
            reflectedMap.put("Saren_Summer_Hurt", new Sfx(voicePath + "Saren_Summer_Hurt.wav"));
            reflectedMap.put("Saren_Summer_Hurt2", new Sfx(voicePath + "Saren_Summer_Hurt2.wav"));
            reflectedMap.put("Saren_Summer_Hurt3", new Sfx(voicePath + "Saren_Summer_Hurt3.wav"));
            reflectedMap.put("Saren_Summer_Select", new Sfx(voicePath + "Saren_Summer_Select.wav"));
            reflectedMap.put("Shinobu_Hurt", new Sfx(voicePath + "Shinobu_Hurt.wav"));
            reflectedMap.put("Shinobu_Hurt2", new Sfx(voicePath + "Shinobu_Hurt2.wav"));
            reflectedMap.put("Shinobu_Hurt3", new Sfx(voicePath + "Shinobu_Hurt3.wav"));
            reflectedMap.put("Shinobu_Hurt4", new Sfx(voicePath + "Shinobu_Hurt4.wav"));
            reflectedMap.put("Shinobu_Select", new Sfx(voicePath + "Shinobu_Select.wav"));
            reflectedMap.put("Skullfather", new Sfx(voicePath + "Skullfather.wav"));
            reflectedMap.put("Erika", new Sfx(voicePath + "Erika.wav"));
            reflectedMap.put("Erika_Eff", new Sfx(voicePath + "Erika_Eff.wav"));
            reflectedMap.put("SecretSkill", new Sfx(voicePath + "SecretSkill.wav"));
            reflectedMap.put("SecretSkill_Eff", new Sfx(voicePath + "SecretSkill_Eff.wav"));
            reflectedMap.put("OtherworldGatekeeper", new Sfx(voicePath + "OtherworldGatekeeper.wav"));
            reflectedMap.put("Ginsetsu2_Eff", new Sfx(voicePath + "Ginsetsu2_Eff.wav"));
            reflectedMap.put("Ginsetsu2", new Sfx(voicePath + "Ginsetsu2.wav"));
            reflectedMap.put("PrinceCatacomb", new Sfx(voicePath + "PrinceCatacomb.wav"));
            reflectedMap.put("DesperadosShot", new Sfx(voicePath + "DesperadosShot.wav"));
            reflectedMap.put("Spector", new Sfx(voicePath + "Spector.wav"));
            reflectedMap.put("HonoredFrontguardGeneral", new Sfx(voicePath + "HonoredFrontguardGeneral.wav"));
            reflectedMap.put("Athos", new Sfx(voicePath + "Athos.wav"));
            reflectedMap.put("AthosPower", new Sfx(voicePath + "AthosPower.wav"));
            reflectedMap.put("Aramis", new Sfx(voicePath + "Aramis.wav"));
            reflectedMap.put("AramisPower", new Sfx(voicePath + "AramisPower.wav"));
            reflectedMap.put("Porthos", new Sfx(voicePath + "Porthos.wav"));
            reflectedMap.put("PorthosPower", new Sfx(voicePath + "PorthosPower.wav"));
            reflectedMap.put("DArtagnan", new Sfx(voicePath + "DArtagnan.wav"));
            reflectedMap.put("MusketeersVow", new Sfx(voicePath + "MusketeersVow.wav"));
            reflectedMap.put("MusketeersVow_EH", new Sfx(voicePath + "MusketeersVow_EH.wav"));
            reflectedMap.put("Naht_A0", new Sfx(voicePath + "Naht_A0.wav"));
            reflectedMap.put("Naht_A1", new Sfx(voicePath + "Naht_A1.wav"));
            reflectedMap.put("Naht_A2", new Sfx(voicePath + "Naht_A2.wav"));
            reflectedMap.put("Naht_A3", new Sfx(voicePath + "Naht_A3.wav"));
            reflectedMap.put("Naht_A4", new Sfx(voicePath + "Naht_A4.wav"));
            reflectedMap.put("Naht_A5", new Sfx(voicePath + "Naht_A5.wav"));
            reflectedMap.put("Naht_C", new Sfx(voicePath + "Naht_C.wav"));
            reflectedMap.put("Naht_D1", new Sfx(voicePath + "Naht_D1.wav"));
            reflectedMap.put("Naht_D2", new Sfx(voicePath + "Naht_D2.wav"));
            reflectedMap.put("Naht_D3", new Sfx(voicePath + "Naht_D3.wav"));
            reflectedMap.put("Naht_D4", new Sfx(voicePath + "Naht_D4.wav"));
            reflectedMap.put("Naht_D5", new Sfx(voicePath + "Naht_D5.wav"));
            reflectedMap.put("Naht_P1", new Sfx(voicePath + "Naht_P1.wav"));
            reflectedMap.put("Naht_P2", new Sfx(voicePath + "Naht_P2.wav"));
            reflectedMap.put("Naht_P3", new Sfx(voicePath + "Naht_P3.wav"));
            reflectedMap.put("IC_Stage2", new Sfx(voicePath + "IC_Stage2.wav"));
            reflectedMap.put("IC_Stage2_A1", new Sfx(voicePath + "IC_Stage2_A1.wav"));
            reflectedMap.put("IC_Stage2_A2", new Sfx(voicePath + "IC_Stage2_A2.wav"));
            reflectedMap.put("IC_Stage2_A3", new Sfx(voicePath + "IC_Stage2_A3.wav"));
            reflectedMap.put("Maiser_Story", new Sfx(voicePath + "Maiser_Story.wav"));
            reflectedMap.put("Selena_Story", new Sfx(voicePath + "Selena_Story.wav"));
            reflectedMap.put("Illganeau_Story", new Sfx(voicePath + "Illganeau_Story.wav"));
            reflectedMap.put("Sekka_Story", new Sfx(voicePath + "Sekka_Story.wav"));
            reflectedMap.put("Dracu_Story", new Sfx(voicePath + "Dracu_Story.wav"));
            reflectedMap.put("Kagero_Story", new Sfx(voicePath + "Kagero_Story.wav"));
            reflectedMap.put("VerdictWord", new Sfx(voicePath + "VerdictWord.wav"));
            reflectedMap.put("AbsoluteOrder", new Sfx(voicePath + "AbsoluteOrder.wav"));
            reflectedMap.put("Zecilwenshe_A", new Sfx(voicePath + "Zecilwenshe_A.wav"));
            reflectedMap.put("Zecilwenshe_R", new Sfx(voicePath + "Zecilwenshe_R.wav"));
            reflectedMap.put("Zecilwenshe_R2", new Sfx(voicePath + "Zecilwenshe_R2.wav"));
            reflectedMap.put("Zecilwenshe_R3", new Sfx(voicePath + "Zecilwenshe_R3.wav"));
            reflectedMap.put("Satanael", new Sfx(voicePath + "Satanael.wav"));
            reflectedMap.put("FlameNGlass2", new Sfx(voicePath + "FlameNGlass2.wav"));
            reflectedMap.put("Taketsumi", new Sfx(voicePath + "Taketsumi.wav"));
            reflectedMap.put("HeroOfTheHunt", new Sfx(voicePath + "HeroOfTheHunt.wav"));
            reflectedMap.put("Anisage", new Sfx(voicePath + "Anisage.wav"));
            reflectedMap.put("UndyingResolve", new Sfx(voicePath + "UndyingResolve.wav"));
            reflectedMap.put("SoulGuide", new Sfx(voicePath + "SoulGuid.wav"));
            reflectedMap.put("Itsurugi", new Sfx(voicePath + "Itsurugi.wav"));
            reflectedMap.put("WolflingStruggle", new Sfx(voicePath + "WolflingStruggle.wav"));
            reflectedMap.put("Yukishima", new Sfx(voicePath + "Yukishima.wav"));
            reflectedMap.put("Yukishima_EH", new Sfx(voicePath + "Yukishima_EH.wav"));
            reflectedMap.put("Hozumi", new Sfx(voicePath + "Hozumi.wav"));
            reflectedMap.put("MagnaSaber", new Sfx(voicePath + "MagnaSaber.wav"));
            reflectedMap.put("AllFeeling", new Sfx(voicePath + "AllFeeling.wav"));
            reflectedMap.put("Paracelise", new Sfx(voicePath + "Paracelise.wav"));
            reflectedMap.put("EternalContract", new Sfx(voicePath + "EternalContract.wav"));
            reflectedMap.put("Lifetime", new Sfx(voicePath + "Lifetime.wav"));
            reflectedMap.put("TriggerPuppeteer", new Sfx(voicePath + "TriggerPuppeteer.wav"));
            reflectedMap.put("Faker", new Sfx(voicePath + "Faker.wav"));
            reflectedMap.put("VengeanceBuffPower", new Sfx(voicePath + "VengeanceBuffPower.wav"));
            reflectedMap.put("AdherentOfScream_Acc", new Sfx(voicePath + "AdherentOfScream_Acc.wav"));
            reflectedMap.put("RoomServiceDevil", new Sfx(voicePath + "RoomServiceDevil.wav"));
            reflectedMap.put("RoomServiceDevil_Acc", new Sfx(voicePath + "RoomServiceDevil_Acc.wav"));
            reflectedMap.put("JubilanceWitch", new Sfx(voicePath + "JubilanceWitch.wav"));
            reflectedMap.put("AcidGolem", new Sfx(voicePath + "AcidGolem.wav"));
            reflectedMap.put("DemonCommander", new Sfx(voicePath + "DemonCommander.wav"));
            reflectedMap.put("Seox", new Sfx(voicePath + "Seox.wav"));
            reflectedMap.put("Seox_SA", new Sfx(voicePath + "Seox_SA.wav"));
            reflectedMap.put("Seox_SSA", new Sfx(voicePath + "Seox_SSA.wav"));
            reflectedMap.put("Urias_Start", new Sfx(voicePath + "Urias_Start.wav"));
            reflectedMap.put("Urias_Ev", new Sfx(voicePath + "Urias_Ev.wav"));
            reflectedMap.put("Maisha2", new Sfx(voicePath + "Maisha2.wav"));
            reflectedMap.put("LostSamurai", new Sfx(voicePath + "LostSamurai.wav"));
            reflectedMap.put("Comfort", new Sfx(voicePath + "Comfort.wav"));
            reflectedMap.put("TheTemperance", new Sfx(voicePath + "TheTemperance.wav"));
            reflectedMap.put("TheTemperance_Acc", new Sfx(voicePath + "TheTemperance_Acc.wav"));
            reflectedMap.put("UnselfishGrace", new Sfx(voicePath + "UnselfishGrace.wav"));
            reflectedMap.put("InsatiableDesire", new Sfx(voicePath + "InsatiableDesire.wav"));
            reflectedMap.put("MadnessCurse", new Sfx(voicePath + "MadnessCurse.wav"));
            reflectedMap.put("Sekka_L", new Sfx(voicePath + "Sekka_L.wav"));
            reflectedMap.put("Hozumi_L", new Sfx(voicePath + "Hozumi_L.wav"));
            reflectedMap.put("Cassiopeia_L", new Sfx(voicePath + "Cassiopeia_L.wav"));
            reflectedMap.put("DarkGeneral_L", new Sfx(voicePath + "DarkGeneral_L.wav"));
            reflectedMap.put("Tsubaki_L", new Sfx(voicePath + "Tsubaki_L.wav"));
            reflectedMap.put("Nahtnaught_L", new Sfx(voicePath + "Nahtnaught_L.wav"));
            reflectedMap.put("Nahtnaught_L_Eh", new Sfx(voicePath + "Nahtnaught_L_Eh.wav"));
            reflectedMap.put("IC_L", new Sfx(voicePath + "IC_L.wav"));
            reflectedMap.put("MagnaZero_L", new Sfx(voicePath + "MagnaZero_L.wav"));
            reflectedMap.put("TheLovers_L", new Sfx(voicePath + "TheLovers_L.wav"));
            reflectedMap.put("TheLovers_L_Eh", new Sfx(voicePath + "TheLovers_L_Eh.wav"));
            reflectedMap.put("Aisha_L", new Sfx(voicePath + "Aisha_L.wav"));
            reflectedMap.put("SoulGuide_L", new Sfx(voicePath + "SoulGuide_L.wav"));
            reflectedMap.put("Aenea_L", new Sfx(voicePath + "Aenea_L.wav"));
            reflectedMap.put("Elana_L", new Sfx(voicePath + "Elana_L.wav"));
            reflectedMap.put("ResentfulScreaming_L", new Sfx(voicePath + "ResentfulScreaming_L.wav"));
            reflectedMap.put("EternalContract_L", new Sfx(voicePath + "EternalContract_L.wav"));
            reflectedMap.put("BlackenedScripture", new Sfx(voicePath + "BlackenedScripture.wav"));
            reflectedMap.put("BloodPact", new Sfx(voicePath + "BloodPact.wav"));
            reflectedMap.put("Arthur", new Sfx(voicePath + "Arthur.wav"));
            reflectedMap.put("Tweyen", new Sfx(voicePath + "Tweyen.wav"));
            reflectedMap.put("Tweyen_SA", new Sfx(voicePath + "Tweyen_SA.wav"));
            reflectedMap.put("Tweyen_SSA", new Sfx(voicePath + "Tweyen_SSA.wav"));
            reflectedMap.put("Yggdrasil", new Sfx(voicePath + "Yggdrasil.wav"));
            reflectedMap.put("Yggdrasil2", new Sfx(voicePath + "Yggdrasil2.wav"));
            reflectedMap.put("BlessingsOfCreation", new Sfx(voicePath + "BlessingOfCreation.wav"));
            reflectedMap.put("WrathOfNature", new Sfx(voicePath + "WrathOfNature.wav"));
            reflectedMap.put("NatureBlessing", new Sfx(voicePath + "NatureBlessing.wav"));
            reflectedMap.put("Rola", new Sfx(voicePath + "Rola.wav"));
            reflectedMap.put("Rola_L", new Sfx(voicePath + "Rola_L.wav"));
            reflectedMap.put("Rola_EH", new Sfx(voicePath + "Rola_Eh.wav"));
            reflectedMap.put("Rola_L_EH", new Sfx(voicePath + "Rola_L_EH.wav"));
            reflectedMap.put("Vanpi_Select", new Sfx(voicePath + "Vanpi_Select.wav"));
            reflectedMap.put("Vanpi_Hurt", new Sfx(voicePath + "Vanpi_Hurt.wav"));
            reflectedMap.put("Vanpi_Hurt2", new Sfx(voicePath + "Vanpi_Hurt2.wav"));
            reflectedMap.put("Vanpi_Hurt3", new Sfx(voicePath + "Vanpi_Hurt3.wav"));
            reflectedMap.put("Vanpi_Hurt4", new Sfx(voicePath + "Vanpi_Hurt4.wav"));
            reflectedMap.put("Orchid_EW", new Sfx(voicePath + "Orchid_EW.wav"));
            reflectedMap.put("Orchid_EW_Eff", new Sfx(voicePath + "Orchid_EW_Eff.wav"));
            reflectedMap.put("Vanpi_Q", new Sfx(voicePath + "Vanpi_Q.wav"));
            reflectedMap.put("VanpiPower", new Sfx(voicePath + "VanpiPower.wav"));
            reflectedMap.put("Norn", new Sfx(voicePath + "NornPower.wav"));
            reflectedMap.put("CassimPower", new Sfx(voicePath + "CassimPower.wav"));
            reflectedMap.put("Cassim", new Sfx(voicePath + "Cassim.wav"));
            reflectedMap.put("Rosa", new Sfx(voicePath + "Rosa.wav"));
            reflectedMap.put("RosaPower", new Sfx(voicePath + "RosaPower.wav"));
            reflectedMap.put("Craig", new Sfx(voicePath + "Craig.wav"));
            reflectedMap.put("CraigPower", new Sfx(voicePath + "CraigPower.wav"));
            reflectedMap.put("CraigPower2", new Sfx(voicePath + "CraigPower2.wav"));
            reflectedMap.put("Hanna", new Sfx(voicePath + "Hanna.wav"));
            reflectedMap.put("Veight2", new Sfx(voicePath + "Veight2.wav"));
            reflectedMap.put("WhirlwindAssault", new Sfx(voicePath + "WhirlwindAssault.wav"));
            reflectedMap.put("TheHanged_L", new Sfx(voicePath + "TheHanged_L.wav"));
            reflectedMap.put("TheHanged_L_EH", new Sfx(voicePath + "TheHanged_L_EH.wav"));
            reflectedMap.put("Vyrmedea", new Sfx(voicePath + "Vyrmedea.wav"));
            reflectedMap.put("Vyrmedea_Power", new Sfx(voicePath + "Vyrmedea_Power.wav"));
            reflectedMap.put("Chastity", new Sfx(voicePath + "Chastity.wav"));
            reflectedMap.put("Zerk", new Sfx(voicePath + "Zerk.wav"));
            reflectedMap.put("Zerk_Acc", new Sfx(voicePath + "Zerk_Acc.wav"));
            reflectedMap.put("MysticQueen", new Sfx(voicePath + "MysticQueen.wav"));
            reflectedMap.put("MysticQueenPower", new Sfx(voicePath + "MysticQueenPower.wav"));
            reflectedMap.put("Ghost", new Sfx(voicePath + "Ghost.wav"));
            reflectedMap.put("GiantGhost", new Sfx(voicePath + "GiantGhost.wav"));
            reflectedMap.put("MasqueradeGhost", new Sfx(voicePath + "MasqueradeGhost.wav"));
            reflectedMap.put("MasqueradeGhostPower", new Sfx(voicePath + "MasqueradeGhostPower.wav"));
            reflectedMap.put("Baccherus", new Sfx(voicePath + "Baccherus.wav"));
            reflectedMap.put("TrickDullahan", new Sfx(voicePath + "TrickDullahan.wav"));
            reflectedMap.put("Nobilis", new Sfx(voicePath + "Nobilis.wav"));
            reflectedMap.put("Slade", new Sfx(voicePath + "Slade.wav"));
            reflectedMap.put("MaliciousBlader", new Sfx(voicePath + "MaliciousBlader.wav"));
            reflectedMap.put("Waltz", new Sfx(voicePath + "Waltz.wav"));
            reflectedMap.put("Waltz_Acc", new Sfx(voicePath + "Waltz_Acc.wav"));
            reflectedMap.put("Cernunnos_L", new Sfx(voicePath + "Cernunnos_L.wav"));
            reflectedMap.put("Ameth_Selected", new Sfx(voicePath + "Ameth_Selected.wav"));
            reflectedMap.put("JiemonThiefLord", new Sfx(voicePath + "JiemonThiefLord.wav"));
            reflectedMap.put("NobleShieldmaiden", new Sfx(voicePath + "NobleShieldmaiden.wav"));
            reflectedMap.put("NobleShieldmaiden_Acc", new Sfx(voicePath + "NobleShieldmaiden_Acc.wav"));
            reflectedMap.put("FrontDeskFrog", new Sfx(voicePath + "FrontDeskFrog.wav"));
            reflectedMap.put("NightOnTheTown", new Sfx(voicePath + "NightOnTheTown.wav"));
            reflectedMap.put("SuaveBandit", new Sfx(voicePath + "SuaveBandit.wav"));
            reflectedMap.put("SuaveBandit_Ev", new Sfx(voicePath + "SuaveBandit_Ev.wav"));
            reflectedMap.put("OpulentStrategist", new Sfx(voicePath + "OpulentStrategist.wav"));
            reflectedMap.put("OpulentStrategist_Pow", new Sfx(voicePath + "OpulentStrategist_Pow.wav"));
            reflectedMap.put("MasterfulMusician", new Sfx(voicePath + "MasterfulMusician.wav"));
            reflectedMap.put("AmerroSpearKnight", new Sfx(voicePath + "AmerroSpearKnight.wav"));
            reflectedMap.put("HeroicEntry", new Sfx(voicePath + "HeroicEntry.wav"));
            reflectedMap.put("ValiantFencer", new Sfx(voicePath + "ValiantFencer.wav"));
            reflectedMap.put("ValiantFencer_EH", new Sfx(voicePath + "ValiantFencer_EH.wav"));
            reflectedMap.put("HeroOfAntiquity", new Sfx(voicePath + "HeroOfAntiquity.wav"));
            reflectedMap.put("MorgensternMaid", new Sfx(voicePath + "MorgensternMaid.wav"));
            reflectedMap.put("FlameSoldier", new Sfx(voicePath + "FlameSoldier.wav"));
            reflectedMap.put("MachKnight", new Sfx(voicePath + "MachKnight.wav"));
            reflectedMap.put("CosmosFang", new Sfx(voicePath + "CosmosFang.wav"));
            reflectedMap.put("GemstoneWingy", new Sfx(voicePath + "GemstoneWingy.wav"));
            reflectedMap.put("SapphirePriestess", new Sfx(voicePath + "SapphirePriestess.wav"));
            reflectedMap.put("ImpiousBishop", new Sfx(voicePath + "ImpiousBishop.wav"));
            reflectedMap.put("ImpiousBishop_Acc", new Sfx(voicePath + "ImpiousBishop_Acc.wav"));
            reflectedMap.put("Magachiyo", new Sfx(voicePath + "Magachiyo.wav"));
            reflectedMap.put("LeafshadeAssassin", new Sfx(voicePath + "LeafshadeAssassin.wav"));
            reflectedMap.put("LeafshadeAssassinPower", new Sfx(voicePath + "LeafshadeAssassinPower.wav"));
            reflectedMap.put("VerdantLieutenant", new Sfx(voicePath + "VerdantLieutenant.wav"));
            reflectedMap.put("VerdantLieutenantPower", new Sfx(voicePath + "VerdantLieutenantPower.wav"));
            reflectedMap.put("BuddingInitiate", new Sfx(voicePath + "BuddingInitiate.wav"));
            reflectedMap.put("Wimael", new Sfx(voicePath + "Wimael.wav"));
            reflectedMap.put("BenevolentElf", new Sfx(voicePath + "BenevolentElf.wav"));
            reflectedMap.put("BenevolentElfPower", new Sfx(voicePath + "BenevolentElfPower.wav"));
            reflectedMap.put("Simael", new Sfx(voicePath + "Simael.wav"));
            reflectedMap.put("BladeRain", new Sfx(voicePath + "BladeRain.wav"));
            reflectedMap.put("AstrologicalSorcerer", new Sfx(voicePath + "AstrologicalSorcerer.wav"));
            reflectedMap.put("VolunteerTestSubject", new Sfx(voicePath + "VolunteerTestSubject.wav"));
            reflectedMap.put("DevotedResearcher", new Sfx(voicePath + "DevotedResearcher.wav"));
            reflectedMap.put("DevotedResearcher_EH", new Sfx(voicePath + "DevotedResearcher_EH.wav"));
            reflectedMap.put("ObsessiveScholar", new Sfx(voicePath + "ObsessiveScholar.wav"));
            reflectedMap.put("Sephie", new Sfx(voicePath + "Sephie.wav"));
            reflectedMap.put("Istyndet", new Sfx(voicePath + "Istyndet.wav"));
            reflectedMap.put("Myroel", new Sfx(voicePath + "Myroel.wav"));
            reflectedMap.put("GhastlyBanishment", new Sfx(voicePath + "GhastlyBanishment.wav"));
            reflectedMap.put("GhastlyBanishment_EH", new Sfx(voicePath + "GhastlyBanishment_EH.wav"));
            reflectedMap.put("Garodeth", new Sfx(voicePath + "Garodeth.wav"));
            reflectedMap.put("ViciousBlitzer", new Sfx(voicePath + "ViciousBlitzer.wav"));
            reflectedMap.put("SteamrollingTank", new Sfx(voicePath + "SteamrollingTank.wav"));
            reflectedMap.put("SteamrollingTankPower", new Sfx(voicePath + "SteamrollingTankPower.wav"));
            reflectedMap.put("RagingCommander", new Sfx(voicePath + "RagingCommander.wav"));
            reflectedMap.put("RagingCommanderPower", new Sfx(voicePath + "RagingCommanderPower.wav"));
            reflectedMap.put("Genomuel", new Sfx(voicePath + "Genomuel.wav"));
            reflectedMap.put("Erralde", new Sfx(voicePath + "Erralde.wav"));
            reflectedMap.put("ExecutorOfTheOath ", new Sfx(voicePath + "ExecutorOfTheOath.wav"));
            reflectedMap.put("AgentOfTheCommandments", new Sfx(voicePath + "AgentOfTheCommandments.wav"));
            reflectedMap.put("AgentOfTheCommandmentsPower", new Sfx(voicePath + "AgentOfTheCommandmentsPower.wav"));
            reflectedMap.put("Uneriel", new Sfx(voicePath + "Uneriel.wav"));
            reflectedMap.put("UnerielPower", new Sfx(voicePath + "UnerielPower.wav"));
            reflectedMap.put("UnerielPower2", new Sfx(voicePath + "UnerielPower2.wav"));
            reflectedMap.put("SkullFane2", new Sfx(voicePath + "SkullFane2.wav"));
            reflectedMap.put("SkullFane2_Acc", new Sfx(voicePath + "SkullFane2_Acc.wav"));
            reflectedMap.put("Cutthroat", new Sfx(voicePath + "Cutthroat.wav"));
            reflectedMap.put("Cutthroat_EH", new Sfx(voicePath + "Cutthroat_EH.wav"));
            reflectedMap.put("Cutthroat_EXEH", new Sfx(voicePath + "Cutthroat_EXEH.wav"));
            reflectedMap.put("IronforgedRightHand", new Sfx(voicePath + "IronforgedRightHand.wav"));
            reflectedMap.put("IronforgedRightHand_EH", new Sfx(voicePath + "IronforgedRightHand_EH.wav"));
            reflectedMap.put("IronforgedRightHand_EXEH", new Sfx(voicePath + "IronforgedRightHand_EXEH.wav"));
            reflectedMap.put("SmeltworkBodyguard", new Sfx(voicePath + "SmeltworkBodyguard.wav"));
            reflectedMap.put("SmeltworkBodyguard_EH", new Sfx(voicePath + "SmeltworkBodyguard_EH.wav"));
            reflectedMap.put("BlackrustUnderling", new Sfx(voicePath + "BlackrustUnderling.wav"));
            reflectedMap.put("BlackrustUnderling_EH", new Sfx(voicePath + "BlackrustUnderling_EH.wav"));
            reflectedMap.put("BlackrustUnderling_EXEH", new Sfx(voicePath + "BlackrustUnderling_EXEH.wav"));
            reflectedMap.put("Kyrzael", new Sfx(voicePath + "Kyrzael.wav"));
            reflectedMap.put("Karula_EH", new Sfx(voicePath + "Karula_EH.wav"));
            reflectedMap.put("NightVampire_L", new Sfx(voicePath + "NightVampire_L.wav"));
            reflectedMap.put("Cutthroat_L", new Sfx(voicePath + "Cutthroat_L.wav"));
            reflectedMap.put("Cutthroat_L_EH", new Sfx(voicePath + "Cutthroat_L_EH.wav"));
            reflectedMap.put("Cutthroat_L_EXEH", new Sfx(voicePath + "Cutthroat_L_EXEH.wav"));
            reflectedMap.put("Kaiser_Select", new Sfx(voicePath + "Kaiser_Select.wav"));
            reflectedMap.put("Kaiser_Hurt", new Sfx(voicePath + "Kaiser_Hurt.wav"));
            reflectedMap.put("Kaiser_Hurt2", new Sfx(voicePath + "Kaiser_Hurt2.wav"));
            reflectedMap.put("Kaiser_Hurt3", new Sfx(voicePath + "Kaiser_Hurt3.wav"));
            reflectedMap.put("Kaiser_Hurt4", new Sfx(voicePath + "Kaiser_Hurt4.wav"));
            reflectedMap.put("Taketsumi_Start", new Sfx(voicePath + "Taketsumi_Start.wav"));
            reflectedMap.put("Taketsumi_A1", new Sfx(voicePath + "Taketsumi_A1.wav"));
            reflectedMap.put("Taketsumi_A2", new Sfx(voicePath + "Taketsumi_A2.wav"));
            reflectedMap.put("Taketsumi_A3", new Sfx(voicePath + "Taketsumi_A3.wav"));
            reflectedMap.put("TidalGunner", new Sfx(voicePath + "TidalGunner.wav"));
            reflectedMap.put("TidalGunnerPower", new Sfx(voicePath + "TidalGunnerPower.wav"));
            reflectedMap.put("DeepSeaScout", new Sfx(voicePath + "DeepSeaScout.wav"));
            reflectedMap.put("DeepSeaScoutPower", new Sfx(voicePath + "DeepSeaScoutPower.wav"));
            reflectedMap.put("StormWrackedFirstMate", new Sfx(voicePath + "StormWrackedFirstMate.wav"));
            reflectedMap.put("StormWrackedFirstMatePower", new Sfx(voicePath + "StormWrackedFirstMatePower.wav"));
            reflectedMap.put("Barbaros", new Sfx(voicePath + "Barbaros.wav"));
            reflectedMap.put("Barbaros_Eh", new Sfx(voicePath + "Barbaros_Eh.wav"));
            reflectedMap.put("Radiel", new Sfx(voicePath + "Radiel.wav"));
            reflectedMap.put("IronwroughtDefender", new Sfx(voicePath + "IronwroughtDefender.wav"));
            reflectedMap.put("Windslasher", new Sfx(voicePath + "Windslasher.wav"));
            reflectedMap.put("GeneralMaximus", new Sfx(voicePath + "GeneralMaximus.wav"));
            reflectedMap.put("OliviaSylvia", new Sfx(voicePath + "OliviaSylvia.wav"));
            reflectedMap.put("SacredSheep", new Sfx(voicePath + "SacredSheep.wav"));
            reflectedMap.put("Judith", new Sfx(voicePath + "Judith.wav"));
            reflectedMap.put("Judith3", new Sfx(voicePath + "Judith3.wav"));
            reflectedMap.put("Judith4", new Sfx(voicePath + "Judith4.wav"));
            reflectedMap.put("Judith5", new Sfx(voicePath + "Judith5.wav"));
            reflectedMap.put("Judith6", new Sfx(voicePath + "Judith6.wav"));
            reflectedMap.put("Judith7", new Sfx(voicePath + "Judith7.wav"));
            reflectedMap.put("Ceridwen3", new Sfx(voicePath + "Ceridwen3.wav"));
            reflectedMap.put("Ceridwen3_Acc", new Sfx(voicePath + "Ceridwen3_Acc.wav"));
            reflectedMap.put("Kali", new Sfx(voicePath + "Kali.wav"));
            reflectedMap.put("DancingMiniSoulDevil", new Sfx(voicePath + "DancingMiniSoulDevil.wav"));
            reflectedMap.put("DancingMiniSoulDevil-Eff", new Sfx(voicePath + "DancingMiniSoulDevil_Eff.wav"));
            reflectedMap.put("Signa", new Sfx(voicePath + "Signa.wav"));
            reflectedMap.put("Signa_Eff", new Sfx(voicePath + "Signa_Eff.wav"));
            reflectedMap.put("Yuzuki", new Sfx(voicePath + "Yuzuki.wav"));
            reflectedMap.put("CrimsonVirtue", new Sfx(voicePath + "CrimsonVirtue.wav"));
            reflectedMap.put("Alice", new Sfx(voicePath + "Alice.wav"));
            reflectedMap.put("DestructiveSuccubus", new Sfx(voicePath + "DestructiveSuccubus.wav"));
            reflectedMap.put("Erralde_Acc", new Sfx(voicePath + "Erralde_Acc.wav"));
            reflectedMap.put("Castelle", new Sfx(voicePath + "Castelle.wav"));
            reflectedMap.put("VerdantPrayer", new Sfx(voicePath + "VerdantPrayer.wav"));
            reflectedMap.put("MysterianParty", new Sfx(voicePath + "MysterianParty.wav"));
            reflectedMap.put("Amaryllis", new Sfx(voicePath + "Amaryllis.wav"));
            reflectedMap.put("AmaryllisPower", new Sfx(voicePath + "AmaryllisPower.wav"));
            reflectedMap.put("CurseOfSuffering", new Sfx(voicePath + "CurseOfSuffering.wav"));
            reflectedMap.put("MachSpeedMaron", new Sfx(voicePath + "MachSpeedMaron.wav"));
            reflectedMap.put("BadGirlLife", new Sfx(voicePath + "BadGirlLife.wav"));
            reflectedMap.put("Lou_Bishop", new Sfx(voicePath + "Lou_Bishop.wav"));
            reflectedMap.put("OrchidExaminationHall", new Sfx(voicePath + "OrchidExaminationHall.wav"));
            reflectedMap.put("BambeautyExaminationHall", new Sfx(voicePath + "BambeautyExaminationHall.wav"));
            reflectedMap.put("MumExaminationHall", new Sfx(voicePath + "MumExaminationHall.wav"));
            reflectedMap.put("PlumExaminationHall", new Sfx(voicePath + "PlumExaminationHall.wav"));
            reflectedMap.put("Gruinne", new Sfx(voicePath + "Gruinne.wav"));
            reflectedMap.put("Grea3", new Sfx(voicePath + "Grea3.wav"));
            reflectedMap.put("GhostHunter", new Sfx(voicePath + "GhostHunter.wav"));
            reflectedMap.put("Leeds", new Sfx(voicePath + "Leeds.wav"));
            reflectedMap.put("Leeds_L", new Sfx(voicePath + "Leeds_L.wav"));
            reflectedMap.put("DemonEyeGangster", new Sfx(voicePath + "DemonEyeGangster.wav"));
            reflectedMap.put("Arka", new Sfx(voicePath + "Arka.wav"));
            reflectedMap.put("Vulgus", new Sfx(voicePath + "Vulgus.wav"));
            reflectedMap.put("PureflowerMaiden", new Sfx(voicePath + "PureflowerMaiden.wav"));
            reflectedMap.put("PureflowerMaidenPower", new Sfx(voicePath + "PureflowerMaidenPower.wav"));
            reflectedMap.put("Kira", new Sfx(voicePath + "Kira.wav"));
            reflectedMap.put("Verdilia", new Sfx(voicePath + "Verdilia.wav"));
            reflectedMap.put("CyclicalGuidance", new Sfx(voicePath + "CyclicalGuidance.wav"));
            reflectedMap.put("CyclicalGuidance_Eh", new Sfx(voicePath + "CyclicalGuidance_Eh.wav"));
            reflectedMap.put("SumoMechanic", new Sfx(voicePath + "SumoMechanic.wav"));
            reflectedMap.put("Gioffre", new Sfx(voicePath + "Gioffre.wav"));
            reflectedMap.put("UnseenStrength", new Sfx(voicePath + "UnseenStrength.wav"));
            reflectedMap.put("Lyelth", new Sfx(voicePath + "Lyelth.wav"));
            reflectedMap.put("Lucius_N", new Sfx(voicePath + "Lucius_N.wav"));
            reflectedMap.put("BellWitch", new Sfx(voicePath + "BellWitch.wav"));
            reflectedMap.put("Anne3", new Sfx(voicePath + "Anne3.wav"));
            reflectedMap.put("Memento", new Sfx(voicePath + "Memento.wav"));
            reflectedMap.put("PureflameLady", new Sfx(voicePath + "PureflameLady.wav"));
            reflectedMap.put("PureflameLadyPower", new Sfx(voicePath + "PureflameLadyPower.wav"));
            reflectedMap.put("Galom", new Sfx(voicePath + "Galom.wav"));
            reflectedMap.put("Elluvia", new Sfx(voicePath + "Elluvia.wav"));
            reflectedMap.put("RoboticsReporter", new Sfx(voicePath + "RoboticsReporter.wav"));
            reflectedMap.put("Filly", new Sfx(voicePath + "Filly.wav"));
            reflectedMap.put("FillyPower", new Sfx(voicePath + "FillyPower.wav"));
            reflectedMap.put("FillyPower2", new Sfx(voicePath + "FillyPower2.wav"));
            reflectedMap.put("CorpseKingCommand", new Sfx(voicePath + "CorpseKingCommand.wav"));
            reflectedMap.put("Cornelius", new Sfx(voicePath + "Cornelius.wav"));
            reflectedMap.put("AnneAndGrea", new Sfx(voicePath + "AnneAndGrea.wav"));
            reflectedMap.put("AnneAndGrea_Eh", new Sfx(voicePath + "AnneAndGrea_Eh.wav"));
            reflectedMap.put("MajesticSorcery", new Sfx(voicePath + "MajesticSorcery.wav"));
            reflectedMap.put("LeciaSkySaber", new Sfx(voicePath + "LeciaSkySaber.wav"));
            reflectedMap.put("LeciaSkySaber_Eff", new Sfx(voicePath + "LeciaSkySaber_Eff.wav"));
            reflectedMap.put("LeciaSkySaber_Eff2", new Sfx(voicePath + "LeciaSkySaber_Eff2.wav"));
            reflectedMap.put("NanoTheDawnblade", new Sfx(voicePath + "NanoTheDawnblade.wav"));
            reflectedMap.put("LeciaNano", new Sfx(voicePath + "LeciaNano.wav"));
            reflectedMap.put("TwilightBlade", new Sfx(voicePath + "TwilightBlade.wav"));
            reflectedMap.put("SupportCannon", new Sfx(voicePath + "SupportCannon.wav"));
            reflectedMap.put("Garuda4_Acc", new Sfx(voicePath + "Garuda4_Acc.wav"));
            reflectedMap.put("Garuda4", new Sfx(voicePath + "Garuda4.wav"));
            reflectedMap.put("FighterFortitude", new Sfx(voicePath + "FighterFortitude.wav"));
            reflectedMap.put("SepticShrink", new Sfx(voicePath + "SepticShrink.wav"));
            reflectedMap.put("Gawain", new Sfx(voicePath + "Gawain.wav"));
            reflectedMap.put("Weiss", new Sfx(voicePath + "Weiss.wav"));
            reflectedMap.put("DeathscytheHound",new Sfx(voicePath + "DeathscytheHound.wav"));
            reflectedMap.put("DiamondMaster", new Sfx(voicePath + "DiamondMaster.wav"));
            reflectedMap.put("LegendSwordCommander", new Sfx(voicePath + "LegendSwordCommander.wav"));
            reflectedMap.put("JudgmentSpearMaster", new Sfx(voicePath + "JudgmentSpearMaster.wav"));
            reflectedMap.put("JudgmentSpearMaster_Acc", new Sfx(voicePath + "JudgmentSpearMaster_Acc.wav"));
            reflectedMap.put("Monika_Hurt", new Sfx(voicePath + "Monika_Hurt.wav"));
            reflectedMap.put("Monika_Hurt2", new Sfx(voicePath + "Monika_Hurt2.wav"));
            reflectedMap.put("Monika_Hurt3", new Sfx(voicePath + "Monika_Hurt3.wav"));
            reflectedMap.put("Monika_Select", new Sfx(voicePath + "Monika_Select.wav"));
            reflectedMap.put("Kaya_Hurt", new Sfx(voicePath + "Kaya_Hurt.wav"));
            reflectedMap.put("Kaya_Hurt2", new Sfx(voicePath + "Kaya_Hurt2.wav"));
            reflectedMap.put("Kaya_Hurt3", new Sfx(voicePath + "Kaya_Hurt3.wav"));
            reflectedMap.put("Kaya_Select", new Sfx(voicePath + "Kaya_Select.wav"));
            reflectedMap.put("Grea_Hurt", new Sfx(voicePath + "Grea_Hurt.wav"));
            reflectedMap.put("Grea_Hurt2", new Sfx(voicePath + "Grea_Hurt2.wav"));
            reflectedMap.put("Grea_Hurt3", new Sfx(voicePath + "Grea_Hurt3.wav"));
            reflectedMap.put("Grea_Select", new Sfx(voicePath + "Grea_Select.wav"));
            reflectedMap.put("Inori_Hurt", new Sfx(voicePath + "Inori_Hurt.wav"));
            reflectedMap.put("Inori_Hurt2", new Sfx(voicePath + "Inori_Hurt2.wav"));
            reflectedMap.put("Inori_Hurt3", new Sfx(voicePath + "Inori_Hurt3.wav"));
            reflectedMap.put("Inori_Select", new Sfx(voicePath + "Inori_Select.wav"));
            reflectedMap.put("DragonWarrior", new Sfx(voicePath + "DragonWarrior.wav"));
            reflectedMap.put("HotheadedMarauder", new Sfx(voicePath + "HotheadedMarauder.wav"));
            reflectedMap.put("RazorClawedThief", new Sfx(voicePath + "RazorClawedThief.wav"));
            reflectedMap.put("ScorchedEarthTyrant", new Sfx(voicePath + "ScorchedEarthTyrant.wav"));
            reflectedMap.put("Antemaria", new Sfx(voicePath + "Antemaria.wav"));
            reflectedMap.put("Antemaria_Acc", new Sfx(voicePath + "Antemaria_Acc.wav"));
            reflectedMap.put("Drazael", new Sfx(voicePath + "Drazael.wav"));
            reflectedMap.put("Drazael_Acc", new Sfx(voicePath + "Drazael_Acc.wav"));
            reflectedMap.put("TouchingThoughts", new Sfx(voicePath + "TouchingThoughts.wav"));
            reflectedMap.put("ManagarmrScout", new Sfx(voicePath + "ManagarmrScout.wav"));
            reflectedMap.put("Ghandagoza", new Sfx(voicePath + "Ghandagoza.wav"));
            reflectedMap.put("Dagon", new Sfx(voicePath + "Dagon.wav"));
            reflectedMap.put("ImperialDragoon", new Sfx(voicePath + "ImperialDragoon.wav"));
            reflectedMap.put("ImperialDragoon_L", new Sfx(voicePath + "ImperialDragoon_L.wav"));
            reflectedMap.put("DraconicCounsel", new Sfx(voicePath + "DraconicCounsel.wav"));
            reflectedMap.put("DraconicCounsel_Copy", new Sfx(voicePath + "DraconicCounsel_Copy.wav"));
            reflectedMap.put("Kit", new Sfx(voicePath + "Kit.wav"));
            reflectedMap.put("MermaidSinger", new Sfx(voicePath + "MermaidSinger.wav"));
            reflectedMap.put("SiLong", new Sfx(voicePath + "SiLong.wav"));
            reflectedMap.put("TidalTyranny", new Sfx(voicePath + "TidalTyranny.wav"));
            reflectedMap.put("WaterwyrmBlessing", new Sfx(voicePath + "WaterwyrmBlessing.wav"));
            reflectedMap.put("OtohimeVanguard", new Sfx(voicePath + "OtohimeVanguard.wav"));
            reflectedMap.put("DragonEmpressOtohime", new Sfx(voicePath + "DragonEmpressOtohime.wav"));
            reflectedMap.put("DragonEmpressOtohime_Acc", new Sfx(voicePath + "DragonEmpressOtohime_Acc.wav"));
            reflectedMap.put("ResplendentPhoenix", new Sfx(voicePath + "ResplendentPhoenix.wav"));
            reflectedMap.put("ResplendentPhoenix_L", new Sfx(voicePath + "ResplendentPhoenix_L.wav"));
            reflectedMap.put("PoseidonGuard", new Sfx(voicePath + "PoseidonGuard.wav"));
            reflectedMap.put("Poseidon", new Sfx(voicePath + "Poseidon.wav"));
            reflectedMap.put("Poseidon_Acc", new Sfx(voicePath + "Poseidon_Acc.wav"));
            reflectedMap.put("Argente", new Sfx(voicePath + "Argente.wav"));
            reflectedMap.put("Lumiore", new Sfx(voicePath + "Lumiore.wav"));
            reflectedMap.put("Lumiore_Eff", new Sfx(voicePath + "Lumiore_Eff.wav"));
            reflectedMap.put("NoirNBlanc", new Sfx(voicePath + "NoirNBlanc.wav"));
            reflectedMap.put("NoirNBlancPower", new Sfx(voicePath + "NoirNBlancPower.wav"));
            reflectedMap.put("NoirNBlanc_Eff", new Sfx(voicePath + "NoirNBlanc_Eff.wav"));
            reflectedMap.put("DragoonMedic", new Sfx(voicePath + "DragoonMedic.wav"));
            reflectedMap.put("VerdantRebirth", new Sfx(voicePath + "VerdantRebirth.wav"));
            reflectedMap.put("DisdainfulRending", new Sfx(voicePath + "DisdainfulRending.wav"));
            reflectedMap.put("CursedFuror", new Sfx(voicePath + "CursedFuror.wav"));
            reflectedMap.put("RowenRoar", new Sfx(voicePath + "RowenRoar.wav"));
            reflectedMap.put("ValdainClaw", new Sfx(voicePath + "ValdainClaw.wav"));
            reflectedMap.put("ServantOfDisdain", new Sfx(voicePath + "ServantOfDisdain.wav"));
            reflectedMap.put("DiscipleOfDisdain", new Sfx(voicePath + "DiscipleOfDisdain.wav"));
            reflectedMap.put("ArdentTorch", new Sfx(voicePath + "ArdentTorch.wav"));
            reflectedMap.put("AdherentOfArdor", new Sfx(voicePath + "AdherentOfArdor.wav"));
            reflectedMap.put("SneerOfDisdain", new Sfx(voicePath + "SneerOfDisdain.wav"));
            reflectedMap.put("PrimeDragonKeeper", new Sfx(voicePath + "PrimeDragonKeeper.wav"));
            reflectedMap.put("PrimeDragonKeeperPower", new Sfx(voicePath + "PrimeDragonKeeperPower.wav"));
            reflectedMap.put("SwiftbladeDragonewt", new Sfx(voicePath + "SwiftbladeDragonewt.wav"));
            reflectedMap.put("Draconir", new Sfx(voicePath + "Draconir.wav"));
            reflectedMap.put("Georgius", new Sfx(voicePath + "Georgius.wav"));
            reflectedMap.put("Ethica", new Sfx(voicePath + "Ethica.wav"));
            reflectedMap.put("SpringwellDragonKeeper_Eh", new Sfx(voicePath + "SpringwellDragonKeeper_Eh.wav"));
            reflectedMap.put("SpringwellDragonKeeper", new Sfx(voicePath + "SpringwellDragonKeeper.wav"));
            reflectedMap.put("WyrmfireEngineer", new Sfx(voicePath + "WyrmfireEngineer.wav"));
            reflectedMap.put("Garyu", new Sfx(voicePath + "Garyu.wav"));
            reflectedMap.put("Garyu_Eh2", new Sfx(voicePath + "Garyu_Eh2.wav"));
            reflectedMap.put("Garyu_Eh4", new Sfx(voicePath + "Garyu_Eh4.wav"));
            reflectedMap.put("GoldenDragon", new Sfx(voicePath + "GoldenDragon.wav"));
            reflectedMap.put("SilverDragon", new Sfx(voicePath + "SilverDragon.wav"));
            reflectedMap.put("RowenCard", new Sfx(voicePath + "RowenCard.wav"));
            reflectedMap.put("RowenCard_Eh", new Sfx(voicePath + "RowenCard_Eh.wav"));
            reflectedMap.put("WildfangDragonewt", new Sfx(voicePath + "WildfangDragonewt.wav"));
            reflectedMap.put("WildfangDragonewtPower", new Sfx(voicePath + "WildfangDragonewtPower.wav"));
            reflectedMap.put("TurncoatDragonSummoner", new Sfx(voicePath + "TurncoatDragonSummoner.wav"));
            reflectedMap.put("SoaringDragonewt", new Sfx(voicePath + "SoaringDragonewt.wav"));
            reflectedMap.put("WiseDragonewtScholar", new Sfx(voicePath + "WiseDragonewtScholar.wav"));
            reflectedMap.put("DraconicCreation", new Sfx(voicePath + "DraconicCreation.wav"));
            reflectedMap.put("Lilium", new Sfx(voicePath + "Lilium.wav"));
            reflectedMap.put("Byron", new Sfx(voicePath + "Byron.wav"));
            reflectedMap.put("ByronPower", new Sfx(voicePath + "ByronPower.wav"));
            reflectedMap.put("Reggie", new Sfx(voicePath + "Reggie.wav"));
            reflectedMap.put("Zoe", new Sfx(voicePath + "Zoe.wav"));
            reflectedMap.put("Zoe_Acc", new Sfx(voicePath + "Zoe_Acc.wav"));
            reflectedMap.put("TheJustice", new Sfx(voicePath + "TheJustice.wav"));
            reflectedMap.put("TheJustice_I", new Sfx(voicePath + "TheJustice_I.wav"));
            reflectedMap.put("NewfoundAllies", new Sfx(voicePath + "NewfoundAllies.wav"));
            reflectedMap.put("Djeana", new Sfx(voicePath + "Djeana.wav"));
            reflectedMap.put("HypersonicDragonewt", new Sfx(voicePath + "HypersonicDragonewt.wav"));
            reflectedMap.put("WhimsicalMermaid", new Sfx(voicePath + "WhimsicalMermaid.wav"));
            reflectedMap.put("Gunbein", new Sfx(voicePath + "Gunbein.wav"));
            reflectedMap.put("Gunbein_Acc", new Sfx(voicePath + "Gunbein_Acc.wav"));
            reflectedMap.put("PrimeConflagration", new Sfx(voicePath + "PrimeConflagration.wav"));
            reflectedMap.put("BlazingDragonewt", new Sfx(voicePath + "BlazingDragonewt.wav"));
            reflectedMap.put("WindsweptDragonewt", new Sfx(voicePath + "WindsweptDragonewt.wav"));
            reflectedMap.put("GrandSlamTamer", new Sfx(voicePath + "GrandSlamTamer.wav"));
            reflectedMap.put("HowlingConflagration", new Sfx(voicePath + "HowlingConflagration.wav"));
            reflectedMap.put("Dracu", new Sfx(voicePath + "Dracu.wav"));
            reflectedMap.put("Dracu_Acc", new Sfx(voicePath + "Dracu_Acc.wav"));
            reflectedMap.put("Joe", new Sfx(voicePath + "Joe.wav"));
            reflectedMap.put("Joe_Acc", new Sfx(voicePath + "Joe_Acc.wav"));
            reflectedMap.put("Romelia", new Sfx(voicePath + "Romelia.wav"));
            reflectedMap.put("Roy", new Sfx(voicePath + "Roy.wav"));
            reflectedMap.put("Roy2", new Sfx(voicePath + "Roy2.wav"));
            reflectedMap.put("DragonlifeBlade", new Sfx(voicePath + "DragonlifeBlade.wav"));
            reflectedMap.put("DragonstrifeBlade", new Sfx(voicePath + "DragonstrifeBlade.wav"));
            reflectedMap.put("Jerva", new Sfx(voicePath + "Jerva.wav"));
            reflectedMap.put("Jerva2", new Sfx(voicePath + "Jerva2.wav"));
            reflectedMap.put("OmenOfDisdain", new Sfx(voicePath + "OmenOfDisdain.wav"));
            reflectedMap.put("OmenOfDisdain_Eh", new Sfx(voicePath + "OmenOfDisdain_Eh.wav"));
            reflectedMap.put("OmenOfDisdain2", new Sfx(voicePath + "OmenOfDisdain2.wav"));
            reflectedMap.put("FangsOfArdentDestruction", new Sfx(voicePath + "FangsOfArdentDestruction.wav"));
            reflectedMap.put("Masamune", new Sfx(voicePath + "Masamune.wav"));
            reflectedMap.put("Masamune2", new Sfx(voicePath + "Masamune2.wav"));
            reflectedMap.put("Aiela", new Sfx(voicePath + "Aiela.wav"));
            reflectedMap.put("Aiela2", new Sfx(voicePath + "Aiela2.wav"));
            reflectedMap.put("Aiela3", new Sfx(voicePath + "Aiela3.wav"));
            reflectedMap.put("WhitefrostWhisper", new Sfx(voicePath + "WhitefrostWhisper.wav"));
            reflectedMap.put("Filene", new Sfx(voicePath + "Filene.wav"));
            reflectedMap.put("Filene2", new Sfx(voicePath + "Filene2.wav"));
            reflectedMap.put("Filene3", new Sfx(voicePath + "Filene3.wav"));
            reflectedMap.put("Forte", new Sfx(voicePath + "Forte.wav"));
            reflectedMap.put("Forte2", new Sfx(voicePath + "Forte2.wav"));
            reflectedMap.put("Forte3", new Sfx(voicePath + "Forte3.wav"));
            reflectedMap.put("Forte4", new Sfx(voicePath + "Forte4.wav"));
            reflectedMap.put("Forte4Power", new Sfx(voicePath + "Forte4Power.wav"));
            reflectedMap.put("Forte5", new Sfx(voicePath + "Forte5.wav"));
            reflectedMap.put("Oberon", new Sfx(voicePath + "Oberon.wav"));
            reflectedMap.put("Oberon_Acc", new Sfx(voicePath + "Oberon_Acc.wav"));
            reflectedMap.put("MasterMageLevi2", new Sfx(voicePath + "MasterMageLevi2.wav"));
            reflectedMap.put("Fafnir_D", new Sfx(voicePath + "Fafnir_D.wav"));
            reflectedMap.put("PlatinumDragonblader", new Sfx(voicePath + "PlatinumDragonblader.wav"));
            reflectedMap.put("HellfireStrike", new Sfx(voicePath + "HellfireStrike.wav"));
            reflectedMap.put("Charon", new Sfx(voicePath + "Charon.wav"));
            reflectedMap.put("Cerberus3", new Sfx(voicePath + "Cerberus3.wav"));
            reflectedMap.put("Gadel", new Sfx(voicePath + "Gadel.wav"));
            reflectedMap.put("PeckishOwlcat", new Sfx(voicePath + "PeckishOwlcat.wav"));
            reflectedMap.put("Doublame", new Sfx(voicePath + "Doublame.wav"));
            reflectedMap.put("Jeanne6", new Sfx(voicePath + "Jeanne6.wav"));
            reflectedMap.put("JewelShine", new Sfx(voicePath + "JewelShine.wav"));
            reflectedMap.put("SisterlyBonds", new Sfx(voicePath + "SisterlyBonds.wav"));
            reflectedMap.put("Evamia", new Sfx(voicePath + "Evamia.wav"));
            reflectedMap.put("Shin", new Sfx(voicePath + "Shin.wav"));
            reflectedMap.put("ChaosAura", new Sfx(voicePath + "ChaosAura.wav"));
            reflectedMap.put("Odin2", new Sfx(voicePath + "Odin2.wav"));
            reflectedMap.put("Odin2_Acc", new Sfx(voicePath + "Odin2_Acc.wav"));
            reflectedMap.put("Grimnir2", new Sfx(voicePath + "Grimnir2.wav"));
            reflectedMap.put("Vincent_Start", new Sfx(voicePath + "Vincent_Start.wav"));
            reflectedMap.put("DragonicCall_L", new Sfx(voicePath + "DragonicCall.wav"));
            reflectedMap.put("Roy2_Eh", new Sfx(voicePath + "Roy2_Eh.wav"));
            reflectedMap.put("Shin_Token", new Sfx(voicePath + "Shin_Token.wav"));
            reflectedMap.put("Zebet_Eh", new Sfx(voicePath + "Zebet_Eh.wav"));
            reflectedMap.put("Zebet_Ex", new Sfx(voicePath + "Zebet_Ex.wav"));
            reflectedMap.put("Zebet", new Sfx(voicePath + "Zebet.wav"));
            reflectedMap.put("Lvbu", new Sfx(voicePath + "Lvbu.wav"));
            reflectedMap.put("CelestialDragoon", new Sfx(voicePath + "CelestialDragoon.wav"));
            reflectedMap.put("Oz_L", new Sfx(voicePath + "Oz_L.wav"));
            reflectedMap.put("TheTower", new Sfx(voicePath + "TheTower.wav"));
            reflectedMap.put("TheTower_I", new Sfx(voicePath + "TheTower_I.wav"));
            reflectedMap.put("GenesisDragon", new Sfx(voicePath + "GenesisDragon.wav"));
            reflectedMap.put("GenesisDragon2", new Sfx(voicePath + "GenesisDragon2.wav"));
            reflectedMap.put("GenesisDragon2_Acc", new Sfx(voicePath + "GenesisDragon2_Acc.wav"));
            reflectedMap.put("Minthe2", new Sfx(voicePath + "Minthe2.wav"));
            reflectedMap.put("ServantOfDarkness2", new Sfx(voicePath + "ServantOfDarkness2.wav"));
            reflectedMap.put("FlameNGlass3", new Sfx(voicePath + "FlameNGlass3.wav"));
            reflectedMap.put("Rogers", new Sfx(voicePath + "Rogers.wav"));
        }
        if (Loader.isModLoaded("CardAugments")) {
            AugmentHelper.register();
        }
    }

    public void receiveEditRelics() {
        BaseMod.addRelicToCustomPool(new FriendOfTruth(), Witchcraft.Enums.COLOR_BLUE);
        BaseMod.addRelicToCustomPool(new Eleanor(), Witchcraft.Enums.COLOR_BLUE);
        BaseMod.addRelicToCustomPool(new EnchantedLibrary(), Witchcraft.Enums.COLOR_BLUE);
        BaseMod.addRelicToCustomPool(new EarthEssenceRelic(), Witchcraft.Enums.COLOR_BLUE);
        BaseMod.addRelicToCustomPool(new shadowverse.relics.Mysteria(), Witchcraft.Enums.COLOR_BLUE);
        BaseMod.addRelicToCustomPool(new Offensive(), Witchcraft.Enums.COLOR_BLUE);
        BaseMod.addRelicToCustomPool(new Genius(), Witchcraft.Enums.COLOR_BLUE);
        BaseMod.addRelic(new BlackPinya(), RelicType.SHARED);
        BaseMod.addRelic(new GoldPinya(), RelicType.SHARED);
        BaseMod.addRelic(new KMR1(), RelicType.SHARED);
        BaseMod.addRelic(new KMR2(), RelicType.SHARED);
        BaseMod.addRelic(new MissLethal(), RelicType.SHARED);
        BaseMod.addRelic(new GeassRelic(), RelicType.SHARED);
        BaseMod.addRelic(new NeutralBook(), RelicType.SHARED);
        BaseMod.addRelic(new ValhoreanDealer(), RelicType.SHARED);
        BaseMod.addRelic(new AlterplaneArbiter(), RelicType.SHARED);
        BaseMod.addRelic(new Tree(), RelicType.SHARED);
        BaseMod.addRelic(new Bullet(), RelicType.SHARED);
        BaseMod.addRelicToCustomPool(new Offensive2(), Elf.Enums.COLOR_GREEN);
        BaseMod.addRelicToCustomPool(new SixMark(), Elf.Enums.COLOR_GREEN);
        BaseMod.addRelicToCustomPool(new ArisaBOSS(), Elf.Enums.COLOR_GREEN);
        BaseMod.addRelicToCustomPool(new NiouKyuu(), Elf.Enums.COLOR_GREEN);
        BaseMod.addRelicToCustomPool(new LymagaWeapon(), Elf.Enums.COLOR_GREEN);
        BaseMod.addRelicToCustomPool(new GlassOfIC(), Elf.Enums.COLOR_GREEN);
        BaseMod.addRelicToCustomPool(new Mimori(), Elf.Enums.COLOR_GREEN);
        BaseMod.addRelicToCustomPool(new KyoukaBOSS(), Witchcraft.Enums.COLOR_BLUE);
        BaseMod.addRelicToCustomPool(new KuonWeapon(), Witchcraft.Enums.COLOR_BLUE);
        BaseMod.addRelicToCustomPool(new Offensive3(), Necromancer.Enums.COLOR_PURPLE);
        BaseMod.addRelicToCustomPool(new BurialGround(), Necromancer.Enums.COLOR_PURPLE);
        BaseMod.addRelicToCustomPool(new LunaBOSS(), Necromancer.Enums.COLOR_PURPLE);
        BaseMod.addRelicToCustomPool(new Todoroki(), Necromancer.Enums.COLOR_PURPLE);
        BaseMod.addRelicToCustomPool(new TailRelic(), Necromancer.Enums.COLOR_PURPLE);
        BaseMod.addRelicToCustomPool(new InfernalCrown(), Necromancer.Enums.COLOR_PURPLE);
        BaseMod.addRelicToCustomPool(new Alice(), Necromancer.Enums.COLOR_PURPLE);
        BaseMod.addRelicToCustomPool(new Offensive4(), Vampire.Enums.COLOR_SCARLET);
        BaseMod.addRelicToCustomPool(new IriaBOSS(), Vampire.Enums.COLOR_SCARLET);
        BaseMod.addRelicToCustomPool(new LustRelic(), Vampire.Enums.COLOR_SCARLET);
        BaseMod.addRelicToCustomPool(new Pendant(), Vampire.Enums.COLOR_SCARLET);
        BaseMod.addRelicToCustomPool(new Lusia(), Vampire.Enums.COLOR_SCARLET);
        BaseMod.addRelicToCustomPool(new BerserkRelic(), Vampire.Enums.COLOR_SCARLET);
        BaseMod.addRelicToCustomPool(new LonePromise(), Vampire.Enums.COLOR_SCARLET);
        BaseMod.addRelicToCustomPool(new RevelrySeed(), Vampire.Enums.COLOR_SCARLET);
        BaseMod.addRelicToCustomPool(new Offensive5(), Nemesis.Enums.COLOR_SKY);
        BaseMod.addRelicToCustomPool(new NemesisBOSS(), Nemesis.Enums.COLOR_SKY);
        BaseMod.addRelicToCustomPool(new ArtsMaster(), Nemesis.Enums.COLOR_SKY);
        BaseMod.addRelicToCustomPool(new WhiteRelic(), Nemesis.Enums.COLOR_SKY);
        BaseMod.addRelicToCustomPool(new BlackRelic(), Nemesis.Enums.COLOR_SKY);
        BaseMod.addRelicToCustomPool(new Knife(), Nemesis.Enums.COLOR_SKY);
        BaseMod.addRelicToCustomPool(new TranquilCog(), Nemesis.Enums.COLOR_SKY);
        BaseMod.addRelicToCustomPool(new Offensive6(), Royal.Enums.COLOR_YELLOW);
        BaseMod.addRelicToCustomPool(new OliviasBlessing(), Royal.Enums.COLOR_YELLOW);
        BaseMod.addRelicToCustomPool(new WindGodsBlessing(), Royal.Enums.COLOR_YELLOW);
        BaseMod.addRelicToCustomPool(new Conscription(), Royal.Enums.COLOR_YELLOW);
        BaseMod.addRelicToCustomPool(new KagemitsuSword(), Royal.Enums.COLOR_YELLOW);
        BaseMod.addRelicToCustomPool(new Spineblade(), Royal.Enums.COLOR_YELLOW);
        BaseMod.addRelicToCustomPool(new Durandal(), Royal.Enums.COLOR_YELLOW);
        BaseMod.addRelicToCustomPool(new Offensive7(), Bishop.Enums.COLOR_WHITE);
        BaseMod.addRelicToCustomPool(new GrandShield(), Bishop.Enums.COLOR_WHITE);
        BaseMod.addRelicToCustomPool(new GrandSword(), Bishop.Enums.COLOR_WHITE);
        BaseMod.addRelicToCustomPool(new Savior(), Bishop.Enums.COLOR_WHITE);
        BaseMod.addRelicToCustomPool(new BishopBOSS(), Bishop.Enums.COLOR_WHITE);
        BaseMod.addRelicToCustomPool(new HeresyAvatar(), Bishop.Enums.COLOR_WHITE);
        BaseMod.addRelicToCustomPool(new ErisRelic(), Bishop.Enums.COLOR_WHITE);
        BaseMod.addRelicToCustomPool(new IminaRelic(), Bishop.Enums.COLOR_WHITE);
        BaseMod.addRelicToCustomPool(new KyaruBOSS(), Witchcraft.Enums.COLOR_BLUE);
        BaseMod.addRelicToCustomPool(new AnneBOSS(), Witchcraft.Enums.COLOR_BLUE);
        BaseMod.addRelicToCustomPool(new KokkoroBOSS(), Elf.Enums.COLOR_GREEN);
        BaseMod.addRelicToCustomPool(new MiyakoBOSS(), Necromancer.Enums.COLOR_PURPLE);
        BaseMod.addRelicToCustomPool(new IoBOSS(), Vampire.Enums.COLOR_SCARLET);
        BaseMod.addRelicToCustomPool(new RalmiaBOSS(), Nemesis.Enums.COLOR_SKY);
        BaseMod.addRelicToCustomPool(new ShizuruBOSS(), Royal.Enums.COLOR_YELLOW);
        BaseMod.addRelicToCustomPool(new YukariBOSS(), Bishop.Enums.COLOR_WHITE);
        BaseMod.addRelicToCustomPool(new ShinobuBOSS(), Necromancer.Enums.COLOR_PURPLE);
        BaseMod.addRelic(new BanShadowverse(), RelicType.SHARED);
        BaseMod.addRelic(new Enlightenment(), RelicType.SHARED);
        BaseMod.addRelic(new Gliesaray(), RelicType.SHARED);
        BaseMod.addRelic(new FortuneWell(), RelicType.SHARED);
        BaseMod.addRelicToCustomPool(new Juratio(), Bishop.Enums.COLOR_WHITE);
        BaseMod.addRelicToCustomPool(new Lagedor(), Royal.Enums.COLOR_YELLOW);
        BaseMod.addRelicToCustomPool(new MonikaBOSS(), Royal.Enums.COLOR_YELLOW);
        BaseMod.addRelicToCustomPool(new Offensive8(), Dragon.Enums.COLOR_BROWN);
        BaseMod.addRelicToCustomPool(new TotalDomination(),Dragon.Enums.COLOR_BROWN);
        BaseMod.addRelicToCustomPool(new MaoAndFengtian(),Dragon.Enums.COLOR_BROWN);
        BaseMod.addRelicToCustomPool(new shadowverse.relics.Hiro(),Dragon.Enums.COLOR_BROWN);
        BaseMod.addRelicToCustomPool(new Enkia(),Dragon.Enums.COLOR_BROWN);
        BaseMod.addRelicToCustomPool(new DragonQueenCastle(),Dragon.Enums.COLOR_BROWN);
        BaseMod.addRelicToCustomPool(new KayaBOSS(),Dragon.Enums.COLOR_BROWN);
        BaseMod.addRelicToCustomPool(new GreaBOSS(),Dragon.Enums.COLOR_BROWN);
        BaseMod.addRelicToCustomPool(new InoriBOSS(),Dragon.Enums.COLOR_BROWN);
    }

    class Keywords {
        Keyword[] keywords;
    }


    public void receiveEditStrings() {
        logger.info("Adding Strings");
        String cardsPath = "localization/cards-" + Settings.language + ".json";
        String characterPath = "localization/character-" + Settings.language + ".json";
        String powerPath = "localization/powers-" + Settings.language + ".json";
        String relicsPath = "localization/relics-" + Settings.language + ".json";
        String uiPath = "localization/UIStrings-" + Settings.language + ".json";
        String eventPath = "localization/events-" + Settings.language + ".json";
        String monsterPath = "localization/monsters-" + Settings.language + ".json";
        String potionPath = "localization/potions-" + Settings.language + ".json";
        String orbPath = "localization/orbs-" + Settings.language + ".json";
        BaseMod.loadCustomStringsFile(CardStrings.class, cardsPath);
        BaseMod.loadCustomStringsFile(CharacterStrings.class, characterPath);
        BaseMod.loadCustomStringsFile(PowerStrings.class, powerPath);
        BaseMod.loadCustomStringsFile(RelicStrings.class, relicsPath);
        BaseMod.loadCustomStringsFile(UIStrings.class, uiPath);
        BaseMod.loadCustomStringsFile(EventStrings.class, eventPath);
        BaseMod.loadCustomStringsFile(MonsterStrings.class, monsterPath);
        BaseMod.loadCustomStringsFile(PotionStrings.class, potionPath);
        BaseMod.loadCustomStringsFile(OrbStrings.class, orbPath);
        logger.info("Success");
    }

    public void receiveEditCards() {
        logger.info("Adding cards");
        BaseMod.addCard(new Strike_W());
        BaseMod.addCard(new Defend_W());
        BaseMod.addCard(new Insight());
        BaseMod.addCard(new FieryEmbrace());
        BaseMod.addCard(new FatesHand());
        BaseMod.addCard(new Lou());
        BaseMod.addCard(new Ogler());
        BaseMod.addCard(new ZealotOfTruth());
        BaseMod.addCard(new MagicMissile());
        BaseMod.addCard(new DimensionShift());
        BaseMod.addCard(new MagicOwl());
        BaseMod.addCard(new FireChain());
        BaseMod.addCard(new GigantChimera());
        BaseMod.addCard(new OmenOfTruth());
        BaseMod.addCard(new DimensionalWitch());
        BaseMod.addCard(new MysticSeeker());
        BaseMod.addCard(new EdictOfTruth());
        BaseMod.addCard(new TruthsAdjudication());
        BaseMod.addCard(new MysterianKnowledge());
        BaseMod.addCard(new MysterianCircle());
        BaseMod.addCard(new MysterianMissile());
        BaseMod.addCard(new CommenceExperiment());
        BaseMod.addCard(new MasterMageLevi());
        BaseMod.addCard(new Concentration());
        BaseMod.addCard(new PiousInstructor());
        BaseMod.addCard(new ConjureGuardian());
        BaseMod.addCard(new GolemAssault());
        BaseMod.addCard(new Clarke());
        BaseMod.addCard(new Faust());
        BaseMod.addCard(new OrichalcumGolem());
        BaseMod.addCard(new DwarfAlchemist());
        BaseMod.addCard(new WitchsCauldron());
        BaseMod.addCard(new Magisa());
        BaseMod.addCard(new StaffOfWhirlwinds());
        BaseMod.addCard(new ConjureTwosome());
        BaseMod.addCard(new Petrification());
        BaseMod.addCard(new AbsoluteZeroBlade());
        BaseMod.addCard(new Chaos());
        BaseMod.addCard(new ChainLightning());
        BaseMod.addCard(new Runie());
        BaseMod.addCard(new Telescope());
        BaseMod.addCard(new ForbiddenDarkMage());
        BaseMod.addCard(new ProductMachine());
        BaseMod.addCard(new RepairMode());
        BaseMod.addCard(new JetBroomWitch());
        BaseMod.addCard(new TetrasMettle());
        BaseMod.addCard(new IsabellesConjuration());
        BaseMod.addCard(new SorceryInSolidarity());
        BaseMod.addCard(new MechanizedLifeform());
        BaseMod.addCard(new MagitechGolem());
        BaseMod.addCard(new MechabookSorcerer());
        BaseMod.addCard(new SonicFour());
        BaseMod.addCard(new Tetra());
        BaseMod.addCard(new MechastaffSorcerer());
        BaseMod.addCard(new ArsMagna());
        BaseMod.addCard(new Cagliostro());
        BaseMod.addCard(new MadcapConjuration());
        BaseMod.addCard(new Awakened());
        BaseMod.addCard(new Erasmus());
        BaseMod.addCard(new Oz());
        BaseMod.addCard(new GrandSummoning());
        BaseMod.addCard(new Shop());
        BaseMod.addCard(new NaterranGreatTree());
        BaseMod.addCard(new Geoelementist());
        BaseMod.addCard(new Stormelementalist());
        BaseMod.addCard(new Pyromancer());
        BaseMod.addCard(new Elementalmana());
        BaseMod.addCard(new Riley());
        BaseMod.addCard(new ApexElemental());
        BaseMod.addCard(new DualAngle());
        BaseMod.addCard(new Ghios());
        BaseMod.addCard(new OmenOfOne());
        BaseMod.addCard(new Mysteria());
        BaseMod.addCard(new EarthFall());
        BaseMod.addCard(new InfernalSurge());
        BaseMod.addCard(new InfernalGaze());
        BaseMod.addCard(new HeavenFall());
        BaseMod.addCard(new Astaroth());
        BaseMod.addCard(new Scorpion());
        BaseMod.addCard(new Flamelord());
        BaseMod.addCard(new ViciousCommander());
        BaseMod.addCard(new WrathfulIcefiend());
        BaseMod.addCard(new Behemoth());
        BaseMod.addCard(new DemonOfPurgatory());
        BaseMod.addCard(new Desire());
        BaseMod.addCard(new Satan());
        BaseMod.addCard(new EmbodimentOfCocytus());
        BaseMod.addCard(new JudgmentWord());
        BaseMod.addCard(new Vincent());
        BaseMod.addCard(new Machinus());
        BaseMod.addCard(new GrimoireSorcerer());
        BaseMod.addCard(new WitchSnap());
        BaseMod.addCard(new Aeroelementalist());
        BaseMod.addCard(new Zeus(0));
        BaseMod.addCard(new StarBright());
        BaseMod.addCard(new TheWorld());
        BaseMod.addCard(new TheWorld_I());
        BaseMod.addCard(new Grimnir());
        BaseMod.addCard(new SlashOfOne());
        BaseMod.addCard(new Dis());
        BaseMod.addCard(new Servant());
        BaseMod.addCard(new SilentRider());
        BaseMod.addCard(new OldSatan());
        BaseMod.addCard(new BellAngle());
        BaseMod.addCard(new Omniscient());
        BaseMod.addCard(new Ignorant());
        BaseMod.addCard(new TheFool());
        BaseMod.addCard(new Mother());
        BaseMod.addCard(new Glass());
        BaseMod.addCard(new FlameNGlass());
        BaseMod.addCard(new HeavensDoor());
        BaseMod.addCard(new Technolord());
        BaseMod.addCard(new LegendaryFighterA());
        BaseMod.addCard(new Gabriel());
        BaseMod.addCard(new Kuon());
        BaseMod.addCard(new PaperShikigami());
        BaseMod.addCard(new DemonicShikigami());
        BaseMod.addCard(new CelestialShikigami());
        BaseMod.addCard(new Anne());
        BaseMod.addCard(new AnnesSorcery());
        BaseMod.addCard(new AnnesSummoning());
        BaseMod.addCard(new Grea());
        BaseMod.addCard(new Inferno());
        BaseMod.addCard(new Ember());
        BaseMod.addCard(new Owen());
        BaseMod.addCard(new Miranda());
        BaseMod.addCard(new MysterianRite());
        BaseMod.addCard(new Horse());
        BaseMod.addCard(new Jeep());
        BaseMod.addCard(new Motorbike());
        BaseMod.addCard(new RapidFire());
        BaseMod.addCard(new Maiser());
        BaseMod.addCard(new CrystalBright());
        BaseMod.addCard(new GemLight());
        BaseMod.addCard(new BelphometStatus());
        BaseMod.addCard(new ManaForce());
        BaseMod.addCard(new Strike_E());
        BaseMod.addCard(new Defend_E());
        BaseMod.addCard(new Fairy());
        BaseMod.addCard(new FairyWhisperer());
        BaseMod.addCard(new SylvanJustice());
        BaseMod.addCard(new NaturesGuidance());
        BaseMod.addCard(new AirboundBarrage());
        BaseMod.addCard(new WhirlwindRhinoceroach());
        BaseMod.addCard(new Rhinoceroach());
        BaseMod.addCard(new ElfSong());
        BaseMod.addCard(new FairyCircle());
        BaseMod.addCard(new WoodOfBrambles());
        BaseMod.addCard(new WardOfUnkilling());
        BaseMod.addCard(new OmenOfUnkilling());
        BaseMod.addCard(new AriasWhirlwind());
        BaseMod.addCard(new Bayle());
        BaseMod.addCard(new Hero());
        BaseMod.addCard(new WindFall());
        BaseMod.addCard(new ElfGuard());
        BaseMod.addCard(new Aria());
        BaseMod.addCard(new Flame());
        BaseMod.addCard(new LegendaryFighter());
        BaseMod.addCard(new NaterranFuture());
        BaseMod.addCard(new GuardOfMachinatree());
        BaseMod.addCard(new RoboticBagworm());
        BaseMod.addCard(new Damian());
        BaseMod.addCard(new MachineClaw());
        BaseMod.addCard(new IrongliderElf());
        BaseMod.addCard(new Cassiopeia());
        BaseMod.addCard(new Loxis());
        BaseMod.addCard(new NaturalMana());
        BaseMod.addCard(new ScaryTrend());
        BaseMod.addCard(new Ladica());
        BaseMod.addCard(new Packing());
        BaseMod.addCard(new VictoryCard());
        BaseMod.addCard(new TreacherousReversal());
        BaseMod.addCard(new TheHanged());
        BaseMod.addCard(new Verdant());
        BaseMod.addCard(new WindFairy());
        BaseMod.addCard(new ServantOfUnkilling());
        BaseMod.addCard(new MarkOfUnkilling());
        BaseMod.addCard(new ZealotOfUnkilling());
        BaseMod.addCard(new VarmintHunter());
        BaseMod.addCard(new Beast());
        BaseMod.addCard(new Beauty());
        BaseMod.addCard(new MiracleOfLove());
        BaseMod.addCard(new Sekka());
        BaseMod.addCard(new ResolveOfSekka());
        BaseMod.addCard(new ForestFairy());
        BaseMod.addCard(new Lisa());
        BaseMod.addCard(new NatureCorroded());
        BaseMod.addCard(new Genshin());
        BaseMod.addCard(new GreenWoodGuardian());
        BaseMod.addCard(new CrossCombination());
        BaseMod.addCard(new GreenbrierElf());
        BaseMod.addCard(new WoodlandCleaver());
        BaseMod.addCard(new Lymaga());
        BaseMod.addCard(new WildwoodMatriarch());
        BaseMod.addCard(new Aerin());
        BaseMod.addCard(new Metera());
        BaseMod.addCard(new BeetleWarrior());
        BaseMod.addCard(new BlossomTreant());
        BaseMod.addCard(new Rino(0));
        BaseMod.addCard(new Kokkoro(0));
        BaseMod.addCard(new Amataz());
        BaseMod.addCard(new DivineSmithing());
        BaseMod.addCard(new Cleft());
        BaseMod.addCard(new TwinAssault());
        BaseMod.addCard(new Homecoming());
        BaseMod.addCard(new PixieParadise());
        BaseMod.addCard(new Lycoris());
        BaseMod.addCard(new AvatarOfFruition());
        BaseMod.addCard(new ThronBurst());
        BaseMod.addCard(new RoseQueen());
        BaseMod.addCard(new Pamera());
        BaseMod.addCard(new SkyDevouring());
        BaseMod.addCard(new Korwa());
        BaseMod.addCard(new Fil());
        BaseMod.addCard(new PrimalGigant());
        BaseMod.addCard(new NewEmber());
        BaseMod.addCard(new ExceedBurst());
        BaseMod.addCard(new ShikigamiSummoning());
        BaseMod.addCard(new Geass());
        BaseMod.addCard(new Strike_N());
        BaseMod.addCard(new Defend_N());
        BaseMod.addCard(new UndyingResentment());
        BaseMod.addCard(new SpartoiSergent());
        BaseMod.addCard(new Path());
        BaseMod.addCard(new SoulConversion());
        BaseMod.addCard(new Mordecai());
        BaseMod.addCard(new LurchingCorpse());
        BaseMod.addCard(new DeathTyrant());
        BaseMod.addCard(new Minthe());
        BaseMod.addCard(new Fafnir());
        BaseMod.addCard(new ApostleOfSilence());
        BaseMod.addCard(new DiscipleOfSilence());
        BaseMod.addCard(new DeathParty());
        BaseMod.addCard(new DeathNote());
        BaseMod.addCard(new FoulTempest());
        BaseMod.addCard(new Zombie());
        BaseMod.addCard(new Litch());
        BaseMod.addCard(new ImpiousResurrection());
        BaseMod.addCard(new EternalVow());
        BaseMod.addCard(new Ceres());
        BaseMod.addCard(new Hector());
        BaseMod.addCard(new RevenantRam());
        BaseMod.addCard(new ReviveMana());
        BaseMod.addCard(new ZombieDog());
        BaseMod.addCard(new NecroAnimals());
        BaseMod.addCard(new Lubelle());
        BaseMod.addCard(new Thoth());
        BaseMod.addCard(new TrothCurse());
        BaseMod.addCard(new GhostRider());
        BaseMod.addCard(new GloamingTombs());
        BaseMod.addCard(new DemonicProcession());
        BaseMod.addCard(new Ceridwen());
        BaseMod.addCard(new DeathBreath());
        BaseMod.addCard(new TheLovers());
        BaseMod.addCard(new SpiritCurator());
        BaseMod.addCard(new Nicola());
        BaseMod.addCard(new ForbiddenArt());
        BaseMod.addCard(new SpartoiSoldier());
        BaseMod.addCard(new Chris());
        BaseMod.addCard(new SoulStrike());
        BaseMod.addCard(new Kagero());
        BaseMod.addCard(new WightKing());
        BaseMod.addCard(new Wight());
        BaseMod.addCard(new ImmortalThane());
        BaseMod.addCard(new NecroAssassin());
        BaseMod.addCard(new Nephthys());
        BaseMod.addCard(new CarnivalNecromancer());
        BaseMod.addCard(new EverdarkStrix());
        BaseMod.addCard(new HungrySlash());
        BaseMod.addCard(new DeadMetalStar());
        BaseMod.addCard(new Skeleton());
        BaseMod.addCard(new HinterlandGhoul());
        BaseMod.addCard(new BoneDominator());
        BaseMod.addCard(new NecroImpulse());
        BaseMod.addCard(new BoneChimera());
        BaseMod.addCard(new LadyGray());
        BaseMod.addCard(new SowDeathReapLife());
        BaseMod.addCard(new BoneDrone());
        BaseMod.addCard(new GigantSkull());
        BaseMod.addCard(new IrongearCorpsman());
        BaseMod.addCard(new ForbiddenAndBalance());
        BaseMod.addCard(new Arcus());
        BaseMod.addCard(new Manmaru1());
        BaseMod.addCard(new GenerateNine());
        BaseMod.addCard(new Aenea());
        BaseMod.addCard(new Andrealphus());
        BaseMod.addCard(new OmenOfSilence());
        BaseMod.addCard(new Gremory());
        BaseMod.addCard(new Aisha());
        BaseMod.addCard(new RegenerateSpirit());
        BaseMod.addCard(new Hades());
        BaseMod.addCard(new Mimi());
        BaseMod.addCard(new Koko());
        BaseMod.addCard(new Cerberus());
        BaseMod.addCard(new AttendentOfNight());
        BaseMod.addCard(new Orthrus());
        BaseMod.addCard(new Pudding());
        BaseMod.addCard(new Miyako(0));
        BaseMod.addCard(new LunaGame());
        BaseMod.addCard(new AeneaFriendship());
        BaseMod.addCard(new FriendsForever());
        BaseMod.addCard(new SonataOfSilence());
        BaseMod.addCard(new SoulTaker());
        BaseMod.addCard(new OneTailFox());
        BaseMod.addCard(new Ginsetsu());
        BaseMod.addCard(new Ferry());
        BaseMod.addCard(new StormArrow());
        BaseMod.addCard(new GaleArrow());
        BaseMod.addCard(new ArisaArrow());
        BaseMod.addCard(new Arisa());
        BaseMod.addCard(new NecroTemptation());
        BaseMod.addCard(new LunaDoll());
        BaseMod.addCard(new Luna());
        BaseMod.addCard(new UnionMagic());
        BaseMod.addCard(new UltimateMagic());
        BaseMod.addCard(new FireBall());
        BaseMod.addCard(new Isabelle());
        BaseMod.addCard(new Strike_V());
        BaseMod.addCard(new Defend_V());
        BaseMod.addCard(new DarkGeneral());
        BaseMod.addCard(new RazoryClaw());
        BaseMod.addCard(new ForestBat());
        BaseMod.addCard(new BloodPact());
        BaseMod.addCard(new BloodGarden());
        BaseMod.addCard(new BloodWolf());
        BaseMod.addCard(new SpiderWebImp());
        BaseMod.addCard(new AntelopeWarrior());
        BaseMod.addCard(new HellSpearWarrior());
        BaseMod.addCard(new MoonriseWerewolf());
        BaseMod.addCard(new BloodtrothEpitaph());
        BaseMod.addCard(new Revelation());
        BaseMod.addCard(new UriasRevelry());
        BaseMod.addCard(new MonoResolve());
        BaseMod.addCard(new GarnetWaltz());
        BaseMod.addCard(new Shemyaza());
        BaseMod.addCard(new DarkfeastBat());
        BaseMod.addCard(new Belphegor());
        BaseMod.addCard(new SexyVampire());
        BaseMod.addCard(new ApostleOfLust());
        BaseMod.addCard(new DiabolicDrain());
        BaseMod.addCard(new Baal());
        BaseMod.addCard(new Ravening());
        BaseMod.addCard(new LunaticMana());
        BaseMod.addCard(new SadisticDemon());
        BaseMod.addCard(new BearBerserk());
        BaseMod.addCard(new FloodBehemoth());
        BaseMod.addCard(new BeastEmpress());
        BaseMod.addCard(new CorruptedBat());
        BaseMod.addCard(new WingsOfLust());
        BaseMod.addCard(new DemonicAssault());
        BaseMod.addCard(new Emeralda());
        BaseMod.addCard(new Azazel());
        BaseMod.addCard(new Yurius());
        BaseMod.addCard(new UnleashTheNightmare());
        BaseMod.addCard(new MechashotDevil());
        BaseMod.addCard(new ArmoredBat());
        BaseMod.addCard(new MechaforgeDevil());
        BaseMod.addCard(new FirstOne());
        BaseMod.addCard(new Mono());
        BaseMod.addCard(new Mono_Unlock());
        BaseMod.addCard(new Slayn());
        BaseMod.addCard(new Neun());
        BaseMod.addCard(new CreepingMadness());
        BaseMod.addCard(new Cradle());
        BaseMod.addCard(new RuinwebSpider());
        BaseMod.addCard(new BloodArts());
        BaseMod.addCard(new Aluzard());
        BaseMod.addCard(new SummoningBloodkin());
        BaseMod.addCard(new RageCommander());
        BaseMod.addCard(new Relinquish());
        BaseMod.addCard(new Flauros());
        BaseMod.addCard(new DevilOfVengeance());
        BaseMod.addCard(new OmenOfLust());
        BaseMod.addCard(new ServantOfLust());
        BaseMod.addCard(new DevilSheep());
        BaseMod.addCard(new TheBerserker());
        BaseMod.addCard(new PrisonOfPain());
        BaseMod.addCard(new Lilim());
        BaseMod.addCard(new ChaosShip());
        BaseMod.addCard(new NightFall());
        BaseMod.addCard(new MadnessRevealed());
        BaseMod.addCard(new RestlessParish());
        BaseMod.addCard(new TerrorNight());
        BaseMod.addCard(new NightmareTime());
        BaseMod.addCard(new BloodyNail());
        BaseMod.addCard(new DreadAura());
        BaseMod.addCard(new Urias());
        BaseMod.addCard(new Jormungand());
        BaseMod.addCard(new OldBloodKing());
        BaseMod.addCard(new NightHorde());
        BaseMod.addCard(new Veight());
        BaseMod.addCard(new Vanpi());
        BaseMod.addCard(new Vanpi1());
        BaseMod.addCard(new Vanpi2());
        BaseMod.addCard(new Volteo());
        BaseMod.addCard(new ShowdownDemon());
        BaseMod.addCard(new BatNoise());
        BaseMod.addCard(new ShadowDevil());
        BaseMod.addCard(new MaskedMayhem());
        BaseMod.addCard(new Ayre());
        BaseMod.addCard(new Lucius());
        BaseMod.addCard(new SilverboltHail());
        BaseMod.addCard(new ArkDaemon());
        BaseMod.addCard(new Archdemon());
        BaseMod.addCard(new NightVampire());
        BaseMod.addCard(new Executioner());
        BaseMod.addCard(new BelphometCard());
        BaseMod.addCard(new ArmoredTentacle());
        BaseMod.addCard(new AssaultTentacle());
        BaseMod.addCard(new TisiphoneCard());
        BaseMod.addCard(new MegaeraCard());
        BaseMod.addCard(new AlectorCard());
        BaseMod.addCard(new NeoTisiphone());
        BaseMod.addCard(new NeoMegaera());
        BaseMod.addCard(new NeoAlector());
        BaseMod.addCard(new ProphecyOfDoom());
        BaseMod.addCard(new ProphecyOfBoons());
        BaseMod.addCard(new LadicaEmbrace());
        BaseMod.addCard(new EternalPotion());
        BaseMod.addCard(new InstantPotion());
        BaseMod.addCard(new ImmoralDesire());
        BaseMod.addCard(new Kyouka(0));
        BaseMod.addCard(new Irya(0));
        BaseMod.addCard(new Strike_Nm());
        BaseMod.addCard(new Defend_Nm());
        BaseMod.addCard(new DimensionCut());
        BaseMod.addCard(new AnalyzeArtifact());
        BaseMod.addCard(new AncientArtifact());
        BaseMod.addCard(new MysticArtifact());
        BaseMod.addCard(new RadiantArtifact());
        BaseMod.addCard(new PrimeArtifact());
        BaseMod.addCard(new ProtectArtifact());
        BaseMod.addCard(new EdgeArtifact());
        BaseMod.addCard(new BlitzArtifact());
        BaseMod.addCard(new TraceArtifact());
        BaseMod.addCard(new SpineArtifact());
        BaseMod.addCard(new StrikeFormGolem());
        BaseMod.addCard(new GuardFormGolem());
        BaseMod.addCard(new Puppet());
        BaseMod.addCard(new MagisteelLion());
        BaseMod.addCard(new Acceleratium());
        BaseMod.addCard(new AugmentationBestowal());
        BaseMod.addCard(new ParadigmShift());
        BaseMod.addCard(new Automation());
        BaseMod.addCard(new Synchronization());
        BaseMod.addCard(new ArtifactScan());
        BaseMod.addCard(new Biofabrication());
        BaseMod.addCard(new Icarus());
        BaseMod.addCard(new RoboticUser());
        BaseMod.addCard(new ArtifactCall());
        BaseMod.addCard(new NilpotentEntity());
        BaseMod.addCard(new DeusExMachina());
        BaseMod.addCard(new NewOrder());
        BaseMod.addCard(new Tolerance());
        BaseMod.addCard(new Enforcer());
        BaseMod.addCard(new MegaEnforcer());
        BaseMod.addCard(new Invasion());
        BaseMod.addCard(new Armadillo());
        BaseMod.addCard(new AerialCraft());
        BaseMod.addCard(new LasershellTortoise());
        BaseMod.addCard(new Bearminator());
        BaseMod.addCard(new Prototype());
        BaseMod.addCard(new MagnaGiant());
        BaseMod.addCard(new MagnaZero());
        BaseMod.addCard(new Yuwan());
        BaseMod.addCard(new Paracelsus());
        BaseMod.addCard(new Windup());
        BaseMod.addCard(new PuppeteerStrings());
        BaseMod.addCard(new InfinityPuppeteer());
        BaseMod.addCard(new WhiteArtifact());
        BaseMod.addCard(new BlackArtifact());
        BaseMod.addCard(new OmenOfDestruction());
        BaseMod.addCard(new Licht());
        BaseMod.addCard(new PuppetRoom());
        BaseMod.addCard(new Roid());
        BaseMod.addCard(new Victoria());
        BaseMod.addCard(new HeartlessBattle());
        BaseMod.addCard(new IronStaffMechanic());
        BaseMod.addCard(new YuwanFury());
        BaseMod.addCard(new BelphometCrackdown());
        BaseMod.addCard(new RebelAgainstFate());
        BaseMod.addCard(new PurgationBlade());
        BaseMod.addCard(new Maisha());
        BaseMod.addCard(new Metaproduction());
        BaseMod.addCard(new DeviceTuner());
        BaseMod.addCard(new ApostleOfDestruction());
        BaseMod.addCard(new DiscipleOfDestruction());
        BaseMod.addCard(new StringMaster());
        BaseMod.addCard(new DominateFortress());
        BaseMod.addCard(new KnowerOfHistory());
        BaseMod.addCard(new GadgetUser());
        BaseMod.addCard(new Karula());
        BaseMod.addCard(new CurseOfPurgation());
        BaseMod.addCard(new Uno());
        BaseMod.addCard(new Due());
        BaseMod.addCard(new Tre());
        BaseMod.addCard(new Orchid1());
        BaseMod.addCard(new Orchid2());
        BaseMod.addCard(new Orchid());
        BaseMod.addCard(new MagiTrainCard());
        BaseMod.addCard(new ICCard());
        BaseMod.addCard(new DeathPenalty());
        BaseMod.addCard(new UnnamedDetermination());
        BaseMod.addCard(new Noa());
        BaseMod.addCard(new MindDivider());
        BaseMod.addCard(new Ines());
        BaseMod.addCard(new DollsOwner());
        BaseMod.addCard(new DestructionRefrain());
        BaseMod.addCard(new Modest());
        BaseMod.addCard(new Ralmia());
        BaseMod.addCard(new Concentrate());
        BaseMod.addCard(new TechnologyMana());
        BaseMod.addCard(new OmniscientKaiser());
        BaseMod.addCard(new Spine());
        BaseMod.addCard(new Miriam());
        BaseMod.addCard(new CannonHermitCrab());
        BaseMod.addCard(new MultiarmedArtifact());
        BaseMod.addCard(new ArtifactImpulse());
        BaseMod.addCard(new ServantOfDarkness());
        BaseMod.addCard(new GenesisArtifact());
        BaseMod.addCard(new GuardArtifact());
        BaseMod.addCard(new DefectArtifact());
        BaseMod.addCard(new CannonArtifact());
        BaseMod.addCard(new Zwei());
        BaseMod.addCard(new Illganeau());
        BaseMod.addCard(new VoidRealize());
        BaseMod.addCard(new Wretches());
        BaseMod.addCard(new BrandOfMorningStar());
        BaseMod.addCard(new ShadowSoldier());
        BaseMod.addCard(new ShadowCommander());
        BaseMod.addCard(new TheWheelOfFortune());
        BaseMod.addCard(new Scavenge());
        BaseMod.addCard(new EnhancedPuppet());
        BaseMod.addCard(new RevisedExperiment());
        BaseMod.addCard(new Sleipnir());
        BaseMod.addCard(new Odin());
        BaseMod.addCard(new KMRGaze());
        BaseMod.addCard(new WUP());
        BaseMod.addCard(new Altersphere());
        BaseMod.addCard(new Death());
        BaseMod.addCard(new Betray());
        BaseMod.addCard(new Rowen());
        BaseMod.addCard(new CurseOfTheBlackDragon());
        BaseMod.addCard(new ShadowversePain());
        BaseMod.addCard(new ShadowBahmut());
        BaseMod.addCard(new KMRsPresent());
        BaseMod.addCard(new SevensForceSorcerer());
        BaseMod.addCard(new ShiningValkyrie());
        BaseMod.addCard(new LegendSwordCommander());
        BaseMod.addCard(new DeadSoulTaker());
        BaseMod.addCard(new AbyssDoomLord());
        BaseMod.addCard(new Defend_R());
        BaseMod.addCard(new Strike_R());
        BaseMod.addCard(new OathlessKnight());
        BaseMod.addCard(new GildedBlade());
        BaseMod.addCard(new GildedGoblet());
        BaseMod.addCard(new GildedNecklace());
        BaseMod.addCard(new GildedBoots());
        BaseMod.addCard(new GrandAcquisition());
        BaseMod.addCard(new SageCommander());
        BaseMod.addCard(new DanceOfUsurpation());
        BaseMod.addCard(new UsurpingSpineblade());
        BaseMod.addCard(new WeeMerchantsAppraisal());
        BaseMod.addCard(new DiscipleOfUsurpation());
        BaseMod.addCard(new ApostleOfUsurpation());
        BaseMod.addCard(new Octrice());
        BaseMod.addCard(new DramaticRetreat());
        BaseMod.addCard(new ShieldPhalanx());
        BaseMod.addCard(new WhitePaladin());
        BaseMod.addCard(new TemperedMana());
        BaseMod.addCard(new Mars());
        BaseMod.addCard(new MistolinaBayleon());
        BaseMod.addCard(new Sera());
        BaseMod.addCard(new FrenziedCorpsmaster());
        BaseMod.addCard(new CatAdmiral());
        BaseMod.addCard(new FortressStrategist());
        BaseMod.addCard(new EvolutionPoint());
        BaseMod.addCard(new EnragedGeneral());
        BaseMod.addCard(new LuminousMage());
        BaseMod.addCard(new PrudentGeneral());
        BaseMod.addCard(new DualbladeKnight());
        BaseMod.addCard(new StrikeproneGuardian());
        BaseMod.addCard(new MonochromeEndgame());
        BaseMod.addCard(new QueenHemera_Card());
        BaseMod.addCard(new QueenMagnus_Card());
        BaseMod.addCard(new FlyingMessengerSquirrel());
        BaseMod.addCard(new PompousSummons());
        BaseMod.addCard(new BrothersUnited());
        BaseMod.addCard(new HonorableThief());
        BaseMod.addCard(new FloralFencer());
        BaseMod.addCard(new SunnyDayEncounter());
        BaseMod.addCard(new WarriorWing());
        BaseMod.addCard(new Alyaska());
        BaseMod.addCard(new ExterminusWeapon());
        BaseMod.addCard(new RadicalGunslinger());
        BaseMod.addCard(new Mirin());
        BaseMod.addCard(new Seofon());
        BaseMod.addCard(new Eahta());
        BaseMod.addCard(new StrokeOfConviction());
        BaseMod.addCard(new ErikasSleight());
        BaseMod.addCard(new MistolinasSwordplay());
        BaseMod.addCard(new BayleonsCommand());
        BaseMod.addCard(new FrontlineInstructor());
        BaseMod.addCard(new RoyalBanner());
        BaseMod.addCard(new LuxbladeArriet());
        BaseMod.addCard(new EmpressOfSerenity());
        BaseMod.addCard(new Charlotta());
        BaseMod.addCard(new Latham());
        BaseMod.addCard(new Alwida());
        BaseMod.addCard(new Patrick());
        BaseMod.addCard(new Johann());
        BaseMod.addCard(new Grayson());
        BaseMod.addCard(new Albert());
        BaseMod.addCard(new LevinScholar());
        BaseMod.addCard(new GloriousCore());
        BaseMod.addCard(new LevinBeastmaster());
        BaseMod.addCard(new WhiteTiger());
        BaseMod.addCard(new Jeno());
        BaseMod.addCard(new LevinArcher());
        BaseMod.addCard(new Lounes());
        BaseMod.addCard(new Cybercannoneer());
        BaseMod.addCard(new StampedingFortress());
        BaseMod.addCard(new MeetTheLevinSisters());
        BaseMod.addCard(new Mina());
        BaseMod.addCard(new Mona());
        BaseMod.addCard(new Mena());
        BaseMod.addCard(new Nahtnaught());
        BaseMod.addCard(new TyrantsOrder());
        BaseMod.addCard(new Leonidas());
        BaseMod.addCard(new LevinJustice());
        BaseMod.addCard(new YuriusLevinDuke());
        BaseMod.addCard(new CaptainWalfrid());
        BaseMod.addCard(new Reinhardt());
        BaseMod.addCard(new Garven());
        BaseMod.addCard(new Kagemitsu());
        BaseMod.addCard(new Alexander());
        BaseMod.addCard(new MirrorImage());
        BaseMod.addCard(new Valse());
        BaseMod.addCard(new HolyPurebomb());
        BaseMod.addCard(new FatalSpellbomb());
        BaseMod.addCard(new Ernesta());
        BaseMod.addCard(new DreadHound());
        BaseMod.addCard(new Ilmisuna());
        BaseMod.addCard(new MasterDealer());
        BaseMod.addCard(new EleganceInAction());
        BaseMod.addCard(new Strike_B());
        BaseMod.addCard(new Defend_B());
        BaseMod.addCard(new BlackenedScripture());
        BaseMod.addCard(new PriestOfTheCudgel());
        BaseMod.addCard(new SacredPlea());
        BaseMod.addCard(new HallowedDogma());
        BaseMod.addCard(new ImaginationRealized());
        BaseMod.addCard(new GuildAssembly());
        BaseMod.addCard(new MysterianWisdom());
        BaseMod.addCard(new DuskshadeBat());
        BaseMod.addCard(new Cernunnos());
        BaseMod.addCard(new MiracleHarvest());
        BaseMod.addCard(new HolyFlameTiger());
        BaseMod.addCard(new HolyFalcon());
        BaseMod.addCard(new BeastCallAria());
        BaseMod.addCard(new MoriaeEncomium());
        BaseMod.addCard(new ThemisDecree());
        BaseMod.addCard(new JusticeMana());
        BaseMod.addCard(new HolyEnchanter());
        BaseMod.addCard(new PunishmentSniper());
        BaseMod.addCard(new SeraphLapis());
        BaseMod.addCard(new RenascentSeraph());
        BaseMod.addCard(new AwakenedSeraph());
        BaseMod.addCard(new EnstatuedSeraph());
        BaseMod.addCard(new Ra());
        BaseMod.addCard(new OmenOfRepose());
        BaseMod.addCard(new Agnes());
        BaseMod.addCard(new HolywingDragon());
        BaseMod.addCard(new WhitefangTemple());
        BaseMod.addCard(new ElanaPrayer());
        BaseMod.addCard(new Elana());
        BaseMod.addCard(new IronknuckleNun());
        BaseMod.addCard(new RadiantAngel());
        BaseMod.addCard(new GodLovingSmite());
        BaseMod.addCard(new HallowedCave());
        BaseMod.addCard(new HolyHector());
        BaseMod.addCard(new AcolyteLight());
        BaseMod.addCard(new TempleOfHeresy());
        BaseMod.addCard(new Abdiel());
        BaseMod.addCard(new RegalFalcon());
        BaseMod.addCard(new DivineBirdSong());
        BaseMod.addCard(new Wilbert());
        BaseMod.addCard(new Indulgence());
        BaseMod.addCard(new Anvelt());
        BaseMod.addCard(new EvilWorship());
        BaseMod.addCard(new DirtyPriest());
        BaseMod.addCard(new Tenko());
        BaseMod.addCard(new PegasusSculpture());
        BaseMod.addCard(new BenevolentBlight());
        BaseMod.addCard(new RobowingPrecant());
        BaseMod.addCard(new HeavenlyKnight());
        BaseMod.addCard(new SummitTemple());
        BaseMod.addCard(new Charaton());
        BaseMod.addCard(new TarnishedGrail());
        BaseMod.addCard(new SkullFane());
        BaseMod.addCard(new Tribunal());
        BaseMod.addCard(new HealingPrayer());
        BaseMod.addCard(new HereticPriest());
        BaseMod.addCard(new DarkOffering());
        BaseMod.addCard(new UnlikelyFellowship());
        BaseMod.addCard(new HeavenFire());
        BaseMod.addCard(new Selena());
        BaseMod.addCard(new GoldenCity());
        BaseMod.addCard(new RobowhipReverend());
        BaseMod.addCard(new HeavenlyAegis());
        BaseMod.addCard(new SalvationLimonia());
        BaseMod.addCard(new Limonia());
        BaseMod.addCard(new Vice());
        BaseMod.addCard(new KLT());
        BaseMod.addCard(new TheUntrueGod());
        BaseMod.addCard(new AngelRat());
        BaseMod.addCard(new MarkUnleashed());
        BaseMod.addCard(new MarkOfBalance());
        BaseMod.addCard(new Marlone());
        BaseMod.addCard(new HolyShieldLion());
        BaseMod.addCard(new HolyPlateLion());
        BaseMod.addCard(new HolyKingLion());
        BaseMod.addCard(new LionCrystal());
        BaseMod.addCard(new LionTemple());
        BaseMod.addCard(new PeaceWeaver());
        BaseMod.addCard(new PrismSwing());
        BaseMod.addCard(new SalvationLion());
        BaseMod.addCard(new Munyaru());
        BaseMod.addCard(new SneakAttack());
        BaseMod.addCard(new ErisPrayer());
        BaseMod.addCard(new MunyaruRaid());
        BaseMod.addCard(new MajorPrayers());
        BaseMod.addCard(new RealmOfRepose());
        BaseMod.addCard(new Jatelant());
        BaseMod.addCard(new SomnolentStrength());
        BaseMod.addCard(new TheStrength());
        BaseMod.addCard(new QueenOfHope());
        BaseMod.addCard(new SacredCounter());
        BaseMod.addCard(new Muse());
        BaseMod.addCard(new MusePrincess());
        BaseMod.addCard(new PrimalShipwright());
        BaseMod.addCard(new Garuda());
        BaseMod.addCard(new Jeanne());
        BaseMod.addCard(new RelicSphere());
        BaseMod.addCard(new RelicPrism());
        BaseMod.addCard(new RelicTorus());
        BaseMod.addCard(new RelicPlaton());
        BaseMod.addCard(new RelicGod());
        BaseMod.addCard(new Eris());
        BaseMod.addCard(new Saren(0));
        BaseMod.addCard(new Lorena());
        BaseMod.addCard(new LorenaPunch());
        BaseMod.addCard(new LorenaWater());
        BaseMod.addCard(new ImperialSaint());
        BaseMod.addCard(new Valdain());
        BaseMod.addCard(new Sukuna());
        BaseMod.addCard(new TerrorFormer());
        BaseMod.addCard(new Assassin());
        BaseMod.addCard(new Leod());
        BaseMod.addCard(new VeiledReckoning());
        BaseMod.addCard(new Dualblade());
        BaseMod.addCard(new AmbushBuff());
        BaseMod.addCard(new ShinobiTanuki());
        BaseMod.addCard(new Tsubaki());
        BaseMod.addCard(new ShieldOfFlame());
        BaseMod.addCard(new BladeDance());
        BaseMod.addCard(new ShadowedMemories());
        BaseMod.addCard(new NobleShikigami());
        BaseMod.addCard(new HarvestSeason());
        BaseMod.addCard(new RejuvenatingResurrection());
        BaseMod.addCard(new MasterCook());
        BaseMod.addCard(new OmnifacedArchdemon());
        BaseMod.addCard(new EvilEyeDemon());
        BaseMod.addCard(new PhantomBloomPredator());
        BaseMod.addCard(new WonderTree());
        BaseMod.addCard(new Alberta());
        BaseMod.addCard(new Shiro());
        BaseMod.addCard(new TheChariot());
        BaseMod.addCard(new TheChariot_I());
        BaseMod.addCard(new CorruptionOfUnkilling());
        BaseMod.addCard(new UltimateHollow());
        BaseMod.addCard(new LoathingDesire());
        BaseMod.addCard(new ReturningMelody());
        BaseMod.addCard(new EternalDispair());
        BaseMod.addCard(new UnleashTruth());
        BaseMod.addCard(new ResentfulScreaming());
        BaseMod.addCard(new RearriveOne());
        BaseMod.addCard(new EvidenceOfOne());
        BaseMod.addCard(new BlackArtifact2());
        BaseMod.addCard(new WhiteArtifact2());
        BaseMod.addCard(new SoloOfMelody());
        BaseMod.addCard(new FlowOfDispair());
        BaseMod.addCard(new ShootOfUnkilling());
        BaseMod.addCard(new LightOfHollow());
        BaseMod.addCard(new PerjuryOfTruth());
        BaseMod.addCard(new WingsOfDesire());
        BaseMod.addCard(new ExpandingScreaming());
        BaseMod.addCard(new RavenousSweetness());
        BaseMod.addCard(new OmenOfCraving());
        BaseMod.addCard(new BirthOfRavenous());
        BaseMod.addCard(new AdherentOfDesire());
        BaseMod.addCard(new AdherentOfScream());
        BaseMod.addCard(new AdherentOfElimination());
        BaseMod.addCard(new AdherentOfMelody());
        BaseMod.addCard(new AdherentOfHollow());
        BaseMod.addCard(new AdherentOfDispair());
        BaseMod.addCard(new AdherentOfAnnihilation());
        BaseMod.addCard(new Erika());
        BaseMod.addCard(new SecretSkill());
        BaseMod.addCard(new PixieMischief());
        BaseMod.addCard(new OtherworldGatekeeper());
        BaseMod.addCard(new PrinceCatacomb());
        BaseMod.addCard(new WickedRebirth());
        BaseMod.addCard(new V());
        BaseMod.addCard(new DesperadosShot());
        BaseMod.addCard(new Spector());
        BaseMod.addCard(new HonoredFrontguardGeneral());
        BaseMod.addCard(new Aramis());
        BaseMod.addCard(new Porthos());
        BaseMod.addCard(new Athos());
        BaseMod.addCard(new DArtagnan());
        BaseMod.addCard(new MusketeersVow());
        BaseMod.addCard(new FlameNGlass2());
        BaseMod.addCard(new HeroOfTheHunt());
        BaseMod.addCard(new Taketsumi());
        BaseMod.addCard(new Anisage());
        BaseMod.addCard(new UndyingResolve());
        BaseMod.addCard(new SoulGuide());
        BaseMod.addCard(new Krampus());
        BaseMod.addCard(new Itsurugi());
        BaseMod.addCard(new WolflingStruggle());
        BaseMod.addCard(new Yukishima());
        BaseMod.addCard(new Hozumi());
        BaseMod.addCard(new MagnaSaber());
        BaseMod.addCard(new AllFeeling());
        BaseMod.addCard(new Paracelise());
        BaseMod.addCard(new ArcticChimera());
        BaseMod.addCard(new EternalContract());
        BaseMod.addCard(new Lifetime());
        BaseMod.addCard(new TriggerPuppeteer());
        BaseMod.addCard(new WhiteEagleBaptism());
        BaseMod.addCard(new Faker());
        BaseMod.addCard(new RoomServiceDevil());
        BaseMod.addCard(new JubilanceWitch());
        BaseMod.addCard(new AcidGolem());
        BaseMod.addCard(new LostSamurai());
        BaseMod.addCard(new Comfort());
        BaseMod.addCard(new InsatiableDesire());
        BaseMod.addCard(new UnselfishGrace());
        BaseMod.addCard(new TheTemperance());
        BaseMod.addCard(new MadnessCurse());
        BaseMod.addCard(new Arthur());
        BaseMod.addCard(new Tweyen());
        BaseMod.addCard(new CelestialArtifact());
        BaseMod.addCard(new BlessingsOfCreation());
        BaseMod.addCard(new WrathOfNature());
        BaseMod.addCard(new NatureBlessing());
        BaseMod.addCard(new Yggdrasil());
        BaseMod.addCard(new Rola());
        BaseMod.addCard(new Roid_EW());
        BaseMod.addCard(new DivineTreasureGuardian());
        BaseMod.addCard(new DivineTreasureHerald());
        BaseMod.addCard(new JudgmentSpear());
        BaseMod.addCard(new GuiltyShield());
        BaseMod.addCard(new EternalDogma());
        BaseMod.addCard(new SummonDivineTreasure());
        BaseMod.addCard(new Norn());
        BaseMod.addCard(new Rosa());
        BaseMod.addCard(new Cassim());
        BaseMod.addCard(new Craig());
        BaseMod.addCard(new Hanna());
        BaseMod.addCard(new Robopup());
        BaseMod.addCard(new WhirlwindAssault());
        BaseMod.addCard(new UltimateBahmut());
        BaseMod.addCard(new Vyrmedea());
        BaseMod.addCard(new Chastity());
        BaseMod.addCard(new Zerk());
        BaseMod.addCard(new ANewDiscovery());
        BaseMod.addCard(new MagicalPawn());
        BaseMod.addCard(new MagicalStrategy());
        BaseMod.addCard(new MagicalRook());
        BaseMod.addCard(new MagicalKnight());
        BaseMod.addCard(new MysticQueen());
        BaseMod.addCard(new MysticKing());
        BaseMod.addCard(new Ghost());
        BaseMod.addCard(new GiantGhost());
        BaseMod.addCard(new MasqueradeGhost());
        BaseMod.addCard(new Baccherus());
        BaseMod.addCard(new TrickDullahan());
        BaseMod.addCard(new Nobilis());
        BaseMod.addCard(new Slade());
        BaseMod.addCard(new MaliciousBlader());
        BaseMod.addCard(new Waltz());
        BaseMod.addCard(new FullMoonLeap());
        BaseMod.addCard(new GlitteringGold());
        BaseMod.addCard(new FrontDeskFrog());
        BaseMod.addCard(new SuaveBandit());
        BaseMod.addCard(new NightOnTheTown());
        BaseMod.addCard(new MasterfulMusician());
        BaseMod.addCard(new NobleShieldmaiden());
        BaseMod.addCard(new JiemonThiefLord());
        BaseMod.addCard(new OpulentStrategist());
        BaseMod.addCard(new GracefulManeuver());
        BaseMod.addCard(new MorgensternMaid());
        BaseMod.addCard(new FlameSoldier());
        BaseMod.addCard(new MachKnight());
        BaseMod.addCard(new ReturnFromTheBrink());
        BaseMod.addCard(new AmerroSpearKnight());
        BaseMod.addCard(new HeroicEntry());
        BaseMod.addCard(new ValiantFencer());
        BaseMod.addCard(new HeroOfAntiquity());
        BaseMod.addCard(new CosmosFang());
        BaseMod.addCard(new Blitz());
        BaseMod.addCard(new Check());
        BaseMod.addCard(new GemstoneWingy());
        BaseMod.addCard(new DiamondMaster());
        BaseMod.addCard(new SapphirePriestess());
        BaseMod.addCard(new BejeweledShrine());
        BaseMod.addCard(new ImpiousBishop());
        BaseMod.addCard(new Magachiyo());
        BaseMod.addCard(new LeafshadeAssassin());
        BaseMod.addCard(new VerdantLieutenant());
        BaseMod.addCard(new BuddingInitiate());
        BaseMod.addCard(new WardenOfBalms());
        BaseMod.addCard(new Wimael());
        BaseMod.addCard(new BenevolentElf());
        BaseMod.addCard(new Simael());
        BaseMod.addCard(new WardenOfTheArcane());
        BaseMod.addCard(new BladeRain());
        BaseMod.addCard(new AstrologicalSorcerer());
        BaseMod.addCard(new VolunteerTestSubject());
        BaseMod.addCard(new DevotedResearcher());
        BaseMod.addCard(new ObsessiveScholar());
        BaseMod.addCard(new Sephie());
        BaseMod.addCard(new SkullFish());
        BaseMod.addCard(new Istyndet());
        BaseMod.addCard(new AbyssalColonel());
        BaseMod.addCard(new UnderworldLieutenant());
        BaseMod.addCard(new FallenSergeant());
        BaseMod.addCard(new WardenOfCorpses());
        BaseMod.addCard(new Myroel());
        BaseMod.addCard(new GhastlyBanishment());
        BaseMod.addCard(new Garodeth());
        BaseMod.addCard(new ViciousBlitzer());
        BaseMod.addCard(new SteamrollingTank());
        BaseMod.addCard(new RagingCommander());
        BaseMod.addCard(new Genomuel());
        BaseMod.addCard(new WardenOfDecay());
        BaseMod.addCard(new Erralde());
        BaseMod.addCard(new ExecutorOfTheOath());
        BaseMod.addCard(new AgentOfTheCommandments());
        BaseMod.addCard(new WardenOfTheWings());
        BaseMod.addCard(new Uneriel());
        BaseMod.addCard(new Cutthroat());
        BaseMod.addCard(new IronforgedRightHand());
        BaseMod.addCard(new SmeltworkBodyguard());
        BaseMod.addCard(new BlackrustUnderling());
        BaseMod.addCard(new WardenOfTrigger());
        BaseMod.addCard(new Kyrzael());
        BaseMod.addCard(new DreadPirateFlag());
        BaseMod.addCard(new TidalGunner());
        BaseMod.addCard(new DeepSeaScout());
        BaseMod.addCard(new StormWrackedFirstMate());
        BaseMod.addCard(new Barbaros());
        BaseMod.addCard(new Radiel());
        BaseMod.addCard(new WardenOfHonor());
        BaseMod.addCard(new IronwroughtDefender());
        BaseMod.addCard(new Windslasher());
        BaseMod.addCard(new GeneralMaximus());
        BaseMod.addCard(new OliviaSylvia());
        BaseMod.addCard(new SacredSheep());
        BaseMod.addCard(new Judith());
        BaseMod.addCard(new Kali());
        BaseMod.addCard(new DancingMiniSoulDevil());
        BaseMod.addCard(new Signa());
        BaseMod.addCard(new Yuzuki());
        BaseMod.addCard(new ScorpionOfTheDepths());
        BaseMod.addCard(new CrimsonVirtue());
        BaseMod.addCard(new Seox());
        BaseMod.addCard(new shadowverse.cards.Neutral.Neutral.Alice());
        BaseMod.addCard(new CrimsonDesire());
        BaseMod.addCard(new DestructiveSuccubus());
        BaseMod.addCard(new Castelle());
        BaseMod.addCard(new VerdantPrayer());
        BaseMod.addCard(new MysterianParty());
        BaseMod.addCard(new CurseOfSuffering());
        BaseMod.addCard(new Amaryllis());
        BaseMod.addCard(new FellTransformation());
        BaseMod.addCard(new MachSpeedMaron());
        BaseMod.addCard(new BadGirlLife());
        BaseMod.addCard(new Lou_Bishop());
        BaseMod.addCard(new OrchidExaminationHall());
        BaseMod.addCard(new BambeautyExaminationHall());
        BaseMod.addCard(new MumExaminationHall());
        BaseMod.addCard(new PlumExaminationHall());
        BaseMod.addCard(new Gruinne());
        BaseMod.addCard(new GhostHunter());
        BaseMod.addCard(new Leeds());
        BaseMod.addCard(new DemonEyeGangster());
        BaseMod.addCard(new Arka());
        BaseMod.addCard(new Vulgus());
        BaseMod.addCard(new PureflowerMaiden());
        BaseMod.addCard(new Kira());
        BaseMod.addCard(new CyclicalGuidance());
        BaseMod.addCard(new Verdilia());
        BaseMod.addCard(new SumoMechanic());
        BaseMod.addCard(new Gioffre());
        BaseMod.addCard(new Lucius_N());
        BaseMod.addCard(new BellWitch());
        BaseMod.addCard(new Memento());
        BaseMod.addCard(new PureflameLady());
        BaseMod.addCard(new Galom());
        BaseMod.addCard(new Elluvia());
        BaseMod.addCard(new RoboticsReporter());
        BaseMod.addCard(new Filly());
        BaseMod.addCard(new CorpseKingCommand());
        BaseMod.addCard(new Cornelius());
        BaseMod.addCard(new MajesticSorcery());
        BaseMod.addCard(new AnneAndGrea());
        BaseMod.addCard(new Lyelth());
        BaseMod.addCard(new LyelthMarionette());
        BaseMod.addCard(new UnseenStrength());
        BaseMod.addCard(new LeciaSkySaber());
        BaseMod.addCard(new NanoTheDawnblade());
        BaseMod.addCard(new LeciaNano());
        BaseMod.addCard(new TwilightBlade());
        BaseMod.addCard(new DimensionCrack());
        BaseMod.addCard(new MagicalBishop());
        BaseMod.addCard(new ThicketOfGnarledHands());
        BaseMod.addCard(new FighterFortitude());
        BaseMod.addCard(new SepticShrink());
        BaseMod.addCard(new Gawain());
        BaseMod.addCard(new Weiss());
        BaseMod.addCard(new DeathscytheHound());
        BaseMod.addCard(new PinionPrayer());
        BaseMod.addCard(new JudgmentSpearMaster());
        BaseMod.addCard(new HolyLightningBird());
        BaseMod.addCard(new Strike_D());
        BaseMod.addCard(new Defend_D());
        BaseMod.addCard(new DragonOracle());
        BaseMod.addCard(new DragonWarrior());
        BaseMod.addCard(new BlazingBreath());
        BaseMod.addCard(new SeabrandDragon());
        BaseMod.addCard(new DraconicFervor());
        BaseMod.addCard(new Rahab());
        BaseMod.addCard(new DragonicCall());
        BaseMod.addCard(new WardenOfTheAdamantClaw());
        BaseMod.addCard(new ScaleboundPlight());
        BaseMod.addCard(new IvoryDragon());
        BaseMod.addCard(new LightningVelociraptor());
        BaseMod.addCard(new WildMana());
        BaseMod.addCard(new WhirlwindPteranodon());
        BaseMod.addCard(new HellFlameDragon());
        BaseMod.addCard(new Python());
        BaseMod.addCard(new AugiteWyrm());
        BaseMod.addCard(new HotheadedMarauder());
        BaseMod.addCard(new RazorClawedThief());
        BaseMod.addCard(new ScorchedEarthTyrant());
        BaseMod.addCard(new Antemaria());
        BaseMod.addCard(new Drazael());
        BaseMod.addCard(new DragonewtMight());
        BaseMod.addCard(new TouchingThoughts());
        BaseMod.addCard(new ManagarmrScout());
        BaseMod.addCard(new DragonCounsel());
        BaseMod.addCard(new Ghandagoza());
        BaseMod.addCard(new Dagon());
        BaseMod.addCard(new ImperialDragoon());
        BaseMod.addCard(new ShipsbanePlesiosaurus());
        BaseMod.addCard(new DraconicCounsel());
        BaseMod.addCard(new DracomancerRites());
        BaseMod.addCard(new Kit());
        BaseMod.addCard(new OrbedCancer());
        BaseMod.addCard(new PumpkinDragon());
        BaseMod.addCard(new MermaidSinger());
        BaseMod.addCard(new GoldenDragonDen());
        BaseMod.addCard(new SiLong());
        BaseMod.addCard(new TidalTyranny());
        BaseMod.addCard(new WaterwyrmBlessing());
        BaseMod.addCard(new WindblastDragon());
        BaseMod.addCard(new PolyphonicRoar());
        BaseMod.addCard(new OtohimeVanguard());
        BaseMod.addCard(new DragonEmpressOtohime());
        BaseMod.addCard(new ResplendentPhoenix());
        BaseMod.addCard(new PoseidonGuard());
        BaseMod.addCard(new Poseidon());
        BaseMod.addCard(new EncounterFromTheDeep());
        BaseMod.addCard(new Argente());
        BaseMod.addCard(new Lumiore());
        BaseMod.addCard(new NoirNBlanc());
        BaseMod.addCard(new DragoonMedic());
        BaseMod.addCard(new VerdantRebirth());
        BaseMod.addCard(new DisdainfulRending());
        BaseMod.addCard(new RowenRoar());
        BaseMod.addCard(new ValdainClaw());
        BaseMod.addCard(new CursedFuror());
        BaseMod.addCard(new ServantOfDisdain());
        BaseMod.addCard(new DiscipleOfDisdain());
        BaseMod.addCard(new ArdentTorch());
        BaseMod.addCard(new AdherentOfArdor());
        BaseMod.addCard(new SneerOfDisdain());
        BaseMod.addCard(new PrimeDragonKeeper());
        BaseMod.addCard(new DragonsongFlute());
        BaseMod.addCard(new DragonWeapon());
        BaseMod.addCard(new DraconicArmor());
        BaseMod.addCard(new SwiftbladeDragonewt());
        BaseMod.addCard(new Draconir());
        BaseMod.addCard(new LanceLizard());
        BaseMod.addCard(new DragonSmash());
        BaseMod.addCard(new HammerDragonewt());
        BaseMod.addCard(new Georgius());
        BaseMod.addCard(new Ethica());
        BaseMod.addCard(new SpringwellDragonKeeper());
        BaseMod.addCard(new WyrmfireEngineer());
        BaseMod.addCard(new Garyu());
        BaseMod.addCard(new GoldenDragon());
        BaseMod.addCard(new SilverDragon());
        BaseMod.addCard(new RowenCard());
        BaseMod.addCard(new WildfangDragonewt());
        BaseMod.addCard(new Heliodragon());
        BaseMod.addCard(new RockbackAnkylosaurus());
        BaseMod.addCard(new SteelcapPachycephalosaurus());
        BaseMod.addCard(new AzureDragon());
        BaseMod.addCard(new CrimsonDragon());
        BaseMod.addCard(new TurncoatDragonSummoner());
        BaseMod.addCard(new SoaringDragonewt());
        BaseMod.addCard(new WiseDragonewtScholar());
        BaseMod.addCard(new LiliumDragon());
        BaseMod.addCard(new LiliumHatchling());
        BaseMod.addCard(new DraconicCreation());
        BaseMod.addCard(new Lilium());
        BaseMod.addCard(new IronscaleSerpentDrake());
        BaseMod.addCard(new Byron());
        BaseMod.addCard(new ArmorBurst());
        BaseMod.addCard(new Reggie());
        BaseMod.addCard(new LavateinnDragon());
        BaseMod.addCard(new LavateinnDragonAttackForm());
        BaseMod.addCard(new LavateinnDragonDefenseForm());
        BaseMod.addCard(new LavateinnDragonBlastForm());
        BaseMod.addCard(new Zoe());
        BaseMod.addCard(new TheJustice());
        BaseMod.addCard(new DragonDevouringDread());
        BaseMod.addCard(new NewfoundAllies());
        BaseMod.addCard(new DragonplateWarrior());
        BaseMod.addCard(new Lindworm());
        BaseMod.addCard(new VirtuousLindworm());
        BaseMod.addCard(new IniquitousLindworm());
        BaseMod.addCard(new Djeana());
        BaseMod.addCard(new WildfireTyrannosaur());
        BaseMod.addCard(new InfernoDragon());
        BaseMod.addCard(new DragonHoard());
        BaseMod.addCard(new HypersonicDragonewt());
        BaseMod.addCard(new DragonAwakening());
        BaseMod.addCard(new Sandstorm());
        BaseMod.addCard(new WhimsicalMermaid());
        BaseMod.addCard(new PrimeConflagration());
        BaseMod.addCard(new BlazingDragonewt());
        BaseMod.addCard(new CoralShark());
        BaseMod.addCard(new WindsweptDragonewt());
        BaseMod.addCard(new PropheticDragon());
        BaseMod.addCard(new GrandSlamTamer());
        BaseMod.addCard(new HowlingConflagration());
        BaseMod.addCard(new Dracu());
        BaseMod.addCard(new Joe());
        BaseMod.addCard(new Romelia());
        BaseMod.addCard(new CelestialDragoon());
        BaseMod.addCard(new Gunbein());
        BaseMod.addCard(new Roy());
        BaseMod.addCard(new GenesisDragon());
        BaseMod.addCard(new Jerva());
        BaseMod.addCard(new FangsOfArdentDestruction());
        BaseMod.addCard(new OmenOfDisdain());
        BaseMod.addCard(new Masamune());
        BaseMod.addCard(new DevotedDragon());
        BaseMod.addCard(new Aiela());
        BaseMod.addCard(new WhitefrostWhisper());
        BaseMod.addCard(new Filene());
        BaseMod.addCard(new Forte());
        BaseMod.addCard(new InfiniflameDragon());
        BaseMod.addCard(new DragonlifeBlade());
        BaseMod.addCard(new DragonstrifeBlade());
        BaseMod.addCard(new Hiro());
        BaseMod.addCard(new Oberon());
        BaseMod.addCard(new BindingRitual());
        BaseMod.addCard(new ColossalSummoning());
        BaseMod.addCard(new Fafnir_D());
        BaseMod.addCard(new PlatinumDragonblader());
        BaseMod.addCard(new HellfireStrike());
        BaseMod.addCard(new Charon());
        BaseMod.addCard(new Gadel());
        BaseMod.addCard(new Leoparion(0));
        BaseMod.addCard(new PeckishOwlcat(0));
        BaseMod.addCard(new Doublame());
        BaseMod.addCard(new JewelShine());
        BaseMod.addCard(new SpineLucille());
        BaseMod.addCard(new SisterlyBonds());
        BaseMod.addCard(new Lazuli());
        BaseMod.addCard(new Evamia());
        BaseMod.addCard(new Shin());
        BaseMod.addCard(new ChaosAura());
        BaseMod.addCard(new Odin2_Copy());
        BaseMod.addCard(new Shin_Token());
        BaseMod.addCard(new VengefulMantis());
        BaseMod.addCard(new VirulentHornet());
        BaseMod.addCard(new VeiledShudderfly());
        BaseMod.addCard(new VerdantLieutenant());
        BaseMod.addCard(new ViciousScorpion());
        BaseMod.addCard(new Zebet());
        BaseMod.addCard(new Lvbu());
        BaseMod.addCard(new SlaughteringDragonewt());
        BaseMod.addCard(new TheTower());
        BaseMod.addCard(new TheTower_I());
        BaseMod.addCard(new Rogers());
        logger.info("Success");
    }

    public void receiveEditCharacters() {
        logger.info("Adding char");
        BaseMod.addCharacter(new Witchcraft("Witchcraft"), "img/character/Witchcraft/button1.png", "img/character/Witchcraft/background.png", Witchcraft.Enums.WITCHCRAFT);
        BaseMod.addCharacter(new Elf(("Elf")), "img/character/Elf/button.png", "img/character/Elf/background.png", Elf.Enums.Elf);
        BaseMod.addCharacter(new Necromancer(("Necromancer")), "img/character/Necromancer/button.png", "img/character/Necromancer/background.png", Necromancer.Enums.Necromancer);
        BaseMod.addCharacter(new Vampire(("Vamp")), "img/character/Vampire/button.png", "img/character/Vampire/background.png", Vampire.Enums.Vampire);
        BaseMod.addCharacter(new Nemesis(("Nemesis")), "img/character/Nemesis/button.png", "img/character/Nemesis/background.png", Nemesis.Enums.Nemesis);
        BaseMod.addCharacter(new Royal(("Royal")), "img/character/Royal/button.png", "img/character/Royal/background.png", Royal.Enums.Royal);
        BaseMod.addCharacter(new Bishop(("Bishop")), "img/character/Bishop/button.png", "img/character/Bishop/background.png", Bishop.Enums.Bishop);
        BaseMod.addCharacter(new Dragon(("Dragon")), "img/character/Dragon/button.png", "img/character/Dragon/background.png", Dragon.Enums.Dragon);

    }

    public static void saveSettings() {
        try {
            SpireConfig config = new SpireConfig("Shadowverse", "settings", ShadowverseDefaults);
            for (int i = 0; i <= CharacterSelectScreenPatches.characters.length - 1; i++) {
                config.setInt(CardCrawlGame.saveSlot + "reskinCount" + i, (CharacterSelectScreenPatches.characters[i]).reskinCount);
            }
            config.save();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static void loadSettings() {
        try {
            SpireConfig config = new SpireConfig("Shadowverse", "settings", ShadowverseDefaults);
            config.load();
            for (int i = 0; i <= CharacterSelectScreenPatches.characters.length - 1; i++) {
                (CharacterSelectScreenPatches.characters[i]).reskinCount = config.getInt(CardCrawlGame.saveSlot + "reskinCount" + i);
                if ((CharacterSelectScreenPatches.characters[i]).reskinCount > (CharacterSelectScreenPatches.characters[i]).skins.length - 1)
                    (CharacterSelectScreenPatches.characters[i]).reskinCount = 0;
            }
        } catch (Exception e) {
            e.printStackTrace();
            clearSettings();
        }
    }

    public static void clearSettings() {
        saveSettings();
    }

    static {
        groupActive = new boolean[10];
    }
}

